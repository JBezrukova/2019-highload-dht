<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (4,057 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=55629] (994 samples, 24.50%)</title><rect x="10.0" y="915.0" width="289.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="13.0" y="926.0">[NIO Selector #0 tid=55629]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="10.0" y="899.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (993 samples, 24.48%)</title><rect x="10.3" y="899.0" width="288.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.3" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (32 samples, 0.79%)</title><rect x="10.3" y="883.0" width="9.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (29 samples, 0.71%)</title><rect x="11.2" y="867.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="14.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.64%)</title><rect x="11.5" y="851.0" width="7.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="14.5" y="862.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="11.5" y="835.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="14.5" y="846.0"></text>
</g>
<g>
<title>epoll_wait (25 samples, 0.62%)</title><rect x="11.7" y="835.0" width="7.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="14.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.62%)</title><rect x="11.7" y="819.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="14.7" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="11.7" y="803.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="14.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.59%)</title><rect x="12.0" y="803.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="15.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (24 samples, 0.59%)</title><rect x="12.0" y="787.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="15.0" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (24 samples, 0.59%)</title><rect x="12.0" y="771.0" width="7.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="15.0" y="782.0"></text>
</g>
<g>
<title>ep_poll (23 samples, 0.57%)</title><rect x="12.0" y="755.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="15.0" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (9 samples, 0.22%)</title><rect x="12.3" y="739.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="15.3" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.05%)</title><rect x="14.1" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="17.1" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.05%)</title><rect x="14.1" y="707.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="17.1" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.02%)</title><rect x="14.4" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="17.4" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="14.4" y="675.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="17.4" y="686.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="14.7" y="723.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="17.7" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="14.7" y="707.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="17.7" y="718.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="14.7" y="691.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="17.7" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="14.7" y="675.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="17.7" y="686.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="14.9" y="739.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="17.9" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.30%)</title><rect x="15.2" y="739.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="18.2" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.30%)</title><rect x="15.2" y="723.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.2" y="734.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.30%)</title><rect x="15.2" y="707.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="18.2" y="718.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.30%)</title><rect x="15.2" y="691.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="18.2" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.27%)</title><rect x="15.5" y="675.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="18.5" y="686.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="18.7" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="21.7" y="766.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="19.0" y="851.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="22.0" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="19.3" y="835.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="22.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (961 samples, 23.69%)</title><rect x="19.6" y="883.0" width="279.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.6" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (961 samples, 23.69%)</title><rect x="19.6" y="867.0" width="279.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.6" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (946 samples, 23.32%)</title><rect x="19.6" y="851.0" width="275.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.6" y="862.0">one/nio/http/HttpSession.processHttpB..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (937 samples, 23.10%)</title><rect x="19.9" y="835.0" width="272.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.9" y="846.0">one/nio/http/HttpSession.handleParse..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (936 samples, 23.07%)</title><rect x="20.2" y="819.0" width="272.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.2" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (935 samples, 23.05%)</title><rect x="20.5" y="803.0" width="271.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.5" y="814.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (505 samples, 12.45%)</title><rect x="20.5" y="787.0" width="146.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.5" y="798.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (503 samples, 12.40%)</title><rect x="20.8" y="771.0" width="146.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.8" y="782.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/net/Session.write (503 samples, 12.40%)</title><rect x="20.8" y="755.0" width="146.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.8" y="766.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (503 samples, 12.40%)</title><rect x="20.8" y="739.0" width="146.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.8" y="750.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="20.8" y="723.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="23.8" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="20.8" y="707.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="23.8" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="20.8" y="691.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="23.8" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="20.8" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="23.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="20.8" y="659.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="20.8" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="23.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (502 samples, 12.37%)</title><rect x="21.1" y="723.0" width="146.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.1" y="734.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (502 samples, 12.37%)</title><rect x="21.1" y="707.0" width="146.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.1" y="718.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.05%)</title><rect x="21.6" y="691.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="24.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="21.9" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="24.9" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="21.9" y="659.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="24.9" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="21.9" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="24.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="22.2" y="691.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="25.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="22.2" y="675.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="25.2" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.17%)</title><rect x="22.2" y="659.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="25.2" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.12%)</title><rect x="22.2" y="643.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="25.2" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.10%)</title><rect x="22.2" y="627.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="25.2" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="22.2" y="611.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="25.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="22.8" y="611.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="25.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="22.8" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="22.8" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.8" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="23.4" y="627.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.4" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="23.4" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="26.4" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="23.4" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="26.4" y="606.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.05%)</title><rect x="23.7" y="643.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="26.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="23.7" y="627.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.7" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="23.7" y="611.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="26.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="23.7" y="595.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="26.7" y="606.0"></text>
</g>
<g>
<title>__send (1 samples, 0.02%)</title><rect x="24.3" y="659.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="27.3" y="670.0"></text>
</g>
<g>
<title>__send (490 samples, 12.08%)</title><rect x="24.5" y="691.0" width="142.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="27.5" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (488 samples, 12.03%)</title><rect x="25.1" y="675.0" width="142.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.1" y="686.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>do_syscall_64 (488 samples, 12.03%)</title><rect x="25.1" y="659.0" width="142.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="28.1" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (480 samples, 11.83%)</title><rect x="25.4" y="643.0" width="139.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="28.4" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (480 samples, 11.83%)</title><rect x="25.4" y="627.0" width="139.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="28.4" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (479 samples, 11.81%)</title><rect x="25.4" y="611.0" width="139.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="28.4" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (478 samples, 11.78%)</title><rect x="25.4" y="595.0" width="139.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="28.4" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="25.4" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="28.4" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (477 samples, 11.76%)</title><rect x="25.7" y="579.0" width="138.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.7" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="25.7" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="28.7" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="26.0" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="29.0" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="26.3" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="29.3" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (474 samples, 11.68%)</title><rect x="26.6" y="563.0" width="137.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.6" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="26.6" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="29.6" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="26.9" y="547.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="29.9" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.05%)</title><rect x="26.9" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.9" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.12%)</title><rect x="27.5" y="547.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="30.5" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.12%)</title><rect x="27.5" y="531.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="30.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="27.5" y="515.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.5" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (1 samples, 0.02%)</title><rect x="27.7" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="30.7" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="27.7" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="30.7" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.05%)</title><rect x="28.0" y="515.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="31.0" y="526.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="28.3" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="31.3" y="510.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="28.3" y="483.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.3" y="494.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="28.3" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="31.3" y="478.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="28.6" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="31.6" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="28.9" y="547.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="31.9" y="558.0"></text>
</g>
<g>
<title>tcp_push (462 samples, 11.39%)</title><rect x="29.2" y="547.0" width="134.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="32.2" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (461 samples, 11.36%)</title><rect x="29.5" y="531.0" width="134.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="32.5" y="542.0">__tcp_push_pendin..</text>
</g>
<g>
<title>tcp_write_xmit (461 samples, 11.36%)</title><rect x="29.5" y="515.0" width="134.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.5" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (459 samples, 11.31%)</title><rect x="29.5" y="499.0" width="133.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="32.5" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="30.1" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.1" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (455 samples, 11.22%)</title><rect x="30.4" y="483.0" width="132.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="33.4" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (455 samples, 11.22%)</title><rect x="30.4" y="467.0" width="132.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="33.4" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (455 samples, 11.22%)</title><rect x="30.4" y="451.0" width="132.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="33.4" y="462.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="30.4" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="33.4" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="30.7" y="435.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="33.7" y="446.0"></text>
</g>
<g>
<title>ip_output (453 samples, 11.17%)</title><rect x="30.9" y="435.0" width="131.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="33.9" y="446.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="30.9" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="33.9" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (452 samples, 11.14%)</title><rect x="31.2" y="419.0" width="131.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="34.2" y="430.0">ip_finish_output</text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="31.2" y="403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="34.2" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (451 samples, 11.12%)</title><rect x="31.5" y="403.0" width="131.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="34.5" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (447 samples, 11.02%)</title><rect x="31.5" y="387.0" width="130.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="34.5" y="398.0">__local_bh_enabl..</text>
</g>
<g>
<title>do_softirq.part.21 (447 samples, 11.02%)</title><rect x="31.5" y="371.0" width="130.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="34.5" y="382.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (447 samples, 11.02%)</title><rect x="31.5" y="355.0" width="130.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="34.5" y="366.0">do_softirq_own_s..</text>
</g>
<g>
<title>__softirqentry_text_start (447 samples, 11.02%)</title><rect x="31.5" y="339.0" width="130.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="34.5" y="350.0">__softirqentry_t..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="31.5" y="323.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="34.5" y="334.0"></text>
</g>
<g>
<title>net_rx_action (446 samples, 10.99%)</title><rect x="31.8" y="323.0" width="129.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="34.8" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (446 samples, 10.99%)</title><rect x="31.8" y="307.0" width="129.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="34.8" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (445 samples, 10.97%)</title><rect x="32.1" y="291.0" width="129.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="35.1" y="302.0">__netif_receive_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (445 samples, 10.97%)</title><rect x="32.1" y="275.0" width="129.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.1" y="286.0">__netif_receive_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="32.1" y="259.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="35.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv (443 samples, 10.92%)</title><rect x="32.7" y="259.0" width="128.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.7" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (442 samples, 10.89%)</title><rect x="32.7" y="243.0" width="128.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="35.7" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (442 samples, 10.89%)</title><rect x="32.7" y="227.0" width="128.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="35.7" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (442 samples, 10.89%)</title><rect x="32.7" y="211.0" width="128.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.7" y="222.0">ip_local_deliver..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (441 samples, 10.87%)</title><rect x="32.7" y="195.0" width="128.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.7" y="206.0">ip_protocol_deli..</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="32.7" y="179.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="35.7" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="33.0" y="179.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="36.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="33.3" y="179.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="36.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (438 samples, 10.80%)</title><rect x="33.6" y="179.0" width="127.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="36.6" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="33.9" y="163.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="36.9" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="34.1" y="163.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="37.1" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="34.4" y="163.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="37.4" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.05%)</title><rect x="34.4" y="147.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="37.4" y="158.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.05%)</title><rect x="35.0" y="163.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="38.0" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="35.6" y="163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="38.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (430 samples, 10.60%)</title><rect x="35.9" y="163.0" width="125.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="38.9" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (429 samples, 10.57%)</title><rect x="35.9" y="147.0" width="124.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="38.9" y="158.0">tcp_rcv_establi..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="35.9" y="131.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="38.9" y="142.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.02%)</title><rect x="36.2" y="131.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="39.2" y="142.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.22%)</title><rect x="36.5" y="131.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="39.5" y="142.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.02%)</title><rect x="37.3" y="115.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="40.3" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.07%)</title><rect x="37.6" y="115.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="40.6" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="37.9" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="40.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="37.9" y="83.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="40.9" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.02%)</title><rect x="38.2" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="41.2" y="110.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="38.5" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="41.5" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="38.8" y="115.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="41.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (416 samples, 10.25%)</title><rect x="39.1" y="131.0" width="121.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="42.1" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (414 samples, 10.20%)</title><rect x="39.4" y="115.0" width="120.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="42.4" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (413 samples, 10.18%)</title><rect x="39.7" y="99.0" width="120.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="42.7" y="110.0">__wake_up_sync_..</text>
</g>
<g>
<title>__wake_up_common_lock (412 samples, 10.16%)</title><rect x="39.7" y="83.0" width="119.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="42.7" y="94.0">__wake_up_commo..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (412 samples, 10.16%)</title><rect x="39.7" y="67.0" width="119.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="42.7" y="78.0">_raw_spin_unloc..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="159.5" y="83.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="162.5" y="94.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="159.8" y="115.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="162.8" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="160.1" y="131.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="163.1" y="142.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="160.1" y="115.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="163.1" y="126.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="160.4" y="131.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="163.4" y="142.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.02%)</title><rect x="160.7" y="147.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="163.7" y="158.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="161.0" y="195.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="164.0" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.02%)</title><rect x="161.2" y="243.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="164.2" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.10%)</title><rect x="161.5" y="387.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="164.5" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.10%)</title><rect x="161.5" y="371.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="164.5" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.07%)</title><rect x="161.5" y="355.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="164.5" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="161.8" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="164.8" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="162.1" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="165.1" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="162.4" y="355.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="165.4" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="162.4" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="165.4" y="350.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="162.7" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="165.7" y="494.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="163.0" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="166.0" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="163.0" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="166.0" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="163.3" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="166.3" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.07%)</title><rect x="163.6" y="547.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="166.6" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.07%)</title><rect x="163.6" y="531.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="166.6" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="163.6" y="515.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="166.6" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="164.2" y="515.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.2" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="164.4" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="167.4" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="164.4" y="579.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="167.4" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="164.4" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="167.4" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="164.4" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="167.4" y="558.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="164.4" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="167.4" y="542.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="164.4" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.4" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="164.7" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="167.7" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="164.7" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="167.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="164.7" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="167.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 0.17%)</title><rect x="165.0" y="643.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="168.0" y="654.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.17%)</title><rect x="165.0" y="627.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="168.0" y="638.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.17%)</title><rect x="165.0" y="611.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="168.0" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.17%)</title><rect x="165.0" y="595.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="168.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.02%)</title><rect x="167.1" y="771.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.1" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="167.1" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="170.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="167.1" y="739.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="170.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="167.1" y="723.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="170.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.05%)</title><rect x="167.4" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="167.4" y="771.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="167.6" y="771.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="167.6" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="167.6" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="167.6" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (428 samples, 10.55%)</title><rect x="167.9" y="787.0" width="124.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.9" y="798.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="167.9" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="167.9" y="755.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.9" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="167.9" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="167.9" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.9" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="167.9" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="167.9" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="168.2" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="168.2" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.2" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="168.2" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (426 samples, 10.50%)</title><rect x="168.5" y="771.0" width="123.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.5" y="782.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="168.5" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="168.5" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="168.5" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="168.5" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="168.5" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="168.5" y="675.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="168.5" y="659.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.5" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="168.5" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.5" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="168.5" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.5" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="168.5" y="611.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="171.5" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="168.5" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="171.5" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="168.5" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="171.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.upsert (425 samples, 10.48%)</title><rect x="168.8" y="755.0" width="123.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.8" y="766.0">ru/mail/polis/d..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (422 samples, 10.40%)</title><rect x="168.8" y="739.0" width="122.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.8" y="750.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (422 samples, 10.40%)</title><rect x="168.8" y="723.0" width="122.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.8" y="734.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (94 samples, 2.32%)</title><rect x="168.8" y="707.0" width="27.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="171.8" y="718.0">J..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.07%)</title><rect x="168.8" y="691.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="171.8" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="169.4" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="172.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="169.4" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="172.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="169.4" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="172.4" y="654.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.05%)</title><rect x="169.7" y="691.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="172.7" y="702.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="170.3" y="691.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="173.3" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.05%)</title><rect x="170.6" y="691.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="173.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="170.8" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="173.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="170.8" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="173.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="170.8" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="173.8" y="654.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="171.1" y="691.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="174.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="171.4" y="691.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="174.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="172.0" y="691.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="175.0" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="172.0" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="175.0" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="172.0" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="175.0" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="172.0" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="175.0" y="654.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (82 samples, 2.02%)</title><rect x="172.3" y="691.0" width="23.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="175.3" y="702.0">r..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.07%)</title><rect x="172.6" y="675.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="175.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="172.9" y="659.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="175.9" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="172.9" y="643.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="175.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="172.9" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="175.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (78 samples, 1.92%)</title><rect x="173.5" y="675.0" width="22.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="176.5" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="173.5" y="659.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="176.5" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="173.5" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="176.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="173.5" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="176.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="173.5" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="176.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (75 samples, 1.85%)</title><rect x="173.8" y="659.0" width="21.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="176.8" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (74 samples, 1.82%)</title><rect x="173.8" y="643.0" width="21.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="176.8" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.02%)</title><rect x="173.8" y="627.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="176.8" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="173.8" y="611.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="176.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="173.8" y="595.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="176.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="173.8" y="579.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="176.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (72 samples, 1.77%)</title><rect x="174.0" y="627.0" width="21.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="177.0" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="174.0" y="611.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="177.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.02%)</title><rect x="174.3" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="177.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (66 samples, 1.63%)</title><rect x="174.6" y="611.0" width="19.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="177.6" y="622.0"></text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.10%)</title><rect x="175.2" y="595.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="178.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="175.8" y="579.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="178.8" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="175.8" y="563.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="178.8" y="574.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.12%)</title><rect x="176.4" y="595.0" width="1.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="179.4" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="176.4" y="579.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="179.4" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="176.4" y="563.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="179.4" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.12%)</title><rect x="176.4" y="547.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="179.4" y="558.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.12%)</title><rect x="176.4" y="531.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="179.4" y="542.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.12%)</title><rect x="176.4" y="515.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="179.4" y="526.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.12%)</title><rect x="176.4" y="499.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="179.4" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.12%)</title><rect x="176.4" y="483.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="179.4" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.12%)</title><rect x="176.4" y="467.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="179.4" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="177.8" y="595.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="180.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="177.8" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="180.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="177.8" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="180.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="177.8" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="180.8" y="558.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="178.1" y="595.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="181.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.02%)</title><rect x="178.7" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="181.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.02%)</title><rect x="179.0" y="595.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="182.0" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="179.0" y="579.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="182.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (9 samples, 0.22%)</title><rect x="179.3" y="595.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="182.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (8 samples, 0.20%)</title><rect x="179.3" y="579.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="182.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (8 samples, 0.20%)</title><rect x="179.3" y="563.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="182.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (2 samples, 0.05%)</title><rect x="179.6" y="547.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="182.6" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="179.9" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="182.9" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="179.9" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="182.9" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="179.9" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.02%)</title><rect x="180.2" y="547.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="183.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (4 samples, 0.10%)</title><rect x="180.4" y="547.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="183.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.07%)</title><rect x="180.7" y="531.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="183.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.02%)</title><rect x="180.7" y="515.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="183.7" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="180.7" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="183.7" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="180.7" y="483.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="183.7" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="180.7" y="467.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="183.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.05%)</title><rect x="181.0" y="515.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="184.0" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="181.0" y="499.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="184.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="181.3" y="499.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="184.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.02%)</title><rect x="181.6" y="579.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="184.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.02%)</title><rect x="181.9" y="595.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="184.9" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="181.9" y="579.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="184.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="181.9" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="184.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="181.9" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="184.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="181.9" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="184.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (21 samples, 0.52%)</title><rect x="182.2" y="595.0" width="6.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="185.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (21 samples, 0.52%)</title><rect x="182.2" y="579.0" width="6.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="185.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (21 samples, 0.52%)</title><rect x="182.2" y="563.0" width="6.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="185.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (21 samples, 0.52%)</title><rect x="182.2" y="547.0" width="6.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="185.2" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.02%)</title><rect x="182.2" y="531.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="185.2" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="182.2" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="185.2" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="182.2" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="185.2" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="182.2" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="185.2" y="494.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.02%)</title><rect x="182.5" y="531.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="185.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.02%)</title><rect x="182.8" y="531.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="185.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (18 samples, 0.44%)</title><rect x="183.1" y="531.0" width="5.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="186.1" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.02%)</title><rect x="183.1" y="515.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="186.1" y="526.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="183.1" y="499.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="186.1" y="510.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (16 samples, 0.39%)</title><rect x="183.3" y="515.0" width="4.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="186.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (15 samples, 0.37%)</title><rect x="183.6" y="499.0" width="4.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="186.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (8 samples, 0.20%)</title><rect x="185.7" y="483.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="188.7" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.02%)</title><rect x="186.0" y="467.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="189.0" y="478.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="186.0" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.0" y="462.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="186.0" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="189.0" y="446.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="186.0" y="419.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="189.0" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="186.0" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="189.0" y="414.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="186.0" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="189.0" y="398.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="186.0" y="371.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="189.0" y="382.0"></text>
</g>
<g>
<title>rh_timer_func (1 samples, 0.02%)</title><rect x="186.0" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="189.0" y="366.0"></text>
</g>
<g>
<title>usb_hcd_poll_rh_status (1 samples, 0.02%)</title><rect x="186.0" y="339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="189.0" y="350.0"></text>
</g>
<g>
<title>uhci_hub_status_data (1 samples, 0.02%)</title><rect x="186.0" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="189.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="186.0" y="307.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="189.0" y="318.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.15%)</title><rect x="186.3" y="467.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="189.3" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (2 samples, 0.05%)</title><rect x="186.8" y="451.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="189.8" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="187.1" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="190.1" y="446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="187.1" y="419.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="190.1" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="187.1" y="403.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="190.1" y="414.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect x="187.4" y="451.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="190.4" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="187.4" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="190.4" y="446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="187.4" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="190.4" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="187.4" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="190.4" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="187.7" y="451.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="190.7" y="462.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="188.0" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="191.0" y="526.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="188.0" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="191.0" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="188.0" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="191.0" y="494.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="188.0" y="467.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.0" y="478.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="188.0" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (11 samples, 0.27%)</title><rect x="188.3" y="595.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="191.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (10 samples, 0.25%)</title><rect x="188.6" y="579.0" width="2.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="191.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.25%)</title><rect x="188.6" y="563.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="191.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (10 samples, 0.25%)</title><rect x="188.6" y="547.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="191.6" y="558.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="188.6" y="531.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="191.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (9 samples, 0.22%)</title><rect x="188.9" y="531.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="191.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (9 samples, 0.22%)</title><rect x="188.9" y="515.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="191.9" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (9 samples, 0.22%)</title><rect x="188.9" y="499.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="191.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (9 samples, 0.22%)</title><rect x="188.9" y="483.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="191.9" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (3 samples, 0.07%)</title><rect x="190.0" y="467.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="193.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.07%)</title><rect x="190.0" y="451.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="193.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="190.9" y="467.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="193.9" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="191.2" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="194.2" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="191.2" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="194.2" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="191.2" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="194.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.07%)</title><rect x="191.5" y="595.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="194.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.02%)</title><rect x="192.4" y="595.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="195.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.02%)</title><rect x="192.4" y="579.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="195.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.02%)</title><rect x="192.7" y="595.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="195.7" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="192.7" y="579.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="195.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="192.7" y="563.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="195.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="192.7" y="547.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="195.7" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="192.7" y="531.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="195.7" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="192.7" y="515.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="195.7" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="192.7" y="499.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="195.7" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="192.7" y="483.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="195.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (1 samples, 0.02%)</title><rect x="192.9" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="195.9" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="192.9" y="579.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="195.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="192.9" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="195.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="192.9" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="195.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="192.9" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="195.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.02%)</title><rect x="193.2" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="196.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="193.5" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="196.5" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="193.5" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="196.5" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="193.5" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="196.5" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="193.5" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="196.5" y="558.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="193.5" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="196.5" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="193.5" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="196.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.02%)</title><rect x="193.8" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="196.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.02%)</title><rect x="194.1" y="611.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="197.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.02%)</title><rect x="194.4" y="611.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="197.4" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="194.4" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="197.4" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="194.4" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.4" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="194.4" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="197.4" y="574.0"></text>
</g>
<g>
<title>std::condition_variable::~condition_variable() (1 samples, 0.02%)</title><rect x="194.7" y="611.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="197.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="195.0" y="627.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="198.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="195.3" y="643.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="198.3" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="195.6" y="659.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="198.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="195.6" y="643.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="198.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="195.6" y="627.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="198.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.33%)</title><rect x="196.1" y="707.0" width="15.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="199.1" y="718.0"></text>
</g>
<g>
<title>__lll_lock_wait (4 samples, 0.10%)</title><rect x="196.1" y="691.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="199.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="196.1" y="675.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="199.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="196.1" y="659.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="199.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.10%)</title><rect x="196.1" y="643.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="199.1" y="654.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.10%)</title><rect x="196.1" y="627.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="199.1" y="638.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.10%)</title><rect x="196.1" y="611.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="199.1" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.10%)</title><rect x="196.1" y="595.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="199.1" y="606.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.10%)</title><rect x="196.1" y="579.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="199.1" y="590.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.10%)</title><rect x="196.1" y="563.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="199.1" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.10%)</title><rect x="196.1" y="547.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="199.1" y="558.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.02%)</title><rect x="197.3" y="691.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="200.3" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="197.3" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="200.3" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="197.3" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="200.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="197.3" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="200.3" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (19 samples, 0.47%)</title><rect x="197.6" y="691.0" width="5.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="200.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.44%)</title><rect x="197.9" y="675.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.44%)</title><rect x="197.9" y="659.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.44%)</title><rect x="197.9" y="643.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.9" y="654.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.44%)</title><rect x="197.9" y="627.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="200.9" y="638.0"></text>
</g>
<g>
<title>futex_wait (18 samples, 0.44%)</title><rect x="197.9" y="611.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.9" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.39%)</title><rect x="197.9" y="595.0" width="4.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="200.9" y="606.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.39%)</title><rect x="197.9" y="579.0" width="4.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="200.9" y="590.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.37%)</title><rect x="198.2" y="563.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="201.2" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.37%)</title><rect x="198.2" y="547.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="201.2" y="558.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="202.5" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="205.5" y="606.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="202.8" y="595.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="205.8" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="203.1" y="691.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="206.1" y="702.0"></text>
</g>
<g>
<title>write (29 samples, 0.71%)</title><rect x="203.4" y="691.0" width="8.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="206.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.69%)</title><rect x="203.4" y="675.0" width="8.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="206.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.69%)</title><rect x="203.4" y="659.0" width="8.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="206.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (27 samples, 0.67%)</title><rect x="203.7" y="643.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="206.7" y="654.0"></text>
</g>
<g>
<title>ksys_write (27 samples, 0.67%)</title><rect x="203.7" y="627.0" width="7.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="206.7" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="203.7" y="611.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="206.7" y="622.0"></text>
</g>
<g>
<title>vfs_write (26 samples, 0.64%)</title><rect x="204.0" y="611.0" width="7.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="207.0" y="622.0"></text>
</g>
<g>
<title>__vfs_write (22 samples, 0.54%)</title><rect x="204.3" y="595.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.3" y="606.0"></text>
</g>
<g>
<title>new_sync_write (21 samples, 0.52%)</title><rect x="204.6" y="579.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="207.6" y="590.0"></text>
</g>
<g>
<title>down_write_trylock (1 samples, 0.02%)</title><rect x="204.6" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="207.6" y="574.0"></text>
</g>
<g>
<title>ext4_file_write_iter (20 samples, 0.49%)</title><rect x="204.9" y="563.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="207.9" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (19 samples, 0.47%)</title><rect x="204.9" y="547.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="207.9" y="558.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.05%)</title><rect x="204.9" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="207.9" y="542.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.05%)</title><rect x="204.9" y="515.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="207.9" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="204.9" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="207.9" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="204.9" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="207.9" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="204.9" y="467.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="207.9" y="478.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="204.9" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="207.9" y="462.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.02%)</title><rect x="204.9" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="207.9" y="446.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="205.2" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="208.2" y="510.0"></text>
</g>
<g>
<title>generic_perform_write (17 samples, 0.42%)</title><rect x="205.5" y="531.0" width="4.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="208.5" y="542.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="205.5" y="515.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="208.5" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_begin (4 samples, 0.10%)</title><rect x="205.7" y="515.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="208.7" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.05%)</title><rect x="205.7" y="499.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="208.7" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.05%)</title><rect x="205.7" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="208.7" y="494.0"></text>
</g>
<g>
<title>memset_orig (2 samples, 0.05%)</title><rect x="205.7" y="467.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="208.7" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="206.3" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="209.3" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="206.6" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="209.6" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_end (9 samples, 0.22%)</title><rect x="206.9" y="515.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="209.9" y="526.0"></text>
</g>
<g>
<title>generic_write_end (9 samples, 0.22%)</title><rect x="206.9" y="499.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="209.9" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (8 samples, 0.20%)</title><rect x="206.9" y="483.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="209.9" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (8 samples, 0.20%)</title><rect x="206.9" y="467.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="209.9" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (7 samples, 0.17%)</title><rect x="206.9" y="451.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="209.9" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (5 samples, 0.12%)</title><rect x="206.9" y="435.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="209.9" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.07%)</title><rect x="206.9" y="419.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="209.9" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.05%)</title><rect x="207.2" y="403.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="210.2" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.05%)</title><rect x="207.2" y="387.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="210.2" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (2 samples, 0.05%)</title><rect x="207.2" y="371.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="210.2" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="207.5" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="210.5" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="207.5" y="339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="210.5" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.05%)</title><rect x="207.8" y="419.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="210.8" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="207.8" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="210.8" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="207.8" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="210.8" y="398.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (1 samples, 0.02%)</title><rect x="207.8" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="210.8" y="382.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.02%)</title><rect x="208.1" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="211.1" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.05%)</title><rect x="208.4" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="211.4" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="208.9" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="211.9" y="462.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.02%)</title><rect x="209.2" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="212.2" y="494.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (1 samples, 0.02%)</title><rect x="209.2" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="212.2" y="478.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.02%)</title><rect x="209.2" y="451.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="212.2" y="462.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.05%)</title><rect x="209.5" y="515.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="212.5" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="209.8" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="212.8" y="510.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="210.1" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="213.1" y="526.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.02%)</title><rect x="210.4" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="213.4" y="558.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.02%)</title><rect x="210.4" y="531.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="213.4" y="542.0"></text>
</g>
<g>
<title>generic_write_check_limits (1 samples, 0.02%)</title><rect x="210.4" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="213.4" y="526.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.07%)</title><rect x="210.7" y="595.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="213.7" y="606.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="211.0" y="579.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="214.0" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="211.0" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="214.0" y="574.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="211.0" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="214.0" y="558.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="211.0" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="214.0" y="542.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="211.3" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="214.3" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="211.6" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="214.6" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="211.6" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="214.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="211.6" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="214.6" y="654.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="211.9" y="707.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="214.9" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (272 samples, 6.70%)</title><rect x="212.1" y="707.0" width="79.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="215.1" y="718.0">pthread_c..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (272 samples, 6.70%)</title><rect x="212.1" y="691.0" width="79.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="215.1" y="702.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (272 samples, 6.70%)</title><rect x="212.1" y="675.0" width="79.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="215.1" y="686.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_futex (272 samples, 6.70%)</title><rect x="212.1" y="659.0" width="79.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="215.1" y="670.0">__x64_sys..</text>
</g>
<g>
<title>do_futex (272 samples, 6.70%)</title><rect x="212.1" y="643.0" width="79.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="215.1" y="654.0">do_futex</text>
</g>
<g>
<title>futex_wake (272 samples, 6.70%)</title><rect x="212.1" y="627.0" width="79.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="215.1" y="638.0">futex_wake</text>
</g>
<g>
<title>wake_up_q (272 samples, 6.70%)</title><rect x="212.1" y="611.0" width="79.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="215.1" y="622.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (272 samples, 6.70%)</title><rect x="212.1" y="595.0" width="79.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="215.1" y="606.0">try_to_wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (272 samples, 6.70%)</title><rect x="212.1" y="579.0" width="79.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="215.1" y="590.0">_raw_spin..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="291.0" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="294.0" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="291.0" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="294.0" y="558.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="291.0" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="294.0" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="291.0" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="294.0" y="526.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="291.0" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="294.0" y="510.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="291.0" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="294.0" y="494.0"></text>
</g>
<g>
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="291.0" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="294.0" y="478.0"></text>
</g>
<g>
<title>swake_up_one (1 samples, 0.02%)</title><rect x="291.0" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="294.0" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="291.0" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="294.0" y="446.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="291.3" y="707.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="294.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.convertValuesSubMinValue (1 samples, 0.02%)</title><rect x="291.5" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.getArray (2 samples, 0.05%)</title><rect x="291.8" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.05%)</title><rect x="291.8" y="723.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="291.8" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="294.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="291.8" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.8" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="291.8" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="291.8" y="659.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="291.8" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.8" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="291.8" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.8" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.02%)</title><rect x="292.1" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.1" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="292.1" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="295.1" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="292.1" y="643.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="295.1" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="292.1" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="295.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.07%)</title><rect x="292.4" y="835.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="292.4" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="292.4" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.02%)</title><rect x="293.0" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.0" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="293.0" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="296.0" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="293.0" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.0" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="293.0" y="771.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="296.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="293.3" y="835.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="293.3" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.3" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="293.3" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.3" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="293.3" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.3" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="293.3" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="296.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="293.6" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="296.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="293.6" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="296.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="293.9" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="296.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="293.9" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="294.2" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="294.2" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="297.2" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="294.5" y="803.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.5" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="294.5" y="787.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="297.5" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="294.5" y="771.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="297.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 0.37%)</title><rect x="294.7" y="851.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="297.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (15 samples, 0.37%)</title><rect x="294.7" y="835.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="297.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="294.7" y="819.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="297.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="294.7" y="803.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="297.7" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.05%)</title><rect x="294.7" y="787.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="297.7" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="294.7" y="771.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="297.7" y="782.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="295.0" y="771.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="298.0" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="295.0" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="298.0" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="295.0" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="298.0" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="295.0" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="298.0" y="734.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.02%)</title><rect x="295.3" y="787.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="298.3" y="798.0"></text>
</g>
<g>
<title>__GI___recv (12 samples, 0.30%)</title><rect x="295.6" y="819.0" width="3.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="298.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.27%)</title><rect x="295.9" y="803.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="298.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.27%)</title><rect x="295.9" y="787.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="298.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 0.25%)</title><rect x="296.2" y="771.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="299.2" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 0.25%)</title><rect x="296.2" y="755.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="299.2" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (10 samples, 0.25%)</title><rect x="296.2" y="739.0" width="2.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="299.2" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (8 samples, 0.20%)</title><rect x="296.8" y="723.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="299.8" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 0.20%)</title><rect x="296.8" y="707.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="299.8" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="297.1" y="691.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="300.1" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="297.7" y="691.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="300.7" y="702.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="297.9" y="691.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="300.9" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="298.2" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="301.2" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="298.2" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="301.2" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="298.5" y="691.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="301.5" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="298.5" y="675.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="301.5" y="686.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="298.5" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="301.5" y="670.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="298.5" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="301.5" y="654.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="298.8" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="301.8" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=55630] (1,025 samples, 25.26%)</title><rect x="299.1" y="915.0" width="298.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="302.1" y="926.0">[NIO Selector #1 tid=55630]</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="299.1" y="899.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="302.1" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="299.1" y="883.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="302.1" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="299.1" y="867.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="302.1" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="299.1" y="851.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="302.1" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="299.1" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="302.1" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="299.1" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="302.1" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="299.1" y="803.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="302.1" y="814.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.02%)</title><rect x="299.4" y="899.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="302.4" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="299.4" y="883.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="302.4" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="299.4" y="867.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="302.4" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.05%)</title><rect x="299.7" y="899.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="302.7" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="299.7" y="883.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="302.7" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="300.0" y="883.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="303.0" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="300.0" y="867.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="303.0" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="300.0" y="851.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="303.0" y="862.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,021 samples, 25.17%)</title><rect x="300.3" y="899.0" width="296.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.3" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (22 samples, 0.54%)</title><rect x="300.3" y="883.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (22 samples, 0.54%)</title><rect x="300.3" y="867.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.47%)</title><rect x="300.3" y="851.0" width="5.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="303.3" y="862.0"></text>
</g>
<g>
<title>epoll_wait (19 samples, 0.47%)</title><rect x="300.3" y="835.0" width="5.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="303.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.47%)</title><rect x="300.3" y="819.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="303.3" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.02%)</title><rect x="300.3" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="303.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.44%)</title><rect x="300.6" y="803.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="303.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (18 samples, 0.44%)</title><rect x="300.6" y="787.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="303.6" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (18 samples, 0.44%)</title><rect x="300.6" y="771.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="303.6" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="300.6" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="303.6" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="300.6" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="303.6" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="300.6" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.6" y="734.0"></text>
</g>
<g>
<title>ep_poll (17 samples, 0.42%)</title><rect x="300.9" y="755.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="303.9" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (7 samples, 0.17%)</title><rect x="301.1" y="739.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="304.1" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="302.9" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="305.9" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.02%)</title><rect x="302.9" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="305.9" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (9 samples, 0.22%)</title><rect x="303.2" y="739.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="306.2" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (9 samples, 0.22%)</title><rect x="303.2" y="723.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="306.2" y="734.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.22%)</title><rect x="303.2" y="707.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="306.2" y="718.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.22%)</title><rect x="303.2" y="691.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.2" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.22%)</title><rect x="303.2" y="675.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="306.2" y="686.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.07%)</title><rect x="305.8" y="851.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="308.8" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="306.4" y="835.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="309.4" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="306.4" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="309.4" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="306.4" y="803.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="309.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (999 samples, 24.62%)</title><rect x="306.7" y="883.0" width="290.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="309.7" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (998 samples, 24.60%)</title><rect x="307.0" y="867.0" width="290.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.0" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (966 samples, 23.81%)</title><rect x="307.3" y="851.0" width="280.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.3" y="862.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (956 samples, 23.56%)</title><rect x="307.5" y="835.0" width="278.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.5" y="846.0">one/nio/http/HttpSession.handleParsed..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (956 samples, 23.56%)</title><rect x="307.5" y="819.0" width="278.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.5" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (954 samples, 23.51%)</title><rect x="307.5" y="803.0" width="277.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="310.5" y="814.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (525 samples, 12.94%)</title><rect x="307.5" y="787.0" width="152.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.5" y="798.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (523 samples, 12.89%)</title><rect x="307.5" y="771.0" width="152.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.5" y="782.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.10%)</title><rect x="307.5" y="755.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.07%)</title><rect x="307.8" y="739.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.05%)</title><rect x="307.8" y="723.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.8" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="308.1" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="311.1" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="308.1" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="311.1" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="308.1" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="311.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="308.4" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="308.4" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (519 samples, 12.79%)</title><rect x="308.7" y="755.0" width="151.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.7" y="766.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/Session.write (519 samples, 12.79%)</title><rect x="308.7" y="739.0" width="151.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.7" y="750.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (517 samples, 12.74%)</title><rect x="309.0" y="723.0" width="150.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.0" y="734.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (517 samples, 12.74%)</title><rect x="309.0" y="707.0" width="150.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.0" y="718.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.02%)</title><rect x="309.9" y="691.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="312.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="310.2" y="691.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="313.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.15%)</title><rect x="310.2" y="675.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="313.2" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.12%)</title><rect x="310.2" y="659.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="313.2" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.12%)</title><rect x="310.2" y="643.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="313.2" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="311.0" y="627.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="314.0" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="311.3" y="611.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="314.3" y="622.0"></text>
</g>
<g>
<title>__send (1 samples, 0.02%)</title><rect x="311.6" y="659.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="314.6" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="311.6" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="314.6" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="311.6" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="314.6" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="311.6" y="611.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="314.6" y="622.0"></text>
</g>
<g>
<title>__send (507 samples, 12.50%)</title><rect x="311.9" y="691.0" width="147.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="314.9" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (506 samples, 12.47%)</title><rect x="312.2" y="675.0" width="147.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="315.2" y="686.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>do_syscall_64 (506 samples, 12.47%)</title><rect x="312.2" y="659.0" width="147.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="315.2" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.02%)</title><rect x="312.5" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="315.5" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (491 samples, 12.10%)</title><rect x="312.8" y="643.0" width="142.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="315.8" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (490 samples, 12.08%)</title><rect x="312.8" y="627.0" width="142.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="315.8" y="638.0">__sys_sendto</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="313.1" y="611.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="316.1" y="622.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="313.4" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="316.4" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (486 samples, 11.98%)</title><rect x="313.7" y="611.0" width="141.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="316.7" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="313.9" y="595.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="316.9" y="606.0"></text>
</g>
<g>
<title>inet_sendmsg (480 samples, 11.83%)</title><rect x="314.2" y="595.0" width="139.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="317.2" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (477 samples, 11.76%)</title><rect x="315.1" y="579.0" width="138.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="318.1" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.02%)</title><rect x="315.1" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="318.1" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (476 samples, 11.73%)</title><rect x="315.4" y="563.0" width="138.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="318.4" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="315.4" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.4" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.12%)</title><rect x="315.7" y="547.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.7" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.12%)</title><rect x="315.7" y="531.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="318.7" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="315.7" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="318.7" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.05%)</title><rect x="316.0" y="515.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="319.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="316.0" y="499.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="319.0" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.05%)</title><rect x="316.6" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="319.6" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.02%)</title><rect x="316.9" y="499.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="319.9" y="510.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="317.1" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.1" y="558.0"></text>
</g>
<g>
<title>tcp_push (469 samples, 11.56%)</title><rect x="317.4" y="547.0" width="136.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.4" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (469 samples, 11.56%)</title><rect x="317.4" y="531.0" width="136.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="320.4" y="542.0">__tcp_push_pendin..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (1 samples, 0.02%)</title><rect x="317.4" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="320.4" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (468 samples, 11.54%)</title><rect x="317.7" y="515.0" width="136.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="320.7" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (464 samples, 11.44%)</title><rect x="318.0" y="499.0" width="135.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="321.0" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (463 samples, 11.41%)</title><rect x="318.3" y="483.0" width="134.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="321.3" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (463 samples, 11.41%)</title><rect x="318.3" y="467.0" width="134.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="321.3" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (463 samples, 11.41%)</title><rect x="318.3" y="451.0" width="134.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="321.3" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (462 samples, 11.39%)</title><rect x="318.3" y="435.0" width="134.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="321.3" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="318.3" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="321.3" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (461 samples, 11.36%)</title><rect x="318.6" y="419.0" width="134.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="321.6" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="318.6" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="321.6" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.02%)</title><rect x="318.9" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="321.9" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (459 samples, 11.31%)</title><rect x="319.2" y="403.0" width="133.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="322.2" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (450 samples, 11.09%)</title><rect x="319.8" y="387.0" width="130.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="322.8" y="398.0">__local_bh_enabl..</text>
</g>
<g>
<title>do_softirq.part.21 (450 samples, 11.09%)</title><rect x="319.8" y="371.0" width="130.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="322.8" y="382.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (450 samples, 11.09%)</title><rect x="319.8" y="355.0" width="130.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="322.8" y="366.0">do_softirq_own_s..</text>
</g>
<g>
<title>__softirqentry_text_start (449 samples, 11.07%)</title><rect x="319.8" y="339.0" width="130.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="322.8" y="350.0">__softirqentry_t..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="319.8" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="322.8" y="334.0"></text>
</g>
<g>
<title>net_rx_action (447 samples, 11.02%)</title><rect x="320.1" y="323.0" width="130.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="323.1" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (443 samples, 10.92%)</title><rect x="321.2" y="307.0" width="128.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="324.2" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (440 samples, 10.85%)</title><rect x="321.8" y="291.0" width="128.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="324.8" y="302.0">__netif_receive_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (438 samples, 10.80%)</title><rect x="321.8" y="275.0" width="127.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="324.8" y="286.0">__netif_receive_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="321.8" y="259.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="324.8" y="270.0"></text>
</g>
<g>
<title>ip_rcv (437 samples, 10.77%)</title><rect x="322.1" y="259.0" width="127.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="325.1" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (437 samples, 10.77%)</title><rect x="322.1" y="243.0" width="127.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="325.1" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (435 samples, 10.72%)</title><rect x="322.4" y="227.0" width="126.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="325.4" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (435 samples, 10.72%)</title><rect x="322.4" y="211.0" width="126.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="325.4" y="222.0">ip_local_deliver..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (434 samples, 10.70%)</title><rect x="322.4" y="195.0" width="126.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="325.4" y="206.0">ip_protocol_deli..</text>
</g>
<g>
<title>tcp_v4_rcv (433 samples, 10.67%)</title><rect x="322.7" y="179.0" width="125.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="325.7" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="323.0" y="163.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="326.0" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="323.5" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="326.5" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="323.8" y="163.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="326.8" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="323.8" y="147.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="326.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (428 samples, 10.55%)</title><rect x="324.1" y="163.0" width="124.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="327.1" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="324.1" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="327.1" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (427 samples, 10.53%)</title><rect x="324.4" y="147.0" width="124.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="327.4" y="158.0">tcp_rcv_establi..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="324.7" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="327.7" y="142.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 0.37%)</title><rect x="325.0" y="131.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="328.0" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="325.3" y="115.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="328.3" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.02%)</title><rect x="325.6" y="115.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.6" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (11 samples, 0.27%)</title><rect x="325.9" y="115.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="328.9" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.17%)</title><rect x="326.5" y="99.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="329.5" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="326.5" y="83.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="329.5" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="326.5" y="67.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="329.5" y="78.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.12%)</title><rect x="326.7" y="83.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="329.7" y="94.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.12%)</title><rect x="326.7" y="67.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="329.7" y="78.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.10%)</title><rect x="327.0" y="51.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="327.0" y="35.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="330.0" y="46.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="327.6" y="35.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="330.6" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="328.2" y="83.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="331.2" y="94.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="328.5" y="99.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="331.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.02%)</title><rect x="328.8" y="99.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="331.8" y="110.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="329.1" y="115.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="332.1" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.02%)</title><rect x="329.4" y="131.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="332.4" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (409 samples, 10.08%)</title><rect x="329.6" y="131.0" width="119.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="332.6" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="329.6" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="332.6" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (406 samples, 10.01%)</title><rect x="329.9" y="115.0" width="118.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="332.9" y="126.0">sock_def_reada..</text>
</g>
<g>
<title>__wake_up_sync_key (406 samples, 10.01%)</title><rect x="329.9" y="99.0" width="118.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="332.9" y="110.0">__wake_up_sync..</text>
</g>
<g>
<title>__wake_up_common_lock (406 samples, 10.01%)</title><rect x="329.9" y="83.0" width="118.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="332.9" y="94.0">__wake_up_comm..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (406 samples, 10.01%)</title><rect x="329.9" y="67.0" width="118.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="332.9" y="78.0">_raw_spin_unlo..</text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="448.0" y="115.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="451.0" y="126.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="448.6" y="195.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="451.6" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="448.9" y="227.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="451.9" y="238.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="449.2" y="275.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="452.2" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="449.8" y="291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="452.8" y="302.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="450.1" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="453.1" y="334.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="450.1" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="453.1" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="450.1" y="291.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="453.1" y="302.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="450.4" y="339.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="453.4" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (7 samples, 0.17%)</title><rect x="450.6" y="387.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="453.6" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.17%)</title><rect x="450.6" y="371.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="453.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.10%)</title><rect x="450.9" y="355.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="453.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.05%)</title><rect x="451.2" y="339.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="454.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.02%)</title><rect x="451.5" y="323.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="454.5" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="451.5" y="307.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="454.5" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="451.8" y="339.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="454.8" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="452.1" y="355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.1" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="452.4" y="355.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.4" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="452.4" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="455.4" y="350.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="452.7" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="455.7" y="446.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="453.0" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="456.0" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.02%)</title><rect x="453.3" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="456.3" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="453.6" y="499.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="456.6" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.10%)</title><rect x="453.8" y="595.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="456.8" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.07%)</title><rect x="454.1" y="579.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="457.1" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.07%)</title><rect x="454.1" y="563.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.1" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.07%)</title><rect x="454.1" y="547.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="457.1" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.05%)</title><rect x="454.1" y="531.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="457.1" y="542.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (2 samples, 0.05%)</title><rect x="454.1" y="515.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="457.1" y="526.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="454.7" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="457.7" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="455.0" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="458.0" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="455.0" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="458.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="455.0" y="579.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="458.0" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="455.0" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="458.0" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="455.3" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="458.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (13 samples, 0.32%)</title><rect x="455.6" y="643.0" width="3.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="458.6" y="654.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.30%)</title><rect x="455.9" y="627.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="458.9" y="638.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.30%)</title><rect x="455.9" y="611.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="458.9" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.27%)</title><rect x="456.2" y="595.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="459.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="459.4" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="462.4" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="459.4" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="462.4" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="459.4" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="462.4" y="702.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.02%)</title><rect x="459.7" y="771.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="459.7" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="460.0" y="771.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="463.0" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="460.0" y="755.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.0" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="460.0" y="739.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="463.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="460.2" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.02%)</title><rect x="460.2" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (428 samples, 10.55%)</title><rect x="460.5" y="787.0" width="124.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.5" y="798.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (428 samples, 10.55%)</title><rect x="460.5" y="771.0" width="124.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.5" y="782.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="460.5" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="460.5" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="460.5" y="723.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="460.5" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="460.5" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.05%)</title><rect x="460.5" y="675.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="460.8" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.8" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="460.8" y="643.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.8" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="460.8" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.upsert (426 samples, 10.50%)</title><rect x="461.1" y="755.0" width="123.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.1" y="766.0">ru/mail/polis/d..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (421 samples, 10.38%)</title><rect x="461.1" y="739.0" width="122.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.1" y="750.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (421 samples, 10.38%)</title><rect x="461.1" y="723.0" width="122.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.1" y="734.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.02%)</title><rect x="461.1" y="707.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="464.1" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (84 samples, 2.07%)</title><rect x="461.4" y="707.0" width="24.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="464.4" y="718.0">J..</text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.02%)</title><rect x="461.4" y="691.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="464.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="461.4" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="461.4" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="464.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="461.4" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="464.4" y="654.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="461.7" y="691.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="464.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.05%)</title><rect x="462.0" y="691.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="465.0" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="462.3" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="465.3" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="462.3" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="465.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="462.3" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="465.3" y="654.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (80 samples, 1.97%)</title><rect x="462.6" y="691.0" width="23.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="465.6" y="702.0">r..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="462.6" y="675.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="465.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (79 samples, 1.95%)</title><rect x="462.9" y="675.0" width="22.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="465.9" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (79 samples, 1.95%)</title><rect x="462.9" y="659.0" width="22.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="465.9" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (78 samples, 1.92%)</title><rect x="462.9" y="643.0" width="22.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="465.9" y="654.0">r..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="462.9" y="627.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="465.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (75 samples, 1.85%)</title><rect x="463.2" y="627.0" width="21.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="466.2" y="638.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="463.2" y="611.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="466.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="463.2" y="595.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="466.2" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="463.2" y="579.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="466.2" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="463.2" y="563.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="466.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::ColumnFamilyHandleImpl(rocksdb::ColumnFamilyData*, rocksdb::DBImpl*, rocksdb::InstrumentedMutex*) (1 samples, 0.02%)</title><rect x="463.4" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="466.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (66 samples, 1.63%)</title><rect x="463.7" y="611.0" width="19.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="466.7" y="622.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.05%)</title><rect x="466.1" y="595.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="469.1" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="466.1" y="579.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.1" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="466.1" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.1" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.02%)</title><rect x="466.1" y="547.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="469.1" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.02%)</title><rect x="466.1" y="531.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.1" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="466.1" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.1" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="466.1" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="469.1" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="466.4" y="579.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="469.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="466.4" y="563.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="469.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="466.4" y="547.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.4" y="558.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.10%)</title><rect x="466.6" y="595.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="469.6" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="466.9" y="579.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="469.9" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="466.9" y="563.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="469.9" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="466.9" y="547.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="469.9" y="558.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="466.9" y="531.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="469.9" y="542.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="466.9" y="515.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="469.9" y="526.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.07%)</title><rect x="466.9" y="499.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="469.9" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.07%)</title><rect x="466.9" y="483.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="466.9" y="467.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="469.9" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="467.8" y="595.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="470.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="468.1" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="471.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="468.1" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="471.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="468.1" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="471.1" y="558.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="468.4" y="595.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="471.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (11 samples, 0.27%)</title><rect x="468.7" y="595.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="471.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (10 samples, 0.25%)</title><rect x="468.7" y="579.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="471.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (9 samples, 0.22%)</title><rect x="469.0" y="563.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="472.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (9 samples, 0.22%)</title><rect x="469.0" y="547.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="472.0" y="558.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="469.3" y="531.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="472.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.05%)</title><rect x="469.6" y="531.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="472.6" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="469.8" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="472.8" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="469.8" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.8" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="469.8" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="472.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="470.1" y="531.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="473.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.05%)</title><rect x="470.4" y="531.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="473.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.02%)</title><rect x="470.4" y="515.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="473.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.02%)</title><rect x="470.7" y="515.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="473.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.05%)</title><rect x="471.0" y="531.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="474.0" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="471.3" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="474.3" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="471.3" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="474.3" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="471.3" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="474.3" y="494.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.02%)</title><rect x="471.6" y="579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="474.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.02%)</title><rect x="471.9" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="474.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (20 samples, 0.49%)</title><rect x="472.2" y="595.0" width="5.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="475.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (20 samples, 0.49%)</title><rect x="472.2" y="579.0" width="5.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="475.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (19 samples, 0.47%)</title><rect x="472.5" y="563.0" width="5.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="475.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (19 samples, 0.47%)</title><rect x="472.5" y="547.0" width="5.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="475.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (19 samples, 0.47%)</title><rect x="472.5" y="531.0" width="5.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="475.5" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (18 samples, 0.44%)</title><rect x="472.8" y="515.0" width="5.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="475.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (17 samples, 0.42%)</title><rect x="473.0" y="499.0" width="5.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="476.0" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (4 samples, 0.10%)</title><rect x="475.4" y="483.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="478.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.10%)</title><rect x="475.4" y="467.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="478.4" y="478.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect x="475.7" y="451.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="478.7" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="475.7" y="435.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="478.7" y="446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="475.7" y="419.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="478.7" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="475.7" y="403.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="478.7" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="476.0" y="451.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="479.0" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="476.2" y="451.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="479.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.07%)</title><rect x="476.5" y="483.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="479.5" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.07%)</title><rect x="476.5" y="467.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="479.5" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="477.4" y="483.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="480.4" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="477.4" y="467.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="480.4" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="477.4" y="451.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="480.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (8 samples, 0.20%)</title><rect x="478.0" y="595.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="481.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (8 samples, 0.20%)</title><rect x="478.0" y="579.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="481.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.20%)</title><rect x="478.0" y="563.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="481.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.20%)</title><rect x="478.0" y="547.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="481.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (8 samples, 0.20%)</title><rect x="478.0" y="531.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="481.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (7 samples, 0.17%)</title><rect x="478.3" y="515.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="481.3" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 0.17%)</title><rect x="478.3" y="499.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="481.3" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (7 samples, 0.17%)</title><rect x="478.3" y="483.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="481.3" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (4 samples, 0.10%)</title><rect x="479.1" y="467.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="482.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.10%)</title><rect x="479.1" y="451.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="482.1" y="462.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.07%)</title><rect x="479.4" y="435.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="482.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.02%)</title><rect x="480.3" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="483.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 0.12%)</title><rect x="480.6" y="595.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="483.6" y="606.0"></text>
</g>
<g>
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;) (1 samples, 0.02%)</title><rect x="481.5" y="579.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="484.5" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="481.8" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="484.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="481.8" y="563.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="484.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="481.8" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="484.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.02%)</title><rect x="482.1" y="595.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="485.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.02%)</title><rect x="482.1" y="579.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="485.1" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="482.1" y="563.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="485.1" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="482.1" y="547.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="485.1" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="482.1" y="531.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="485.1" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="482.1" y="515.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="485.1" y="526.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="482.1" y="499.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="485.1" y="510.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="482.1" y="483.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="485.1" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="482.1" y="467.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="485.1" y="478.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.02%)</title><rect x="482.1" y="451.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="485.1" y="462.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.02%)</title><rect x="482.3" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="485.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.02%)</title><rect x="482.3" y="579.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="485.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.02%)</title><rect x="482.6" y="595.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="485.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.02%)</title><rect x="482.9" y="611.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="485.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.02%)</title><rect x="483.2" y="611.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="486.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="483.2" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.2" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="483.2" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="486.2" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="483.2" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="486.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.02%)</title><rect x="483.5" y="611.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="486.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.05%)</title><rect x="483.8" y="611.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="486.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.02%)</title><rect x="484.4" y="611.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="487.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.02%)</title><rect x="484.7" y="611.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="487.7" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="484.7" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="487.7" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="484.7" y="579.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="487.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="484.7" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="485.0" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="488.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="485.0" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="488.0" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="485.0" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="488.0" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="485.0" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="485.0" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="488.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.02%)</title><rect x="485.3" y="627.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="488.3" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="485.3" y="611.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="488.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="485.3" y="595.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="488.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="485.3" y="579.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="488.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.02%)</title><rect x="485.5" y="643.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="488.5" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="485.5" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="488.5" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="485.5" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="488.5" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="485.5" y="595.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 1.13%)</title><rect x="485.8" y="707.0" width="13.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="488.8" y="718.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 0.05%)</title><rect x="485.8" y="691.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="488.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="485.8" y="675.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="488.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="485.8" y="659.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="488.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="485.8" y="643.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="488.8" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="485.8" y="627.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="488.8" y="638.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="485.8" y="611.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="488.8" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="485.8" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.8" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="485.8" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="488.8" y="590.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.05%)</title><rect x="485.8" y="563.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="488.8" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="485.8" y="547.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="488.8" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_wait (10 samples, 0.25%)</title><rect x="486.4" y="691.0" width="2.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="489.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.22%)</title><rect x="486.7" y="675.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="489.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.22%)</title><rect x="486.7" y="659.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="489.7" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.20%)</title><rect x="487.0" y="643.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="490.0" y="654.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.20%)</title><rect x="487.0" y="627.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="490.0" y="638.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.20%)</title><rect x="487.0" y="611.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="490.0" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.17%)</title><rect x="487.3" y="595.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="490.3" y="606.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.17%)</title><rect x="487.3" y="579.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="490.3" y="590.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.17%)</title><rect x="487.3" y="563.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="490.3" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (7 samples, 0.17%)</title><rect x="487.3" y="547.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="490.3" y="558.0"></text>
</g>
<g>
<title>write (34 samples, 0.84%)</title><rect x="489.3" y="691.0" width="9.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="492.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.71%)</title><rect x="490.8" y="675.0" width="8.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="493.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.71%)</title><rect x="490.8" y="659.0" width="8.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="493.8" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (28 samples, 0.69%)</title><rect x="491.1" y="643.0" width="8.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="494.1" y="654.0"></text>
</g>
<g>
<title>ksys_write (28 samples, 0.69%)</title><rect x="491.1" y="627.0" width="8.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="494.1" y="638.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.02%)</title><rect x="491.1" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.1" y="622.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="491.4" y="611.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="494.4" y="622.0"></text>
</g>
<g>
<title>vfs_write (26 samples, 0.64%)</title><rect x="491.7" y="611.0" width="7.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.7" y="622.0"></text>
</g>
<g>
<title>__vfs_write (24 samples, 0.59%)</title><rect x="491.7" y="595.0" width="6.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="494.7" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="491.7" y="579.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="494.7" y="590.0"></text>
</g>
<g>
<title>new_sync_write (23 samples, 0.57%)</title><rect x="491.9" y="579.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="494.9" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (23 samples, 0.57%)</title><rect x="491.9" y="563.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="494.9" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (23 samples, 0.57%)</title><rect x="491.9" y="547.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="494.9" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="492.5" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="495.5" y="542.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.02%)</title><rect x="492.8" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="495.8" y="542.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="492.8" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="495.8" y="526.0"></text>
</g>
<g>
<title>generic_perform_write (19 samples, 0.47%)</title><rect x="493.1" y="531.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="496.1" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="493.1" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="496.1" y="526.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="493.4" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.4" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_begin (6 samples, 0.15%)</title><rect x="493.7" y="515.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.7" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.07%)</title><rect x="493.7" y="499.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="496.7" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.07%)</title><rect x="493.7" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="496.7" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="494.0" y="467.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="497.0" y="478.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.02%)</title><rect x="494.3" y="467.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="497.3" y="478.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.02%)</title><rect x="494.3" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="497.3" y="462.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.07%)</title><rect x="494.6" y="499.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="497.6" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.07%)</title><rect x="494.6" y="483.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="497.6" y="494.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.07%)</title><rect x="494.6" y="467.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="497.6" y="478.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.07%)</title><rect x="494.6" y="451.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="497.6" y="462.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.07%)</title><rect x="494.6" y="435.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="497.6" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_end (8 samples, 0.20%)</title><rect x="495.4" y="515.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="498.4" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.05%)</title><rect x="495.4" y="499.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="498.4" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="495.4" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="498.4" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="495.4" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.4" y="478.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="495.7" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="498.7" y="494.0"></text>
</g>
<g>
<title>generic_write_end (6 samples, 0.15%)</title><rect x="496.0" y="499.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="499.0" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (6 samples, 0.15%)</title><rect x="496.0" y="483.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="499.0" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (6 samples, 0.15%)</title><rect x="496.0" y="467.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="499.0" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (5 samples, 0.12%)</title><rect x="496.0" y="451.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="499.0" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (5 samples, 0.12%)</title><rect x="496.0" y="435.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="499.0" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="496.0" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="499.0" y="430.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.07%)</title><rect x="496.3" y="419.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="499.3" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.07%)</title><rect x="496.3" y="403.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="499.3" y="414.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.02%)</title><rect x="496.3" y="387.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="499.3" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.05%)</title><rect x="496.6" y="387.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="499.6" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (2 samples, 0.05%)</title><rect x="496.6" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="499.6" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="496.9" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="499.9" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="496.9" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="499.9" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="497.2" y="419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="500.2" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="497.2" y="403.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="500.2" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="497.2" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="500.2" y="398.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (1 samples, 0.02%)</title><rect x="497.2" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="500.2" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="497.5" y="451.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="500.5" y="462.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.02%)</title><rect x="497.8" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="500.8" y="526.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.05%)</title><rect x="498.1" y="515.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="501.1" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="498.3" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="501.3" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="498.6" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="501.6" y="606.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="498.6" y="579.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.6" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="498.6" y="563.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="501.6" y="574.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.05%)</title><rect x="498.6" y="547.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="501.6" y="558.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.05%)</title><rect x="498.6" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="501.6" y="542.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.02%)</title><rect x="499.2" y="707.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="502.2" y="718.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="499.5" y="707.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="502.5" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (288 samples, 7.10%)</title><rect x="499.8" y="707.0" width="83.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="502.8" y="718.0">pthread_c..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (288 samples, 7.10%)</title><rect x="499.8" y="691.0" width="83.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.8" y="702.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (288 samples, 7.10%)</title><rect x="499.8" y="675.0" width="83.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="502.8" y="686.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_futex (287 samples, 7.07%)</title><rect x="500.1" y="659.0" width="83.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="503.1" y="670.0">__x64_sys..</text>
</g>
<g>
<title>do_futex (287 samples, 7.07%)</title><rect x="500.1" y="643.0" width="83.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="503.1" y="654.0">do_futex</text>
</g>
<g>
<title>futex_wake (287 samples, 7.07%)</title><rect x="500.1" y="627.0" width="83.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="503.1" y="638.0">futex_wake</text>
</g>
<g>
<title>wake_up_q (287 samples, 7.07%)</title><rect x="500.1" y="611.0" width="83.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="503.1" y="622.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (287 samples, 7.07%)</title><rect x="500.1" y="595.0" width="83.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="503.1" y="606.0">try_to_wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (287 samples, 7.07%)</title><rect x="500.1" y="579.0" width="83.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="503.1" y="590.0">_raw_spin..</text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.convertValuesSubMinValue (4 samples, 0.10%)</title><rect x="583.6" y="739.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.6" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="584.1" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="587.1" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="584.1" y="707.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="587.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="584.1" y="691.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="587.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.getArray (1 samples, 0.02%)</title><rect x="584.7" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.02%)</title><rect x="584.7" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="584.7" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="587.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.02%)</title><rect x="584.7" y="691.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.convertValuesSubMinValue (1 samples, 0.02%)</title><rect x="584.7" y="675.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.02%)</title><rect x="585.0" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="585.0" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="585.0" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="585.0" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="588.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="585.0" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="588.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="585.3" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="585.3" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="588.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="585.3" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="588.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="585.3" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.3" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="585.3" y="739.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="588.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.05%)</title><rect x="585.6" y="835.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.02%)</title><rect x="586.2" y="835.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.2" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.02%)</title><rect x="586.2" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="589.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.02%)</title><rect x="586.2" y="803.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.10%)</title><rect x="586.5" y="835.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="586.8" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="586.8" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.8" y="814.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="587.1" y="787.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="590.1" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="587.3" y="819.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="590.3" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="587.3" y="803.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="590.3" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="587.3" y="787.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="590.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="587.6" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="587.6" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="587.6" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.6" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="587.9" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="590.9" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="587.9" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="590.9" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="587.9" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.9" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (31 samples, 0.76%)</title><rect x="588.2" y="851.0" width="9.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (30 samples, 0.74%)</title><rect x="588.5" y="835.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.17%)</title><rect x="588.5" y="819.0" width="2.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="591.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.17%)</title><rect x="588.5" y="803.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="591.5" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.17%)</title><rect x="588.5" y="787.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="591.5" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.15%)</title><rect x="588.5" y="771.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="591.5" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.10%)</title><rect x="589.1" y="755.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="592.1" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="589.4" y="739.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="592.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="590.0" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="593.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="590.0" y="723.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="593.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="590.0" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="593.0" y="718.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="590.3" y="771.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="593.3" y="782.0"></text>
</g>
<g>
<title>__GI___recv (22 samples, 0.54%)</title><rect x="590.5" y="819.0" width="6.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="593.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.52%)</title><rect x="590.8" y="803.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="593.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.52%)</title><rect x="590.8" y="787.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="593.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (18 samples, 0.44%)</title><rect x="591.7" y="771.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="594.7" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (17 samples, 0.42%)</title><rect x="591.7" y="755.0" width="5.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="594.7" y="766.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="591.7" y="739.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="594.7" y="750.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="591.7" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="594.7" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.05%)</title><rect x="592.0" y="739.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="595.0" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (14 samples, 0.35%)</title><rect x="592.6" y="739.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="595.6" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (11 samples, 0.27%)</title><rect x="592.6" y="723.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="595.6" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="592.9" y="707.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="595.9" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (9 samples, 0.22%)</title><rect x="593.2" y="707.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="596.2" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="593.7" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="596.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="593.7" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="596.7" y="686.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="593.7" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="596.7" y="670.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.05%)</title><rect x="594.0" y="691.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="597.0" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.05%)</title><rect x="594.6" y="691.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="597.6" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.05%)</title><rect x="594.6" y="675.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="597.6" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="594.6" y="659.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="597.6" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="594.9" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="597.9" y="670.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="594.9" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="597.9" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="594.9" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="597.9" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="595.2" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="598.2" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="595.2" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="598.2" y="686.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="595.2" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="598.2" y="670.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="595.5" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="598.5" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.07%)</title><rect x="595.8" y="723.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="598.8" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.07%)</title><rect x="595.8" y="707.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="598.8" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.07%)</title><rect x="595.8" y="691.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="598.8" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.07%)</title><rect x="595.8" y="675.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="598.8" y="686.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="596.1" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="599.1" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.02%)</title><rect x="596.4" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="599.4" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.02%)</title><rect x="596.4" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="599.4" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="596.7" y="755.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="599.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="596.9" y="819.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="599.9" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="596.9" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="599.9" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="596.9" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="599.9" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=55631] (987 samples, 24.33%)</title><rect x="597.2" y="915.0" width="287.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="600.2" y="926.0">[NIO Selector #2 tid=55631]</text>
</g>
<g>
<title>[GC_active] (1 samples, 0.02%)</title><rect x="597.2" y="899.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="600.2" y="910.0"></text>
</g>
<g>
<title>__send (1 samples, 0.02%)</title><rect x="597.2" y="883.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="600.2" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="597.2" y="867.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="597.2" y="851.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.2" y="862.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.02%)</title><rect x="597.2" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.2" y="846.0"></text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.02%)</title><rect x="597.2" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="600.2" y="830.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="597.2" y="803.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="600.2" y="814.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="597.2" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="600.2" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="597.2" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="600.2" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.02%)</title><rect x="597.2" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="600.2" y="766.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.02%)</title><rect x="597.2" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.2" y="750.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="597.2" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.2" y="734.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="597.2" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="600.2" y="718.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="597.2" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="600.2" y="702.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="597.2" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.2" y="686.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.02%)</title><rect x="597.2" y="659.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.2" y="670.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.02%)</title><rect x="597.2" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="600.2" y="654.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="597.2" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.2" y="638.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="597.2" y="611.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.2" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="597.2" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="600.2" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="597.2" y="579.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="600.2" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.21 (1 samples, 0.02%)</title><rect x="597.2" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="600.2" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="597.2" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="600.2" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="597.2" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="600.2" y="542.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="597.2" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="600.2" y="526.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.02%)</title><rect x="597.2" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.2" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="597.2" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="600.2" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="597.2" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="600.2" y="478.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="597.2" y="451.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.2" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="597.2" y="435.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="600.2" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="597.2" y="419.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="600.2" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="597.2" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.2" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.02%)</title><rect x="597.2" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.2" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="597.2" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="600.2" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="597.2" y="355.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="600.2" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="597.2" y="339.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="600.2" y="350.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="597.2" y="323.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.2" y="334.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.02%)</title><rect x="597.2" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="600.2" y="318.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (986 samples, 24.30%)</title><rect x="597.5" y="899.0" width="286.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.5" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (35 samples, 0.86%)</title><rect x="597.8" y="883.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (35 samples, 0.86%)</title><rect x="597.8" y="867.0" width="10.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.8" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="598.1" y="851.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="601.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.76%)</title><rect x="598.4" y="851.0" width="9.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="601.4" y="862.0"></text>
</g>
<g>
<title>epoll_wait (31 samples, 0.76%)</title><rect x="598.4" y="835.0" width="9.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="601.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.74%)</title><rect x="598.7" y="819.0" width="8.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="601.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.74%)</title><rect x="598.7" y="803.0" width="8.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="601.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (28 samples, 0.69%)</title><rect x="599.3" y="787.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="602.3" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (28 samples, 0.69%)</title><rect x="599.3" y="771.0" width="8.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="602.3" y="782.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="599.3" y="755.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="602.3" y="766.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="599.3" y="739.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="602.3" y="750.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="599.3" y="723.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="602.3" y="734.0"></text>
</g>
<g>
<title>ep_poll (26 samples, 0.64%)</title><rect x="599.9" y="755.0" width="7.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="602.9" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (7 samples, 0.17%)</title><rect x="599.9" y="739.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="602.9" y="750.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="601.0" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="604.0" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.05%)</title><rect x="601.3" y="723.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="604.3" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.05%)</title><rect x="601.3" y="707.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="604.3" y="718.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.05%)</title><rect x="601.3" y="691.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="604.3" y="702.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.05%)</title><rect x="601.3" y="675.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="604.3" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (19 samples, 0.47%)</title><rect x="601.9" y="739.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="604.9" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (19 samples, 0.47%)</title><rect x="601.9" y="723.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="604.9" y="734.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.47%)</title><rect x="601.9" y="707.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="604.9" y="718.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.47%)</title><rect x="601.9" y="691.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="604.9" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (19 samples, 0.47%)</title><rect x="601.9" y="675.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="604.9" y="686.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.05%)</title><rect x="607.4" y="851.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="610.4" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="607.7" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="610.7" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="607.7" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="610.7" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="607.7" y="803.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="610.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (950 samples, 23.42%)</title><rect x="608.0" y="883.0" width="276.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.0" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (950 samples, 23.42%)</title><rect x="608.0" y="867.0" width="276.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.0" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (932 samples, 22.97%)</title><rect x="608.0" y="851.0" width="271.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.0" y="862.0">one/nio/http/HttpSession.processHttp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (924 samples, 22.78%)</title><rect x="608.9" y="835.0" width="268.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.9" y="846.0">one/nio/http/HttpSession.handleParse..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (924 samples, 22.78%)</title><rect x="608.9" y="819.0" width="268.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.9" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (923 samples, 22.75%)</title><rect x="608.9" y="803.0" width="268.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.9" y="814.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (439 samples, 10.82%)</title><rect x="608.9" y="787.0" width="127.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.9" y="798.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (437 samples, 10.77%)</title><rect x="608.9" y="771.0" width="127.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.9" y="782.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.05%)</title><rect x="608.9" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.05%)</title><rect x="608.9" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.02%)</title><rect x="608.9" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="608.9" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="611.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="608.9" y="691.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="611.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="608.9" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="611.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="609.2" y="723.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="609.2" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.2" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="609.2" y="691.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="612.2" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="609.2" y="675.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="612.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="609.2" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="612.2" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (435 samples, 10.72%)</title><rect x="609.5" y="755.0" width="126.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.5" y="766.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session.write (434 samples, 10.70%)</title><rect x="609.5" y="739.0" width="126.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.5" y="750.0">one/nio/net/Sess..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="609.5" y="723.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="612.5" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="609.5" y="707.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="612.5" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="609.5" y="691.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="612.5" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="609.5" y="675.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="612.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (433 samples, 10.67%)</title><rect x="609.7" y="723.0" width="126.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.7" y="734.0">one/nio/net/Ses..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (431 samples, 10.62%)</title><rect x="610.3" y="707.0" width="125.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.3" y="718.0">one/nio/net/Nat..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.12%)</title><rect x="610.3" y="691.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="613.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.12%)</title><rect x="610.3" y="675.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="613.3" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.10%)</title><rect x="610.3" y="659.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="613.3" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="610.3" y="643.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="613.3" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="610.6" y="627.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="613.6" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="610.6" y="611.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="613.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="610.6" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="613.6" y="606.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="610.9" y="643.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="613.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="611.2" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="614.2" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="611.2" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="614.2" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="611.2" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="614.2" y="622.0"></text>
</g>
<g>
<title>__send (1 samples, 0.02%)</title><rect x="611.5" y="659.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="614.5" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="611.5" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="614.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="611.5" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="614.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="611.5" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="614.5" y="622.0"></text>
</g>
<g>
<title>__send (424 samples, 10.45%)</title><rect x="611.8" y="691.0" width="123.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="614.8" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (423 samples, 10.43%)</title><rect x="612.1" y="675.0" width="123.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="615.1" y="686.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (423 samples, 10.43%)</title><rect x="612.1" y="659.0" width="123.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="615.1" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (405 samples, 9.98%)</title><rect x="612.4" y="643.0" width="117.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="615.4" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (403 samples, 9.93%)</title><rect x="612.4" y="627.0" width="117.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="615.4" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (400 samples, 9.86%)</title><rect x="612.7" y="611.0" width="116.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="615.7" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (395 samples, 9.74%)</title><rect x="612.7" y="595.0" width="114.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="615.7" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (395 samples, 9.74%)</title><rect x="612.7" y="579.0" width="114.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="615.7" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="612.7" y="563.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.7" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (394 samples, 9.71%)</title><rect x="612.9" y="563.0" width="114.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.9" y="574.0">tcp_sendmsg_lo..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="612.9" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="615.9" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="612.9" y="531.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.9" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="613.2" y="547.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="616.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.10%)</title><rect x="613.5" y="547.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="616.5" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.07%)</title><rect x="613.5" y="531.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="616.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.05%)</title><rect x="613.8" y="515.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.8" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="613.8" y="499.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.8" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="614.1" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="617.1" y="494.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="614.1" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="617.1" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="614.1" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="617.1" y="462.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (1 samples, 0.02%)</title><rect x="614.4" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="617.4" y="542.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="614.7" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="617.7" y="558.0"></text>
</g>
<g>
<title>tcp_push (386 samples, 9.51%)</title><rect x="615.0" y="547.0" width="112.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="618.0" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (385 samples, 9.49%)</title><rect x="615.0" y="531.0" width="112.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="618.0" y="542.0">__tcp_push_pe..</text>
</g>
<g>
<title>tcp_write_xmit (385 samples, 9.49%)</title><rect x="615.0" y="515.0" width="112.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="618.0" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (379 samples, 9.34%)</title><rect x="615.3" y="499.0" width="110.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="618.3" y="510.0">__tcp_transmi..</text>
</g>
<g>
<title>ip_queue_xmit (379 samples, 9.34%)</title><rect x="615.3" y="483.0" width="110.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="618.3" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (379 samples, 9.34%)</title><rect x="615.3" y="467.0" width="110.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="618.3" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (378 samples, 9.32%)</title><rect x="615.3" y="451.0" width="109.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="618.3" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (378 samples, 9.32%)</title><rect x="615.3" y="435.0" width="109.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="618.3" y="446.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="615.6" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="618.6" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (376 samples, 9.27%)</title><rect x="615.9" y="419.0" width="109.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="618.9" y="430.0">ip_finish_out..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="615.9" y="403.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="618.9" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (374 samples, 9.22%)</title><rect x="616.4" y="403.0" width="108.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="619.4" y="414.0">ip_finish_out..</text>
</g>
<g>
<title>__local_bh_enable_ip (367 samples, 9.05%)</title><rect x="617.0" y="387.0" width="106.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="620.0" y="398.0">__local_bh_en..</text>
</g>
<g>
<title>do_softirq.part.21 (367 samples, 9.05%)</title><rect x="617.0" y="371.0" width="106.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="620.0" y="382.0">do_softirq.pa..</text>
</g>
<g>
<title>do_softirq_own_stack (367 samples, 9.05%)</title><rect x="617.0" y="355.0" width="106.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="620.0" y="366.0">do_softirq_ow..</text>
</g>
<g>
<title>__softirqentry_text_start (367 samples, 9.05%)</title><rect x="617.0" y="339.0" width="106.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="620.0" y="350.0">__softirqentr..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="617.0" y="323.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="620.0" y="334.0"></text>
</g>
<g>
<title>net_rx_action (366 samples, 9.02%)</title><rect x="617.3" y="323.0" width="106.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="620.3" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (366 samples, 9.02%)</title><rect x="617.3" y="307.0" width="106.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="620.3" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (365 samples, 9.00%)</title><rect x="617.6" y="291.0" width="106.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="620.6" y="302.0">__netif_recei..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (365 samples, 9.00%)</title><rect x="617.6" y="275.0" width="106.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.6" y="286.0">__netif_recei..</text>
</g>
<g>
<title>ip_rcv (364 samples, 8.97%)</title><rect x="617.6" y="259.0" width="105.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="620.6" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.05%)</title><rect x="617.6" y="243.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="620.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (362 samples, 8.92%)</title><rect x="618.2" y="243.0" width="105.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="621.2" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (362 samples, 8.92%)</title><rect x="618.2" y="227.0" width="105.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="621.2" y="238.0">ip_local_deli..</text>
</g>
<g>
<title>ip_local_deliver_finish (362 samples, 8.92%)</title><rect x="618.2" y="211.0" width="105.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="621.2" y="222.0">ip_local_deli..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (362 samples, 8.92%)</title><rect x="618.2" y="195.0" width="105.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.2" y="206.0">ip_protocol_d..</text>
</g>
<g>
<title>tcp_v4_rcv (362 samples, 8.92%)</title><rect x="618.2" y="179.0" width="105.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="621.2" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="618.2" y="163.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.2" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.02%)</title><rect x="618.8" y="163.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="621.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (357 samples, 8.80%)</title><rect x="619.1" y="163.0" width="103.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="622.1" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (356 samples, 8.77%)</title><rect x="619.1" y="147.0" width="103.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="622.1" y="158.0">tcp_rcv_esta..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.02%)</title><rect x="619.6" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="622.6" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="619.9" y="131.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.12%)</title><rect x="620.2" y="131.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="623.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.10%)</title><rect x="620.5" y="115.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="623.5" y="126.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="620.8" y="99.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="623.8" y="110.0"></text>
</g>
<g>
<title>jiffies_to_usecs (2 samples, 0.05%)</title><rect x="621.1" y="99.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="624.1" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (346 samples, 8.53%)</title><rect x="621.7" y="131.0" width="100.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="624.7" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (346 samples, 8.53%)</title><rect x="621.7" y="115.0" width="100.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="624.7" y="126.0">sock_def_rea..</text>
</g>
<g>
<title>__wake_up_sync_key (346 samples, 8.53%)</title><rect x="621.7" y="99.0" width="100.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="624.7" y="110.0">__wake_up_sy..</text>
</g>
<g>
<title>__wake_up_common_lock (346 samples, 8.53%)</title><rect x="621.7" y="83.0" width="100.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="624.7" y="94.0">__wake_up_co..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (346 samples, 8.53%)</title><rect x="621.7" y="67.0" width="100.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="624.7" y="78.0">_raw_spin_un..</text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="722.3" y="131.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="725.3" y="142.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.02%)</title><rect x="722.6" y="147.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="725.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="722.9" y="163.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="725.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.02%)</title><rect x="723.2" y="163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="726.2" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="723.5" y="259.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.5" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.12%)</title><rect x="723.8" y="387.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="726.8" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.10%)</title><rect x="723.8" y="371.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="726.8" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.07%)</title><rect x="724.0" y="355.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="727.0" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.05%)</title><rect x="724.3" y="339.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="727.3" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="724.3" y="323.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="727.3" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="724.3" y="307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.3" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.02%)</title><rect x="724.6" y="307.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="727.6" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="724.6" y="291.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="727.6" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="724.9" y="371.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="727.9" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="725.2" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.2" y="462.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.05%)</title><rect x="725.5" y="499.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="728.5" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="726.1" y="499.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="729.1" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="726.1" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="729.1" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="726.4" y="499.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="729.4" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="726.4" y="483.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="729.4" y="494.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="726.4" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="729.4" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="726.7" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="729.7" y="478.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="726.7" y="451.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="729.7" y="462.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.02%)</title><rect x="726.7" y="435.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="729.7" y="446.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="727.0" y="531.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="730.0" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="727.2" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.2" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="727.2" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.2" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="727.2" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="730.2" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.12%)</title><rect x="727.5" y="595.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.12%)</title><rect x="727.5" y="579.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="730.5" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.12%)</title><rect x="727.5" y="563.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="730.5" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.12%)</title><rect x="727.5" y="547.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="730.5" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.07%)</title><rect x="727.8" y="531.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="730.8" y="542.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (2 samples, 0.05%)</title><rect x="727.8" y="515.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="730.8" y="526.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.02%)</title><rect x="728.4" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="731.4" y="526.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="728.7" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="731.7" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="729.0" y="611.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="732.0" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="729.0" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="732.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="729.0" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="732.0" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="729.0" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="732.0" y="574.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="729.3" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="732.3" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="729.6" y="627.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="732.6" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="729.9" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="732.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (16 samples, 0.39%)</title><rect x="730.2" y="643.0" width="4.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="733.2" y="654.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.39%)</title><rect x="730.2" y="627.0" width="4.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="733.2" y="638.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.39%)</title><rect x="730.2" y="611.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="733.2" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.37%)</title><rect x="730.4" y="595.0" width="4.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="733.4" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="734.8" y="643.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="737.8" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="735.1" y="691.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="738.1" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="735.1" y="675.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="738.1" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="735.1" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="738.1" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="735.7" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="738.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="735.7" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="738.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="735.7" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="738.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.05%)</title><rect x="736.0" y="771.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.0" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="736.0" y="755.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="739.0" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="736.0" y="739.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="739.0" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="736.0" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="739.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="736.6" y="787.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="739.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.02%)</title><rect x="736.6" y="771.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (483 samples, 11.91%)</title><rect x="736.8" y="787.0" width="140.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.8" y="798.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="736.8" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="736.8" y="755.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="736.8" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="739.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (482 samples, 11.88%)</title><rect x="737.1" y="771.0" width="140.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.1" y="782.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="737.1" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="737.1" y="739.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="737.1" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="737.1" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="737.1" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="740.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="737.1" y="675.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.1" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.02%)</title><rect x="737.1" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.upsert (481 samples, 11.86%)</title><rect x="737.4" y="755.0" width="139.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.4" y="766.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (479 samples, 11.81%)</title><rect x="737.4" y="739.0" width="139.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="740.4" y="750.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (479 samples, 11.81%)</title><rect x="737.4" y="723.0" width="139.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.4" y="734.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (108 samples, 2.66%)</title><rect x="737.7" y="707.0" width="31.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="740.7" y="718.0">Ja..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="737.7" y="691.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="740.7" y="702.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="738.0" y="691.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="741.0" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="738.0" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="741.0" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="738.0" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="741.0" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="738.0" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="741.0" y="654.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.02%)</title><rect x="738.3" y="691.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="741.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="738.6" y="691.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="741.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="738.6" y="675.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="741.6" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="738.6" y="659.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="741.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="738.6" y="643.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="741.6" y="654.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (103 samples, 2.54%)</title><rect x="739.2" y="691.0" width="29.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="742.2" y="702.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (102 samples, 2.51%)</title><rect x="739.2" y="675.0" width="29.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="742.2" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (102 samples, 2.51%)</title><rect x="739.2" y="659.0" width="29.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="742.2" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (101 samples, 2.49%)</title><rect x="739.2" y="643.0" width="29.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="742.2" y="654.0">ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.05%)</title><rect x="739.2" y="627.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="742.2" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="739.5" y="611.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="742.5" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="739.5" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.5" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="739.5" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="742.5" y="590.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="739.8" y="627.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="742.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (93 samples, 2.29%)</title><rect x="740.0" y="627.0" width="27.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="743.0" y="638.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="740.0" y="611.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="743.0" y="622.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="740.6" y="611.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="743.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.02%)</title><rect x="740.9" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="743.9" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="740.9" y="595.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="743.9" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="740.9" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="743.9" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="740.9" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="743.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (84 samples, 2.07%)</title><rect x="741.2" y="611.0" width="24.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="744.2" y="622.0">r..</text>
</g>
<g>
<title>__GI___sched_yield (3 samples, 0.07%)</title><rect x="742.4" y="595.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="745.4" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="742.7" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="745.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="742.7" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="745.7" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.02%)</title><rect x="742.7" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="745.7" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.02%)</title><rect x="742.7" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="745.7" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="742.7" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="745.7" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="742.7" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="745.7" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="743.0" y="579.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="743.0" y="563.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="746.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="743.0" y="547.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="746.0" y="558.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.10%)</title><rect x="743.2" y="595.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="746.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="743.2" y="579.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="746.2" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="743.2" y="563.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="746.2" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.10%)</title><rect x="743.2" y="547.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="746.2" y="558.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.10%)</title><rect x="743.2" y="531.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="746.2" y="542.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.10%)</title><rect x="743.2" y="515.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="746.2" y="526.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.10%)</title><rect x="743.2" y="499.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="746.2" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.10%)</title><rect x="743.2" y="483.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="746.2" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.10%)</title><rect x="743.2" y="467.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="746.2" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="744.4" y="595.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="747.4" y="606.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="744.7" y="595.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="747.7" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="745.0" y="595.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="748.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.02%)</title><rect x="745.3" y="595.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="748.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (11 samples, 0.27%)</title><rect x="745.6" y="595.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="748.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (10 samples, 0.25%)</title><rect x="745.6" y="579.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="748.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (9 samples, 0.22%)</title><rect x="745.6" y="563.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="748.6" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (3 samples, 0.07%)</title><rect x="745.9" y="547.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="748.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.02%)</title><rect x="746.7" y="547.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="749.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (4 samples, 0.10%)</title><rect x="747.0" y="547.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="750.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="747.0" y="531.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="750.0" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="747.3" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="750.3" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="747.3" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="750.3" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="747.3" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="750.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.02%)</title><rect x="747.6" y="531.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="750.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.02%)</title><rect x="747.6" y="515.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="750.6" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="747.6" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="750.6" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="747.6" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="750.6" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="747.6" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="750.6" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="747.9" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="750.9" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="747.9" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="750.9" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="747.9" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.9" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="748.2" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="751.2" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="748.2" y="547.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="751.2" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="748.2" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="751.2" y="542.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.02%)</title><rect x="748.5" y="579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="751.5" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="748.5" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="751.5" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="748.5" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="751.5" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="748.5" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="751.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.02%)</title><rect x="748.8" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="751.8" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="748.8" y="579.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="751.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.02%)</title><rect x="749.1" y="595.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="752.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.02%)</title><rect x="749.4" y="595.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="752.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="749.4" y="579.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="752.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="749.4" y="563.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="752.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="749.4" y="547.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="752.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (30 samples, 0.74%)</title><rect x="749.6" y="595.0" width="8.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="752.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (30 samples, 0.74%)</title><rect x="749.6" y="579.0" width="8.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="752.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 0.64%)</title><rect x="749.6" y="563.0" width="7.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="752.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (26 samples, 0.64%)</title><rect x="749.6" y="547.0" width="7.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="752.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.02%)</title><rect x="749.6" y="531.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="752.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (22 samples, 0.54%)</title><rect x="749.9" y="531.0" width="6.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="752.9" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.02%)</title><rect x="749.9" y="515.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="752.9" y="526.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.02%)</title><rect x="749.9" y="499.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="752.9" y="510.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.02%)</title><rect x="749.9" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="752.9" y="494.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="749.9" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="752.9" y="478.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="749.9" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="752.9" y="462.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="749.9" y="435.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="752.9" y="446.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="749.9" y="419.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="752.9" y="430.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="749.9" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="752.9" y="414.0"></text>
</g>
<g>
<title>try_charge (1 samples, 0.02%)</title><rect x="749.9" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="752.9" y="398.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (20 samples, 0.49%)</title><rect x="750.2" y="515.0" width="5.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="753.2" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (18 samples, 0.44%)</title><rect x="750.5" y="499.0" width="5.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="753.5" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (9 samples, 0.22%)</title><rect x="751.1" y="483.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="754.1" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.10%)</title><rect x="751.1" y="467.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="754.1" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="751.7" y="451.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="754.7" y="462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="751.7" y="435.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="754.7" y="446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="751.7" y="419.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="754.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.10%)</title><rect x="752.3" y="467.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="755.3" y="478.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.05%)</title><rect x="752.6" y="451.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="755.6" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="752.6" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="755.6" y="446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="752.6" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="755.6" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="752.6" y="403.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="755.6" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="753.1" y="451.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="756.1" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="753.4" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="756.4" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="753.4" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="756.4" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="753.4" y="435.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="756.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="753.7" y="483.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="756.7" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect x="753.7" y="467.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="756.7" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.15%)</title><rect x="754.0" y="483.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="757.0" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (6 samples, 0.15%)</title><rect x="754.0" y="467.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="757.0" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.15%)</title><rect x="754.0" y="451.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="757.0" y="462.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="755.5" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="758.5" y="446.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="755.5" y="419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="758.5" y="430.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="755.5" y="403.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="758.5" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="755.8" y="499.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="758.8" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="756.0" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="759.0" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="756.0" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="759.0" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="756.0" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="759.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.02%)</title><rect x="756.3" y="531.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="759.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.05%)</title><rect x="756.6" y="531.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="759.6" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="756.9" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="759.9" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="756.9" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="759.9" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="756.9" y="483.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="759.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="757.2" y="563.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="760.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="757.2" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="760.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="757.2" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="760.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="757.2" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="760.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.02%)</title><rect x="757.5" y="563.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="760.5" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="757.8" y="563.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="760.8" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="757.8" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="760.8" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="757.8" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="760.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (9 samples, 0.22%)</title><rect x="758.4" y="595.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="761.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (1 samples, 0.02%)</title><rect x="758.4" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="761.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (8 samples, 0.20%)</title><rect x="758.7" y="579.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="761.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.20%)</title><rect x="758.7" y="563.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="761.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.20%)</title><rect x="758.7" y="547.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="761.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.02%)</title><rect x="758.7" y="531.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="761.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (6 samples, 0.15%)</title><rect x="759.0" y="531.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="762.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.02%)</title><rect x="759.2" y="515.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="762.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.10%)</title><rect x="759.5" y="515.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="762.5" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.10%)</title><rect x="759.5" y="499.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="762.5" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (4 samples, 0.10%)</title><rect x="759.5" y="483.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="762.5" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (2 samples, 0.05%)</title><rect x="760.1" y="467.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="763.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.05%)</title><rect x="760.1" y="451.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="763.1" y="462.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect x="760.4" y="435.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="763.4" y="446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="760.4" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="763.4" y="430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="760.4" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="763.4" y="414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="760.4" y="387.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="763.4" y="398.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="760.4" y="371.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="763.4" y="382.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="760.4" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="763.4" y="366.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="760.4" y="339.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="763.4" y="350.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.02%)</title><rect x="760.7" y="531.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="763.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.02%)</title><rect x="761.0" y="595.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="764.0" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="761.0" y="579.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="764.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="761.0" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="764.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="761.0" y="547.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="764.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.07%)</title><rect x="761.3" y="595.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="764.3" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="761.3" y="579.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="764.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="761.3" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="764.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="761.3" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="764.3" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="761.6" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="764.6" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="761.6" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="764.6" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="761.6" y="547.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="764.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.10%)</title><rect x="762.2" y="595.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="765.2" y="606.0"></text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.02%)</title><rect x="762.2" y="579.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="765.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="762.2" y="563.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="765.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="762.2" y="547.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="765.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.07%)</title><rect x="762.4" y="579.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="765.4" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="762.4" y="563.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="765.4" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="762.4" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="765.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="762.4" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="765.4" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="762.4" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="765.4" y="526.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="762.4" y="499.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="765.4" y="510.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="762.4" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="765.4" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="762.4" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="765.4" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="762.7" y="563.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="765.7" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="763.0" y="563.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="766.0" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="763.0" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="766.0" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="763.0" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="766.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.02%)</title><rect x="763.3" y="595.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="766.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.05%)</title><rect x="763.6" y="595.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="766.6" y="606.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.02%)</title><rect x="763.9" y="579.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="766.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="763.9" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="766.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="763.9" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="766.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="763.9" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="766.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (2 samples, 0.05%)</title><rect x="764.2" y="595.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="767.2" y="606.0"></text>
</g>
<g>
<title>std::condition_variable::notify_one() (2 samples, 0.05%)</title><rect x="764.2" y="579.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="767.2" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="764.5" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="767.5" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="764.5" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="767.5" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="764.5" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="767.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (1 samples, 0.02%)</title><rect x="764.8" y="595.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="767.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="765.1" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="768.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="765.1" y="579.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="768.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="765.1" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="768.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.02%)</title><rect x="765.6" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="768.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="765.6" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="768.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="765.6" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="768.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="765.6" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="768.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.02%)</title><rect x="765.9" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="768.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.05%)</title><rect x="766.2" y="611.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="769.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="766.5" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="769.5" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="766.5" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="769.5" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="766.5" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="769.5" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="766.8" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="769.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="766.8" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="769.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="766.8" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="769.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.02%)</title><rect x="767.1" y="627.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="770.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="767.4" y="627.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="770.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="767.4" y="611.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="770.4" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="767.4" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="770.4" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="767.4" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="770.4" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="767.4" y="563.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="770.4" y="574.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.07%)</title><rect x="767.7" y="627.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="770.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="768.3" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="771.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="768.3" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="771.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="768.3" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="771.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.02%)</title><rect x="768.6" y="643.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="771.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.02%)</title><rect x="768.8" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="771.8" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="768.8" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="771.8" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="768.8" y="643.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="771.8" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="768.8" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="771.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 2.14%)</title><rect x="769.1" y="707.0" width="25.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="772.1" y="718.0">[..</text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="769.1" y="691.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="772.1" y="702.0"></text>
</g>
<g>
<title>__lll_lock_wait (4 samples, 0.10%)</title><rect x="769.4" y="691.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="772.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="769.4" y="675.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="772.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="769.4" y="659.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="772.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.10%)</title><rect x="769.4" y="643.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="772.4" y="654.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.10%)</title><rect x="769.4" y="627.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="772.4" y="638.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.10%)</title><rect x="769.4" y="611.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="772.4" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.10%)</title><rect x="769.4" y="595.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="772.4" y="606.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.10%)</title><rect x="769.4" y="579.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="772.4" y="590.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.10%)</title><rect x="769.4" y="563.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="772.4" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.10%)</title><rect x="769.4" y="547.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="772.4" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_wait (34 samples, 0.84%)</title><rect x="770.6" y="691.0" width="9.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="773.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.81%)</title><rect x="770.9" y="675.0" width="9.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="773.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.81%)</title><rect x="770.9" y="659.0" width="9.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="773.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.81%)</title><rect x="770.9" y="643.0" width="9.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="773.9" y="654.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.79%)</title><rect x="770.9" y="627.0" width="9.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="773.9" y="638.0"></text>
</g>
<g>
<title>futex_wait (32 samples, 0.79%)</title><rect x="770.9" y="611.0" width="9.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="773.9" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (30 samples, 0.74%)</title><rect x="771.2" y="595.0" width="8.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="774.2" y="606.0"></text>
</g>
<g>
<title>schedule (30 samples, 0.74%)</title><rect x="771.2" y="579.0" width="8.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="774.2" y="590.0"></text>
</g>
<g>
<title>__schedule (30 samples, 0.74%)</title><rect x="771.2" y="563.0" width="8.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="774.2" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (29 samples, 0.71%)</title><rect x="771.5" y="547.0" width="8.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="774.5" y="558.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="779.9" y="595.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="782.9" y="606.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="779.9" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="782.9" y="590.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="780.2" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="783.2" y="638.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="780.5" y="691.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="783.5" y="702.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="780.5" y="675.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="783.5" y="686.0"></text>
</g>
<g>
<title>write (47 samples, 1.16%)</title><rect x="780.8" y="691.0" width="13.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="783.8" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (46 samples, 1.13%)</title><rect x="780.8" y="675.0" width="13.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="783.8" y="686.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="780.8" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="783.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 1.11%)</title><rect x="781.1" y="659.0" width="13.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="784.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (44 samples, 1.08%)</title><rect x="781.3" y="643.0" width="12.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="784.3" y="654.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.02%)</title><rect x="781.3" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="784.3" y="638.0"></text>
</g>
<g>
<title>ksys_write (43 samples, 1.06%)</title><rect x="781.6" y="627.0" width="12.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="784.6" y="638.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.05%)</title><rect x="781.9" y="611.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="784.9" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="781.9" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.9" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="781.9" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="784.9" y="590.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="782.2" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="785.2" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="782.5" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="785.5" y="622.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.02%)</title><rect x="782.8" y="611.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="785.8" y="622.0"></text>
</g>
<g>
<title>vfs_write (38 samples, 0.94%)</title><rect x="783.1" y="611.0" width="11.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="786.1" y="622.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.02%)</title><rect x="783.4" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="786.4" y="606.0"></text>
</g>
<g>
<title>__vfs_write (34 samples, 0.84%)</title><rect x="783.7" y="595.0" width="9.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="786.7" y="606.0"></text>
</g>
<g>
<title>new_sync_write (34 samples, 0.84%)</title><rect x="783.7" y="579.0" width="9.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="786.7" y="590.0"></text>
</g>
<g>
<title>down_write_trylock (1 samples, 0.02%)</title><rect x="783.7" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="786.7" y="574.0"></text>
</g>
<g>
<title>ext4_file_write_iter (33 samples, 0.81%)</title><rect x="784.0" y="563.0" width="9.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="787.0" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (33 samples, 0.81%)</title><rect x="784.0" y="547.0" width="9.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="787.0" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="784.3" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="787.3" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="784.8" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="787.8" y="542.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.02%)</title><rect x="785.1" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="788.1" y="542.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.02%)</title><rect x="785.1" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="788.1" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="785.1" y="499.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="788.1" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.02%)</title><rect x="785.1" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="788.1" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="785.1" y="467.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="788.1" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="785.1" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="788.1" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="785.1" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="788.1" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (25 samples, 0.62%)</title><rect x="785.4" y="531.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="788.4" y="542.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.05%)</title><rect x="785.4" y="515.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="788.4" y="526.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="786.0" y="515.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="789.0" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_begin (5 samples, 0.12%)</title><rect x="786.3" y="515.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="789.3" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.05%)</title><rect x="786.3" y="499.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="789.3" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.05%)</title><rect x="786.3" y="483.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="789.3" y="494.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.02%)</title><rect x="786.3" y="467.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="789.3" y="478.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.02%)</title><rect x="786.6" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="789.6" y="478.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.02%)</title><rect x="786.6" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="789.6" y="462.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="786.9" y="499.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="789.9" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.05%)</title><rect x="787.2" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="790.2" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.05%)</title><rect x="787.2" y="483.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="790.2" y="494.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="787.2" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="790.2" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="787.2" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="790.2" y="462.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="787.2" y="435.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="790.2" y="446.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.02%)</title><rect x="787.5" y="467.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="790.5" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (11 samples, 0.27%)</title><rect x="787.7" y="515.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="790.7" y="526.0"></text>
</g>
<g>
<title>generic_write_end (11 samples, 0.27%)</title><rect x="787.7" y="499.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="790.7" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (1 samples, 0.02%)</title><rect x="787.7" y="483.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="790.7" y="494.0"></text>
</g>
<g>
<title>__generic_write_end (10 samples, 0.25%)</title><rect x="788.0" y="483.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="791.0" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (9 samples, 0.22%)</title><rect x="788.3" y="467.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="791.3" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (8 samples, 0.20%)</title><rect x="788.6" y="451.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="791.6" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (7 samples, 0.17%)</title><rect x="788.6" y="435.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="791.6" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="788.6" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="791.6" y="430.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (4 samples, 0.10%)</title><rect x="788.9" y="419.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="791.9" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.05%)</title><rect x="789.2" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="792.2" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.05%)</title><rect x="789.2" y="387.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="792.2" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (2 samples, 0.05%)</title><rect x="789.2" y="371.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="792.2" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="789.2" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="792.2" y="366.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.02%)</title><rect x="789.5" y="355.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="792.5" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="789.5" y="339.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="792.5" y="350.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.02%)</title><rect x="789.8" y="403.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="792.8" y="414.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.05%)</title><rect x="790.1" y="419.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="793.1" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="790.1" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="793.1" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="790.1" y="387.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="793.1" y="398.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (1 samples, 0.02%)</title><rect x="790.1" y="371.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="793.1" y="382.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.02%)</title><rect x="790.4" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="793.4" y="414.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="790.7" y="435.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="793.7" y="446.0"></text>
</g>
<g>
<title>ext4_nonda_switch (2 samples, 0.05%)</title><rect x="790.9" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="793.9" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="791.5" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="794.5" y="526.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.02%)</title><rect x="791.8" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="794.8" y="526.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="792.1" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="795.1" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="792.1" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="795.1" y="510.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.02%)</title><rect x="792.4" y="515.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="795.4" y="526.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="792.7" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="795.7" y="542.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (2 samples, 0.05%)</title><rect x="793.0" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="796.0" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="793.6" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="796.6" y="606.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="793.6" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="796.6" y="590.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.05%)</title><rect x="793.6" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="796.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="794.1" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="797.1" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="794.1" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="797.1" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="794.1" y="643.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="797.1" y="654.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.05%)</title><rect x="794.4" y="707.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="797.4" y="718.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="795.0" y="707.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="798.0" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="795.0" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="798.0" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="795.0" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="798.0" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="795.0" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="798.0" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (278 samples, 6.85%)</title><rect x="795.3" y="707.0" width="80.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="798.3" y="718.0">pthread_c..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (278 samples, 6.85%)</title><rect x="795.3" y="691.0" width="80.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="798.3" y="702.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (278 samples, 6.85%)</title><rect x="795.3" y="675.0" width="80.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="798.3" y="686.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_futex (276 samples, 6.80%)</title><rect x="795.9" y="659.0" width="80.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="798.9" y="670.0">__x64_sys..</text>
</g>
<g>
<title>do_futex (276 samples, 6.80%)</title><rect x="795.9" y="643.0" width="80.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="798.9" y="654.0">do_futex</text>
</g>
<g>
<title>futex_wake (276 samples, 6.80%)</title><rect x="795.9" y="627.0" width="80.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="798.9" y="638.0">futex_wake</text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="796.2" y="611.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="799.2" y="622.0"></text>
</g>
<g>
<title>plist_del (1 samples, 0.02%)</title><rect x="796.2" y="595.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="799.2" y="606.0"></text>
</g>
<g>
<title>wake_up_q (274 samples, 6.75%)</title><rect x="796.5" y="611.0" width="79.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="799.5" y="622.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (274 samples, 6.75%)</title><rect x="796.5" y="595.0" width="79.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="799.5" y="606.0">try_to_wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (274 samples, 6.75%)</title><rect x="796.5" y="579.0" width="79.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="799.5" y="590.0">_raw_spin..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.02%)</title><rect x="876.2" y="707.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="879.2" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="876.2" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="879.2" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="876.2" y="675.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="879.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="876.2" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="879.2" y="670.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="876.5" y="707.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="879.5" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="876.5" y="691.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="879.5" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="876.5" y="675.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="879.5" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="876.5" y="659.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="879.5" y="670.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="876.5" y="643.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="879.5" y="654.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="876.5" y="627.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="879.5" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="876.5" y="611.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="879.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.convertValuesSubMinValue (2 samples, 0.05%)</title><rect x="876.7" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="879.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="877.3" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="880.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="877.3" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="877.3" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="880.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="877.3" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.3" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="877.3" y="739.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="880.3" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="877.3" y="723.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="880.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="877.3" y="707.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="880.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="877.3" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="880.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.10%)</title><rect x="877.6" y="835.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="880.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.02%)</title><rect x="877.6" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.6" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="877.6" y="803.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="880.6" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="877.6" y="787.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="880.6" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="877.6" y="771.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="880.6" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.07%)</title><rect x="877.9" y="819.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="880.9" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.07%)</title><rect x="877.9" y="803.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="880.9" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="877.9" y="787.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="880.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="878.8" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="881.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="878.8" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="881.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="878.8" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="881.8" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 0.44%)</title><rect x="879.1" y="851.0" width="5.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.44%)</title><rect x="879.1" y="835.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.1" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.02%)</title><rect x="879.1" y="819.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="882.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="879.4" y="819.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="882.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="879.4" y="803.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="882.4" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.07%)</title><rect x="879.4" y="787.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="882.4" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.07%)</title><rect x="879.4" y="771.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="882.4" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.07%)</title><rect x="879.4" y="755.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="882.4" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="879.4" y="739.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="882.4" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="879.7" y="739.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="882.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="879.7" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="882.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="879.7" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="882.7" y="718.0"></text>
</g>
<g>
<title>__GI___recv (14 samples, 0.35%)</title><rect x="880.2" y="819.0" width="4.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="883.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.35%)</title><rect x="880.2" y="803.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="883.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.35%)</title><rect x="880.2" y="787.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="883.2" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (14 samples, 0.35%)</title><rect x="880.2" y="771.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="883.2" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (13 samples, 0.32%)</title><rect x="880.2" y="755.0" width="3.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="883.2" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.30%)</title><rect x="880.5" y="739.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="883.5" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (9 samples, 0.22%)</title><rect x="880.5" y="723.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="883.5" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="880.5" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="883.5" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="880.8" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="883.8" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 0.17%)</title><rect x="881.1" y="707.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="884.1" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.10%)</title><rect x="881.4" y="691.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="884.4" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.07%)</title><rect x="881.4" y="675.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="884.4" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="881.4" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="884.4" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.05%)</title><rect x="881.7" y="659.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="884.7" y="670.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="881.7" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="884.7" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="882.0" y="643.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="885.0" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="882.0" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="885.0" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="882.3" y="675.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="885.3" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="882.6" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="885.6" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="882.9" y="691.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="885.9" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="882.9" y="675.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="885.9" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="882.9" y="659.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="885.9" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.05%)</title><rect x="883.1" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="886.1" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.05%)</title><rect x="883.1" y="707.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="886.1" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.05%)</title><rect x="883.1" y="691.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="886.1" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.05%)</title><rect x="883.1" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="886.1" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="883.7" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="886.7" y="734.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="884.0" y="755.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="887.0" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=55632] (1,048 samples, 25.83%)</title><rect x="884.3" y="915.0" width="304.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="887.3" y="926.0">[NIO Selector #3 tid=55632]</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.05%)</title><rect x="884.3" y="899.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="887.3" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="884.6" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="887.6" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="884.6" y="867.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="887.6" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="884.6" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="887.6" y="862.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,046 samples, 25.78%)</title><rect x="884.9" y="899.0" width="304.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.9" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (28 samples, 0.69%)</title><rect x="884.9" y="883.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="887.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (28 samples, 0.69%)</title><rect x="884.9" y="867.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="887.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.67%)</title><rect x="884.9" y="851.0" width="7.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="887.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (27 samples, 0.67%)</title><rect x="884.9" y="835.0" width="7.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="887.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.67%)</title><rect x="884.9" y="819.0" width="7.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="887.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.67%)</title><rect x="884.9" y="803.0" width="7.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="887.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (25 samples, 0.62%)</title><rect x="885.5" y="787.0" width="7.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="888.5" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (25 samples, 0.62%)</title><rect x="885.5" y="771.0" width="7.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="888.5" y="782.0"></text>
</g>
<g>
<title>ep_poll (23 samples, 0.57%)</title><rect x="885.5" y="755.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="888.5" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (3 samples, 0.07%)</title><rect x="885.8" y="739.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="888.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (19 samples, 0.47%)</title><rect x="886.6" y="739.0" width="5.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="889.6" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (19 samples, 0.47%)</title><rect x="886.6" y="723.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="889.6" y="734.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.47%)</title><rect x="886.6" y="707.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="889.6" y="718.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.47%)</title><rect x="886.6" y="691.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="889.6" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (17 samples, 0.42%)</title><rect x="887.2" y="675.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="890.2" y="686.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.02%)</title><rect x="892.2" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="895.2" y="766.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="892.5" y="755.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="895.5" y="766.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="892.7" y="851.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="895.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,018 samples, 25.09%)</title><rect x="893.0" y="883.0" width="296.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.0" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,018 samples, 25.09%)</title><rect x="893.0" y="867.0" width="296.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.0" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,010 samples, 24.90%)</title><rect x="893.0" y="851.0" width="293.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.0" y="862.0">one/nio/http/HttpSession.processHttpBuf..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="895.9" y="835.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="898.9" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="895.9" y="819.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="898.9" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="896.2" y="803.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="899.2" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="896.2" y="787.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="899.2" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="896.2" y="771.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="899.2" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="896.2" y="755.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="899.2" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="896.2" y="739.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="899.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="896.2" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="899.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="896.2" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="899.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="896.2" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="899.2" y="702.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="896.5" y="835.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.5" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="896.5" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="899.5" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="896.5" y="803.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="899.5" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="896.5" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="899.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (984 samples, 24.25%)</title><rect x="896.8" y="835.0" width="286.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.8" y="846.0">one/nio/http/HttpSession.handleParsedR..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (984 samples, 24.25%)</title><rect x="896.8" y="819.0" width="286.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.8" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (982 samples, 24.21%)</title><rect x="896.8" y="803.0" width="285.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="899.8" y="814.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (503 samples, 12.40%)</title><rect x="896.8" y="787.0" width="146.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="899.8" y="798.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (501 samples, 12.35%)</title><rect x="897.1" y="771.0" width="145.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.1" y="782.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.05%)</title><rect x="897.1" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.02%)</title><rect x="897.1" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.02%)</title><rect x="897.1" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.1" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="897.1" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="900.1" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="897.1" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="900.1" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="897.1" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.1" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="897.4" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="900.4" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="897.4" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="900.4" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="897.4" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="900.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (499 samples, 12.30%)</title><rect x="897.7" y="755.0" width="145.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="900.7" y="766.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/Session.write (499 samples, 12.30%)</title><rect x="897.7" y="739.0" width="145.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.7" y="750.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="897.7" y="723.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="900.7" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="897.7" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.7" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="897.7" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="900.7" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="897.7" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="900.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (498 samples, 12.28%)</title><rect x="898.0" y="723.0" width="144.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.0" y="734.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (498 samples, 12.28%)</title><rect x="898.0" y="707.0" width="144.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="901.0" y="718.0">one/nio/net/Native..</text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="898.0" y="691.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="901.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.20%)</title><rect x="898.0" y="675.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="901.0" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.20%)</title><rect x="898.0" y="659.0" width="2.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="901.0" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.20%)</title><rect x="898.0" y="643.0" width="2.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="901.0" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.12%)</title><rect x="898.6" y="627.0" width="1.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="901.6" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.10%)</title><rect x="898.9" y="611.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="901.9" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.10%)</title><rect x="898.9" y="595.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="901.9" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.10%)</title><rect x="898.9" y="579.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="901.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="900.0" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="903.0" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="900.0" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="903.0" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="900.0" y="595.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="903.0" y="606.0"></text>
</g>
<g>
<title>__send (490 samples, 12.08%)</title><rect x="900.3" y="691.0" width="142.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="903.3" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (488 samples, 12.03%)</title><rect x="900.6" y="675.0" width="141.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="903.6" y="686.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>do_syscall_64 (488 samples, 12.03%)</title><rect x="900.6" y="659.0" width="141.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="903.6" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (478 samples, 11.78%)</title><rect x="901.2" y="643.0" width="139.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="904.2" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (478 samples, 11.78%)</title><rect x="901.2" y="627.0" width="139.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="904.2" y="638.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="901.2" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="904.2" y="622.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="901.5" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="904.5" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="901.8" y="611.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="904.8" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (473 samples, 11.66%)</title><rect x="902.1" y="611.0" width="137.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="905.1" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (470 samples, 11.58%)</title><rect x="902.3" y="595.0" width="136.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="905.3" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (469 samples, 11.56%)</title><rect x="902.6" y="579.0" width="136.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="905.6" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="902.6" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="905.6" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="902.6" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="905.6" y="558.0"></text>
</g>
<g>
<title>skb_put (1 samples, 0.02%)</title><rect x="902.9" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="905.9" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.02%)</title><rect x="903.2" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="906.2" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (466 samples, 11.49%)</title><rect x="903.5" y="563.0" width="135.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="906.5" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="903.5" y="547.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="906.5" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="903.8" y="531.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="906.8" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="904.4" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="907.4" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="905.0" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="908.0" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="905.0" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="908.0" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.15%)</title><rect x="905.3" y="547.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="908.3" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.10%)</title><rect x="905.3" y="531.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="908.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.05%)</title><rect x="905.3" y="515.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="908.3" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="905.3" y="499.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="908.3" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="905.5" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="908.5" y="510.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.05%)</title><rect x="905.8" y="515.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="908.8" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.05%)</title><rect x="906.4" y="531.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="909.4" y="542.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="907.0" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="910.0" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.02%)</title><rect x="907.0" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="910.0" y="542.0"></text>
</g>
<g>
<title>tcp_push (451 samples, 11.12%)</title><rect x="907.3" y="547.0" width="131.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="910.3" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (450 samples, 11.09%)</title><rect x="907.6" y="531.0" width="130.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="910.6" y="542.0">__tcp_push_pendi..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="907.6" y="515.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="910.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (449 samples, 11.07%)</title><rect x="907.9" y="515.0" width="130.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="910.9" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="907.9" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="910.9" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (441 samples, 10.87%)</title><rect x="908.2" y="499.0" width="128.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="911.2" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (438 samples, 10.80%)</title><rect x="908.7" y="483.0" width="127.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="911.7" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (438 samples, 10.80%)</title><rect x="908.7" y="467.0" width="127.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.7" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="908.7" y="451.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="911.7" y="462.0"></text>
</g>
<g>
<title>ip_local_out (437 samples, 10.77%)</title><rect x="909.0" y="451.0" width="127.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="912.0" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (437 samples, 10.77%)</title><rect x="909.0" y="435.0" width="127.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="912.0" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="909.0" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="912.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (435 samples, 10.72%)</title><rect x="909.3" y="419.0" width="126.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.3" y="430.0">ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (435 samples, 10.72%)</title><rect x="909.3" y="403.0" width="126.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="912.3" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (428 samples, 10.55%)</title><rect x="910.2" y="387.0" width="124.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="913.2" y="398.0">__local_bh_enab..</text>
</g>
<g>
<title>do_softirq.part.21 (428 samples, 10.55%)</title><rect x="910.2" y="371.0" width="124.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="913.2" y="382.0">do_softirq.part..</text>
</g>
<g>
<title>do_softirq_own_stack (428 samples, 10.55%)</title><rect x="910.2" y="355.0" width="124.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="913.2" y="366.0">do_softirq_own_..</text>
</g>
<g>
<title>__softirqentry_text_start (428 samples, 10.55%)</title><rect x="910.2" y="339.0" width="124.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="913.2" y="350.0">__softirqentry_..</text>
</g>
<g>
<title>net_rx_action (427 samples, 10.53%)</title><rect x="910.2" y="323.0" width="124.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="913.2" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (427 samples, 10.53%)</title><rect x="910.2" y="307.0" width="124.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="913.2" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (427 samples, 10.53%)</title><rect x="910.2" y="291.0" width="124.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="913.2" y="302.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (427 samples, 10.53%)</title><rect x="910.2" y="275.0" width="124.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="913.2" y="286.0">__netif_receive..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="910.2" y="259.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="913.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv (423 samples, 10.43%)</title><rect x="911.1" y="259.0" width="123.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="914.1" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.02%)</title><rect x="911.4" y="243.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="914.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (421 samples, 10.38%)</title><rect x="911.7" y="243.0" width="122.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="914.7" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (421 samples, 10.38%)</title><rect x="911.7" y="227.0" width="122.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="914.7" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (421 samples, 10.38%)</title><rect x="911.7" y="211.0" width="122.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="914.7" y="222.0">ip_local_delive..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (421 samples, 10.38%)</title><rect x="911.7" y="195.0" width="122.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="914.7" y="206.0">ip_protocol_del..</text>
</g>
<g>
<title>tcp_v4_rcv (421 samples, 10.38%)</title><rect x="911.7" y="179.0" width="122.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="914.7" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="911.7" y="163.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="914.7" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="911.7" y="147.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="914.7" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="911.9" y="147.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="914.9" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (419 samples, 10.33%)</title><rect x="912.2" y="163.0" width="121.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.2" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="912.2" y="147.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="915.2" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="912.5" y="147.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="915.5" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (417 samples, 10.28%)</title><rect x="912.8" y="147.0" width="121.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="915.8" y="158.0">tcp_rcv_establi..</text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="913.4" y="131.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="916.4" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="913.7" y="131.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="916.7" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="914.0" y="131.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="917.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.05%)</title><rect x="914.3" y="131.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="917.3" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.05%)</title><rect x="914.3" y="115.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="917.3" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="914.3" y="99.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="917.3" y="110.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="914.3" y="83.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="917.3" y="94.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="914.6" y="99.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="917.6" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (408 samples, 10.06%)</title><rect x="914.9" y="131.0" width="118.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="917.9" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (408 samples, 10.06%)</title><rect x="914.9" y="115.0" width="118.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.9" y="126.0">sock_def_reada..</text>
</g>
<g>
<title>__wake_up_sync_key (408 samples, 10.06%)</title><rect x="914.9" y="99.0" width="118.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="917.9" y="110.0">__wake_up_sync..</text>
</g>
<g>
<title>__wake_up_common_lock (408 samples, 10.06%)</title><rect x="914.9" y="83.0" width="118.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="917.9" y="94.0">__wake_up_comm..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (408 samples, 10.06%)</title><rect x="914.9" y="67.0" width="118.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.9" y="78.0">_raw_spin_unlo..</text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="1033.5" y="131.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1036.5" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="1033.8" y="131.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1036.8" y="142.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.02%)</title><rect x="1034.1" y="259.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1037.1" y="270.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1034.4" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1037.4" y="334.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1034.4" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1037.4" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1034.4" y="291.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1037.4" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.10%)</title><rect x="1034.7" y="387.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1037.7" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.10%)</title><rect x="1034.7" y="371.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1037.7" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="1035.0" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1038.0" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.05%)</title><rect x="1035.3" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1038.3" y="366.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="1035.8" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1038.8" y="430.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="1036.1" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1039.1" y="494.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="1036.4" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1039.4" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="1036.7" y="499.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1039.7" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.05%)</title><rect x="1037.0" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1040.0" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1037.6" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1040.6" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="1037.6" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1040.6" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.02%)</title><rect x="1037.9" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1040.9" y="510.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="1038.2" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1041.2" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="1038.5" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1041.5" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="1038.5" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1041.5" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="1039.0" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1042.0" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.02%)</title><rect x="1039.0" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1042.0" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1039.0" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.0" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1039.0" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1042.0" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1039.0" y="531.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1042.0" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="1039.3" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1042.3" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="1039.6" y="611.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1042.6" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="1039.6" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.6" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="1039.6" y="579.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1042.6" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="1039.9" y="563.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1042.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (8 samples, 0.20%)</title><rect x="1040.2" y="643.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1043.2" y="654.0"></text>
</g>
<g>
<title>schedule (8 samples, 0.20%)</title><rect x="1040.2" y="627.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1043.2" y="638.0"></text>
</g>
<g>
<title>__schedule (8 samples, 0.20%)</title><rect x="1040.2" y="611.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1043.2" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.20%)</title><rect x="1040.2" y="595.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1043.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1042.5" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1045.5" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1042.5" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1045.5" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1042.5" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1045.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.02%)</title><rect x="1042.8" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.8" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1042.8" y="755.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1045.8" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1042.8" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1045.8" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1042.8" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1045.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (479 samples, 11.81%)</title><rect x="1043.1" y="787.0" width="139.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.1" y="798.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (479 samples, 11.81%)</title><rect x="1043.1" y="771.0" width="139.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1046.1" y="782.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.upsert (479 samples, 11.81%)</title><rect x="1043.1" y="755.0" width="139.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.1" y="766.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (477 samples, 11.76%)</title><rect x="1043.1" y="739.0" width="138.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.1" y="750.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (477 samples, 11.76%)</title><rect x="1043.1" y="723.0" width="138.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.1" y="734.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (100 samples, 2.46%)</title><rect x="1043.1" y="707.0" width="29.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1046.1" y="718.0">Ja..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.02%)</title><rect x="1043.1" y="691.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1046.1" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1043.1" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1046.1" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1043.1" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1046.1" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1043.1" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1046.1" y="654.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.05%)</title><rect x="1043.4" y="691.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1046.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="1043.4" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1046.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="1043.4" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1046.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="1043.4" y="643.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1046.4" y="654.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.02%)</title><rect x="1044.0" y="691.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1047.0" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (96 samples, 2.37%)</title><rect x="1044.3" y="691.0" width="27.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1047.3" y="702.0">r..</text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="1044.3" y="675.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1047.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (95 samples, 2.34%)</title><rect x="1044.6" y="675.0" width="27.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1047.6" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="1044.6" y="659.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1047.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (94 samples, 2.32%)</title><rect x="1044.9" y="659.0" width="27.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1047.9" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (91 samples, 2.24%)</title><rect x="1044.9" y="643.0" width="26.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1047.9" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (89 samples, 2.19%)</title><rect x="1044.9" y="627.0" width="25.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1047.9" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.02%)</title><rect x="1044.9" y="611.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1047.9" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1044.9" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1047.9" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1044.9" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1047.9" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1044.9" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1047.9" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1044.9" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1047.9" y="558.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="1044.9" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1047.9" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1044.9" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1047.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (81 samples, 2.00%)</title><rect x="1045.2" y="611.0" width="23.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1048.2" y="622.0">r..</text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.10%)</title><rect x="1045.7" y="595.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1048.7" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="1045.7" y="579.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1048.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.10%)</title><rect x="1045.7" y="563.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1048.7" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.05%)</title><rect x="1046.0" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1049.0" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (2 samples, 0.05%)</title><rect x="1046.0" y="531.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1049.0" y="542.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="1046.0" y="515.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1049.0" y="526.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.05%)</title><rect x="1046.0" y="499.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1049.0" y="510.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.02%)</title><rect x="1046.6" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1049.6" y="558.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.07%)</title><rect x="1046.9" y="595.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1049.9" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="1046.9" y="579.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1049.9" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="1046.9" y="563.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1049.9" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="1046.9" y="547.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1049.9" y="558.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="1046.9" y="531.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1049.9" y="542.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="1046.9" y="515.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1049.9" y="526.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.07%)</title><rect x="1046.9" y="499.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1049.9" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.07%)</title><rect x="1046.9" y="483.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1049.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="1046.9" y="467.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1049.9" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="1047.8" y="595.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1050.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1048.1" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1051.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1048.1" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1051.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1048.1" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1051.1" y="558.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1048.4" y="595.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1051.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.02%)</title><rect x="1048.6" y="595.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1051.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (15 samples, 0.37%)</title><rect x="1048.9" y="595.0" width="4.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1051.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.02%)</title><rect x="1048.9" y="579.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1051.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.02%)</title><rect x="1048.9" y="563.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1051.9" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1048.9" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1051.9" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1048.9" y="531.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1051.9" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1048.9" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1051.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (9 samples, 0.22%)</title><rect x="1049.2" y="579.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1052.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (8 samples, 0.20%)</title><rect x="1049.2" y="563.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1052.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.02%)</title><rect x="1049.5" y="547.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1052.5" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1049.5" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1052.5" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1049.5" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1052.5" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1049.5" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1052.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (6 samples, 0.15%)</title><rect x="1049.8" y="547.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1052.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (6 samples, 0.15%)</title><rect x="1049.8" y="531.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1052.8" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1050.4" y="515.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1053.4" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1050.4" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1053.4" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1050.4" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1053.4" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1050.4" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1053.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.02%)</title><rect x="1050.7" y="515.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1053.7" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1050.7" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1053.7" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1050.7" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1053.7" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1050.7" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1053.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.05%)</title><rect x="1051.0" y="515.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1054.0" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1051.0" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1054.0" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1051.0" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1054.0" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1051.0" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1054.0" y="478.0"></text>
</g>
<g>
<title>write (1 samples, 0.02%)</title><rect x="1051.3" y="499.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1054.3" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1051.3" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1054.3" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1051.3" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1054.3" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1051.3" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1054.3" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1051.6" y="563.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1054.6" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1051.6" y="547.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1054.6" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1051.6" y="531.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1054.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.07%)</title><rect x="1051.8" y="579.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1054.8" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1052.4" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1055.4" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1052.4" y="547.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1055.4" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1052.4" y="531.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1055.4" y="542.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.02%)</title><rect x="1052.7" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1055.7" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1052.7" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1055.7" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1052.7" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1055.7" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1052.7" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1055.7" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1053.0" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1056.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1053.0" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1056.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1053.0" y="547.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1056.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.05%)</title><rect x="1053.3" y="595.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1056.3" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1053.6" y="579.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1056.6" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1053.6" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1056.6" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1053.6" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1056.6" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1053.6" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1056.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Clear() (1 samples, 0.02%)</title><rect x="1053.9" y="595.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1056.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (33 samples, 0.81%)</title><rect x="1054.2" y="595.0" width="9.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1057.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (32 samples, 0.79%)</title><rect x="1054.2" y="579.0" width="9.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1057.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (31 samples, 0.76%)</title><rect x="1054.2" y="563.0" width="9.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1057.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (2 samples, 0.05%)</title><rect x="1054.2" y="547.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1057.2" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="1054.2" y="531.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1057.2" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="1054.2" y="515.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1057.2" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="1054.2" y="499.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1057.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (29 samples, 0.71%)</title><rect x="1054.8" y="547.0" width="8.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1057.8" y="558.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1054.8" y="531.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1057.8" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1054.8" y="515.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1057.8" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1054.8" y="499.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1057.8" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1054.8" y="483.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1057.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (25 samples, 0.62%)</title><rect x="1055.0" y="531.0" width="7.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1058.0" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (2 samples, 0.05%)</title><rect x="1055.3" y="515.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1058.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.02%)</title><rect x="1055.3" y="499.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1058.3" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1055.3" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1058.3" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1055.3" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1058.3" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1055.3" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1058.3" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1055.6" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1058.6" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1055.6" y="483.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1058.6" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1055.6" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1058.6" y="478.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (18 samples, 0.44%)</title><rect x="1055.9" y="515.0" width="5.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1058.9" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (16 samples, 0.39%)</title><rect x="1055.9" y="499.0" width="4.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1058.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (7 samples, 0.17%)</title><rect x="1056.2" y="483.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1059.2" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.02%)</title><rect x="1056.2" y="467.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1059.2" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1056.2" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1059.2" y="462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1056.2" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1059.2" y="446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1056.2" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1059.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.15%)</title><rect x="1056.5" y="467.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1059.5" y="478.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.07%)</title><rect x="1056.8" y="451.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1059.8" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.07%)</title><rect x="1056.8" y="435.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1059.8" y="446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.07%)</title><rect x="1056.8" y="419.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1059.8" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="1056.8" y="403.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1059.8" y="414.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1057.7" y="451.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1060.7" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1057.7" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1060.7" y="446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1057.7" y="419.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1060.7" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1057.7" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1060.7" y="414.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1058.0" y="451.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1061.0" y="462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1058.0" y="435.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1061.0" y="446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1058.0" y="419.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1061.0" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.05%)</title><rect x="1058.2" y="483.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1061.2" y="494.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect x="1058.5" y="467.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1061.5" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1058.5" y="451.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1061.5" y="462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1058.5" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1061.5" y="446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1058.5" y="419.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1061.5" y="430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.15%)</title><rect x="1058.8" y="483.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1061.8" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (6 samples, 0.15%)</title><rect x="1058.8" y="467.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1061.8" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.15%)</title><rect x="1058.8" y="451.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1061.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.02%)</title><rect x="1060.6" y="499.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1063.6" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1060.6" y="483.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1063.6" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1060.9" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1063.9" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1060.9" y="483.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1063.9" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1060.9" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1063.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.02%)</title><rect x="1061.2" y="515.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1064.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (1 samples, 0.02%)</title><rect x="1061.2" y="499.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1064.2" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1061.2" y="483.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1064.2" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1061.2" y="467.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1064.2" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1061.2" y="451.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1064.2" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.07%)</title><rect x="1061.4" y="515.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1064.4" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.07%)</title><rect x="1061.4" y="499.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1064.4" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="1061.4" y="483.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1064.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.02%)</title><rect x="1062.3" y="531.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1065.3" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1062.3" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1065.3" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1062.3" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1065.3" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1062.3" y="483.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1065.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="1062.6" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1065.6" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1062.9" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1065.9" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1062.9" y="515.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1065.9" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1062.9" y="499.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1065.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="1063.2" y="563.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1066.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1063.5" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1066.5" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1063.5" y="563.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1066.5" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1063.5" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1066.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (6 samples, 0.15%)</title><rect x="1063.8" y="595.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1066.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.15%)</title><rect x="1063.8" y="579.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1066.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.15%)</title><rect x="1063.8" y="563.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1066.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.15%)</title><rect x="1063.8" y="547.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1066.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (6 samples, 0.15%)</title><rect x="1063.8" y="531.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1066.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (6 samples, 0.15%)</title><rect x="1063.8" y="515.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1066.8" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.15%)</title><rect x="1063.8" y="499.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1066.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (6 samples, 0.15%)</title><rect x="1063.8" y="483.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1066.8" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (4 samples, 0.10%)</title><rect x="1064.1" y="467.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1067.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.10%)</title><rect x="1064.1" y="451.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1067.1" y="462.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (1 samples, 0.02%)</title><rect x="1064.4" y="435.0" width="0.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1067.4" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1064.6" y="435.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1067.6" y="446.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1064.9" y="435.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1067.9" y="446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1064.9" y="419.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1067.9" y="430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1064.9" y="403.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1067.9" y="414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1064.9" y="387.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1067.9" y="398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1065.2" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1068.2" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1065.2" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1068.2" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1065.2" y="435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1068.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (6 samples, 0.15%)</title><rect x="1065.5" y="595.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1068.5" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="1066.1" y="579.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1069.1" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="1066.4" y="579.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1069.4" y="590.0"></text>
</g>
<g>
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;) (1 samples, 0.02%)</title><rect x="1066.7" y="579.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1069.7" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1067.0" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1070.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1067.0" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1070.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1067.0" y="547.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.07%)</title><rect x="1067.3" y="595.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1070.3" y="606.0"></text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.02%)</title><rect x="1067.3" y="579.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1070.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1067.3" y="563.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1070.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1067.3" y="547.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1070.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.05%)</title><rect x="1067.5" y="579.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1070.5" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.05%)</title><rect x="1067.5" y="563.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1070.5" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1067.5" y="547.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1070.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1067.5" y="531.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1070.5" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="1067.5" y="515.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1070.5" y="526.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="1067.5" y="499.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1070.5" y="510.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="1067.8" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1070.8" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="1067.8" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1070.8" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="1068.1" y="595.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1071.1" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="1068.1" y="579.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1071.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="1068.1" y="563.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1071.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.02%)</title><rect x="1068.7" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1071.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.05%)</title><rect x="1069.0" y="611.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1072.0" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="1069.0" y="595.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1072.0" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="1069.0" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1072.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="1069.0" y="563.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1072.0" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1069.3" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1072.3" y="558.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="1069.3" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1072.3" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1069.3" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1072.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.05%)</title><rect x="1069.6" y="611.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1072.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="1069.6" y="595.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1072.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="1069.6" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1072.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="1069.6" y="563.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1072.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.02%)</title><rect x="1070.2" y="611.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1073.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1070.2" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1073.2" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1070.2" y="579.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1073.2" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1070.2" y="563.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1073.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters(rocksdb::WriteThread::WriteGroup*) (1 samples, 0.02%)</title><rect x="1070.5" y="611.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1073.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1070.5" y="595.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1073.5" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1070.5" y="579.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1073.5" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1070.5" y="563.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1073.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.05%)</title><rect x="1070.7" y="627.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1073.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1071.0" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1074.0" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1071.0" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1074.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1071.0" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1074.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.02%)</title><rect x="1071.3" y="643.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1074.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.05%)</title><rect x="1071.6" y="643.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1074.6" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="1071.6" y="627.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1074.6" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="1071.6" y="611.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1074.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="1071.6" y="595.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1074.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 1.95%)</title><rect x="1072.2" y="707.0" width="23.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1075.2" y="718.0">[..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.02%)</title><rect x="1072.2" y="691.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1075.2" y="702.0"></text>
</g>
<g>
<title>__lll_lock_wait (2 samples, 0.05%)</title><rect x="1072.5" y="691.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1075.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1072.5" y="675.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1075.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1072.5" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1075.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="1072.5" y="643.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1075.5" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="1072.5" y="627.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1075.5" y="638.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="1072.5" y="611.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1075.5" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.05%)</title><rect x="1072.5" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.5" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="1072.5" y="579.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1075.5" y="590.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.05%)</title><rect x="1072.5" y="563.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.5" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="1072.5" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1075.5" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_wait (34 samples, 0.84%)</title><rect x="1073.1" y="691.0" width="9.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1076.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.84%)</title><rect x="1073.1" y="675.0" width="9.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1076.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.84%)</title><rect x="1073.1" y="659.0" width="9.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1076.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.79%)</title><rect x="1073.4" y="643.0" width="9.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1076.4" y="654.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.79%)</title><rect x="1073.4" y="627.0" width="9.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1076.4" y="638.0"></text>
</g>
<g>
<title>futex_wait (32 samples, 0.79%)</title><rect x="1073.4" y="611.0" width="9.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1076.4" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (31 samples, 0.76%)</title><rect x="1073.7" y="595.0" width="9.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1076.7" y="606.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="1073.7" y="579.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1076.7" y="590.0"></text>
</g>
<g>
<title>schedule (30 samples, 0.74%)</title><rect x="1073.9" y="579.0" width="8.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1076.9" y="590.0"></text>
</g>
<g>
<title>__schedule (30 samples, 0.74%)</title><rect x="1073.9" y="563.0" width="8.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1076.9" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (29 samples, 0.71%)</title><rect x="1074.2" y="547.0" width="8.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1077.2" y="558.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="1082.4" y="531.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1085.4" y="542.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="1082.4" y="515.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1085.4" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1082.4" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1085.4" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1082.4" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1085.4" y="494.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1082.7" y="643.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1085.7" y="654.0"></text>
</g>
<g>
<title>write (42 samples, 1.04%)</title><rect x="1083.0" y="691.0" width="12.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1086.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.96%)</title><rect x="1083.0" y="675.0" width="11.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1086.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.96%)</title><rect x="1083.0" y="659.0" width="11.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1086.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (37 samples, 0.91%)</title><rect x="1083.5" y="643.0" width="10.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1086.5" y="654.0"></text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.02%)</title><rect x="1083.5" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1086.5" y="638.0"></text>
</g>
<g>
<title>ksys_write (36 samples, 0.89%)</title><rect x="1083.8" y="627.0" width="10.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1086.8" y="638.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.07%)</title><rect x="1083.8" y="611.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="1083.8" y="595.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1086.8" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="1084.4" y="579.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1087.4" y="590.0"></text>
</g>
<g>
<title>vfs_write (33 samples, 0.81%)</title><rect x="1084.7" y="611.0" width="9.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1087.7" y="622.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.05%)</title><rect x="1084.7" y="595.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1087.7" y="606.0"></text>
</g>
<g>
<title>__vfs_write (28 samples, 0.69%)</title><rect x="1085.3" y="595.0" width="8.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1088.3" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="1085.3" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1088.3" y="590.0"></text>
</g>
<g>
<title>new_sync_write (27 samples, 0.67%)</title><rect x="1085.6" y="579.0" width="7.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1088.6" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (27 samples, 0.67%)</title><rect x="1085.6" y="563.0" width="7.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1088.6" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (25 samples, 0.62%)</title><rect x="1085.9" y="547.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1088.9" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (25 samples, 0.62%)</title><rect x="1085.9" y="531.0" width="7.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1088.9" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="1085.9" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1088.9" y="526.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1086.2" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1089.2" y="526.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="1086.2" y="499.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1089.2" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_begin (6 samples, 0.15%)</title><rect x="1086.5" y="515.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1089.5" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.05%)</title><rect x="1086.7" y="499.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1089.7" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.02%)</title><rect x="1086.7" y="483.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1089.7" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="1086.7" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1089.7" y="478.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.02%)</title><rect x="1087.0" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1090.0" y="494.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="1087.3" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1090.3" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.02%)</title><rect x="1087.6" y="499.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1090.6" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="1087.6" y="483.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1090.6" y="494.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.02%)</title><rect x="1087.6" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1090.6" y="478.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="1087.6" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1090.6" y="462.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1087.6" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1090.6" y="446.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.02%)</title><rect x="1087.9" y="499.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1090.9" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_end (14 samples, 0.35%)</title><rect x="1088.2" y="515.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1091.2" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.05%)</title><rect x="1088.2" y="499.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1091.2" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="1088.2" y="483.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1091.2" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.02%)</title><rect x="1088.5" y="483.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1091.5" y="494.0"></text>
</g>
<g>
<title>generic_write_end (12 samples, 0.30%)</title><rect x="1088.8" y="499.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1091.8" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (12 samples, 0.30%)</title><rect x="1088.8" y="483.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1091.8" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (12 samples, 0.30%)</title><rect x="1088.8" y="467.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1091.8" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (11 samples, 0.27%)</title><rect x="1088.8" y="451.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1091.8" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (10 samples, 0.25%)</title><rect x="1088.8" y="435.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1091.8" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.02%)</title><rect x="1088.8" y="419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1091.8" y="430.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (6 samples, 0.15%)</title><rect x="1089.1" y="419.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1092.1" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.07%)</title><rect x="1089.4" y="403.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1092.4" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="1089.7" y="387.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1092.7" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (1 samples, 0.02%)</title><rect x="1089.7" y="371.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1092.7" y="382.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.02%)</title><rect x="1089.9" y="387.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1092.9" y="398.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.02%)</title><rect x="1089.9" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1092.9" y="382.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="1090.2" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1093.2" y="414.0"></text>
</g>
<g>
<title>from_kuid (1 samples, 0.02%)</title><rect x="1090.5" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1093.5" y="414.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.07%)</title><rect x="1090.8" y="419.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1093.8" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.02%)</title><rect x="1090.8" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1093.8" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.02%)</title><rect x="1090.8" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1093.8" y="398.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.02%)</title><rect x="1090.8" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1093.8" y="382.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.02%)</title><rect x="1090.8" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1093.8" y="366.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="1091.1" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1094.1" y="414.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (1 samples, 0.02%)</title><rect x="1091.1" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1094.1" y="398.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.02%)</title><rect x="1091.4" y="403.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1094.4" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="1091.7" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1094.7" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.02%)</title><rect x="1092.0" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1095.0" y="462.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.02%)</title><rect x="1092.3" y="515.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1095.3" y="526.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (2 samples, 0.05%)</title><rect x="1092.6" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1095.6" y="526.0"></text>
</g>
<g>
<title>file_remove_privs (1 samples, 0.02%)</title><rect x="1093.1" y="547.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1096.1" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.05%)</title><rect x="1093.4" y="595.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1096.4" y="606.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="1093.4" y="579.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1096.4" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="1093.4" y="563.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1096.4" y="574.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="1093.4" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1096.4" y="558.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.02%)</title><rect x="1093.7" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1096.7" y="558.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.02%)</title><rect x="1093.7" y="531.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1096.7" y="542.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="1094.0" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1097.0" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.07%)</title><rect x="1094.3" y="675.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1097.3" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.07%)</title><rect x="1094.3" y="659.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1097.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.07%)</title><rect x="1094.3" y="643.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1097.3" y="654.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.05%)</title><rect x="1095.2" y="707.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1098.2" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.05%)</title><rect x="1095.2" y="691.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1098.2" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="1095.2" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1098.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="1095.2" y="659.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1098.2" y="670.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.07%)</title><rect x="1095.8" y="707.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1098.8" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (292 samples, 7.20%)</title><rect x="1096.6" y="707.0" width="85.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1099.6" y="718.0">pthread_co..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (291 samples, 7.17%)</title><rect x="1096.6" y="691.0" width="84.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1099.6" y="702.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (291 samples, 7.17%)</title><rect x="1096.6" y="675.0" width="84.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1099.6" y="686.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_futex (288 samples, 7.10%)</title><rect x="1096.9" y="659.0" width="83.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1099.9" y="670.0">__x64_sys..</text>
</g>
<g>
<title>do_futex (287 samples, 7.07%)</title><rect x="1097.2" y="643.0" width="83.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1100.2" y="654.0">do_futex</text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="1097.2" y="627.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1100.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (286 samples, 7.05%)</title><rect x="1097.5" y="627.0" width="83.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1100.5" y="638.0">futex_wake</text>
</g>
<g>
<title>wake_up_q (286 samples, 7.05%)</title><rect x="1097.5" y="611.0" width="83.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1100.5" y="622.0">wake_up_q</text>
</g>
<g>
<title>try_to_wake_up (286 samples, 7.05%)</title><rect x="1097.5" y="595.0" width="83.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1100.5" y="606.0">try_to_wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (286 samples, 7.05%)</title><rect x="1097.5" y="579.0" width="83.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1100.5" y="590.0">_raw_spin..</text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.05%)</title><rect x="1180.7" y="659.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1183.7" y="670.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.05%)</title><rect x="1180.7" y="643.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.7" y="654.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.05%)</title><rect x="1180.7" y="627.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.7" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="1180.7" y="611.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1183.7" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1181.3" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1184.3" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1181.3" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1184.3" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1181.3" y="659.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1184.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1181.6" y="707.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1184.6" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1181.6" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1184.6" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1181.6" y="675.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1184.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.convertValuesSubMinValue (1 samples, 0.02%)</title><rect x="1181.9" y="739.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1184.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.getArray (1 samples, 0.02%)</title><rect x="1182.1" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.02%)</title><rect x="1182.1" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1182.1" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1182.1" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.02%)</title><rect x="1182.4" y="803.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="1182.4" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="1182.4" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1185.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="1182.4" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1185.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="1182.4" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="1182.7" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1182.7" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1185.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1182.7" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1182.7" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.7" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1182.7" y="739.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1185.7" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1182.7" y="723.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.7" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1182.7" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1185.7" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1182.7" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1185.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.05%)</title><rect x="1183.0" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.0" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1183.3" y="819.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1186.3" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1183.3" y="803.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1186.3" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1183.3" y="787.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1186.3" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1183.3" y="771.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1186.3" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1183.3" y="755.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1186.3" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1183.3" y="739.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1186.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.02%)</title><rect x="1183.6" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (1 samples, 0.02%)</title><rect x="1183.9" y="835.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.9" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (9 samples, 0.22%)</title><rect x="1184.2" y="835.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1187.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (9 samples, 0.22%)</title><rect x="1184.2" y="819.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1187.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.22%)</title><rect x="1184.2" y="803.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1187.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 0.20%)</title><rect x="1186.8" y="851.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1189.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 0.20%)</title><rect x="1186.8" y="835.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.8" y="846.0"></text>
</g>
<g>
<title>__GI___recv (7 samples, 0.17%)</title><rect x="1187.1" y="819.0" width="2.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1190.1" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.17%)</title><rect x="1187.1" y="803.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1190.1" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.17%)</title><rect x="1187.1" y="787.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1190.1" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (6 samples, 0.15%)</title><rect x="1187.4" y="771.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1190.4" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (5 samples, 0.12%)</title><rect x="1187.4" y="755.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="1187.4" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.10%)</title><rect x="1187.7" y="739.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.07%)</title><rect x="1187.7" y="723.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1190.7" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.07%)</title><rect x="1187.7" y="707.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1190.7" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="1187.7" y="691.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1190.7" y="702.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1187.7" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1190.7" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.05%)</title><rect x="1188.0" y="691.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.0" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="1188.3" y="675.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1191.3" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="1188.3" y="659.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1191.3" y="670.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="1188.3" y="643.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1191.3" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1188.3" y="627.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.3" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.02%)</title><rect x="1188.5" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.5" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="1188.5" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1191.5" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="1188.5" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1191.5" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="1188.5" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1191.5" y="686.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="1188.8" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1191.8" y="766.0"></text>
</g>
<g>
<title>[tid=55602] (2 samples, 0.05%)</title><rect x="1189.1" y="915.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1192.1" y="926.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="1189.1" y="899.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1192.1" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="883.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1192.1" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="867.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1192.1" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="851.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1192.1" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="835.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1192.1" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="819.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1192.1" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="803.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1192.1" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="787.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1192.1" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="771.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1192.1" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="755.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1192.1" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="739.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="723.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.1" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.05%)</title><rect x="1189.1" y="707.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1189.4" y="691.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1192.4" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1189.4" y="675.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1192.4" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1189.4" y="659.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1189.4" y="643.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1189.4" y="627.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1189.4" y="611.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1192.4" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1189.4" y="595.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1192.4" y="606.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.02%)</title><rect x="1189.4" y="579.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1192.4" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1189.4" y="563.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1192.4" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1189.4" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1192.4" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1189.4" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1192.4" y="542.0"></text>
</g>
<g>
<title>[tid=55606] (1 samples, 0.02%)</title><rect x="1189.7" y="915.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.7" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="1189.7" y="899.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1192.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="1189.7" y="883.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1192.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="1189.7" y="867.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1192.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="1189.7" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1192.7" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="1189.7" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1192.7" y="846.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="1189.7" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1192.7" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="1189.7" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1192.7" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1189.7" y="787.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1192.7" y="798.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="1189.7" y="771.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1192.7" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1189.7" y="755.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1192.7" y="766.0"></text>
</g>
</g>
</svg>
