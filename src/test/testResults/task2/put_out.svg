<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (1,373 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=5594] (349 samples, 25.42%)</title><rect x="10.0" y="915.0" width="299.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="926.0">[NIO Selector #0 tid=5594]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (349 samples, 25.42%)</title><rect x="10.0" y="899.0" width="299.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.58%)</title><rect x="10.0" y="883.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 0.58%)</title><rect x="10.0" y="867.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.51%)</title><rect x="10.0" y="851.0" width="6.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="10.0" y="835.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="10.0" y="819.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.44%)</title><rect x="10.9" y="835.0" width="5.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.44%)</title><rect x="10.9" y="819.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="13.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.44%)</title><rect x="10.9" y="803.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (6 samples, 0.44%)</title><rect x="10.9" y="787.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="13.9" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (6 samples, 0.44%)</title><rect x="10.9" y="771.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="13.9" y="782.0"></text>
</g>
<g>
<title>ep_poll (6 samples, 0.44%)</title><rect x="10.9" y="755.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="13.9" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.44%)</title><rect x="10.9" y="739.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="13.9" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.44%)</title><rect x="10.9" y="723.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="13.9" y="734.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.44%)</title><rect x="10.9" y="707.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="13.9" y="718.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.44%)</title><rect x="10.9" y="691.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="13.9" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.44%)</title><rect x="10.9" y="675.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="13.9" y="686.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.07%)</title><rect x="16.0" y="851.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="19.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (341 samples, 24.84%)</title><rect x="16.9" y="883.0" width="293.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.9" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (341 samples, 24.84%)</title><rect x="16.9" y="867.0" width="293.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.9" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (336 samples, 24.47%)</title><rect x="16.9" y="851.0" width="288.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.9" y="862.0">one/nio/http/HttpSession.processHttpBuf..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (332 samples, 24.18%)</title><rect x="16.9" y="835.0" width="285.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.9" y="846.0">one/nio/http/HttpSession.handleParsedR..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (332 samples, 24.18%)</title><rect x="16.9" y="819.0" width="285.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.9" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (332 samples, 24.18%)</title><rect x="16.9" y="803.0" width="285.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.9" y="814.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (275 samples, 20.03%)</title><rect x="16.9" y="787.0" width="236.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.9" y="798.0">one/nio/http/HttpSession.sendRe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (272 samples, 19.81%)</title><rect x="16.9" y="771.0" width="233.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.9" y="782.0">one/nio/http/HttpSession.writeR..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.29%)</title><rect x="16.9" y="755.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.07%)</title><rect x="16.9" y="739.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.9" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="16.9" y="723.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="19.9" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="16.9" y="707.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="19.9" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="16.9" y="691.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.9" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.22%)</title><rect x="17.7" y="739.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.22%)</title><rect x="17.7" y="723.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.22%)</title><rect x="17.7" y="707.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.22%)</title><rect x="17.7" y="691.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.15%)</title><rect x="18.6" y="675.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="19.5" y="659.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="22.5" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="19.5" y="643.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="22.5" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="19.5" y="627.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="22.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (268 samples, 19.52%)</title><rect x="20.3" y="755.0" width="230.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.3" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (268 samples, 19.52%)</title><rect x="20.3" y="739.0" width="230.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.3" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (268 samples, 19.52%)</title><rect x="20.3" y="723.0" width="230.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="23.3" y="734.0">one/nio/net/Session$ArrayQueue..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (268 samples, 19.52%)</title><rect x="20.3" y="707.0" width="230.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.3" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>[unknown] (2 samples, 0.15%)</title><rect x="20.3" y="691.0" width="1.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="23.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.15%)</title><rect x="20.3" y="675.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="23.3" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.15%)</title><rect x="20.3" y="659.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.3" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="20.3" y="643.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="23.3" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="20.3" y="627.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="23.3" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="20.3" y="611.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="23.3" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="20.3" y="595.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="23.3" y="606.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="21.2" y="643.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="24.2" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="21.2" y="627.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="21.2" y="611.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="24.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="21.2" y="595.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="24.2" y="606.0"></text>
</g>
<g>
<title>__send (266 samples, 19.37%)</title><rect x="22.0" y="691.0" width="228.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="25.0" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (265 samples, 19.30%)</title><rect x="22.9" y="675.0" width="227.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="25.9" y="686.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (265 samples, 19.30%)</title><rect x="22.9" y="659.0" width="227.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="25.9" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (262 samples, 19.08%)</title><rect x="22.9" y="643.0" width="225.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.9" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (262 samples, 19.08%)</title><rect x="22.9" y="627.0" width="225.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.9" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (262 samples, 19.08%)</title><rect x="22.9" y="611.0" width="225.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.9" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (261 samples, 19.01%)</title><rect x="22.9" y="595.0" width="224.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="25.9" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (260 samples, 18.94%)</title><rect x="23.8" y="579.0" width="223.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.8" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.07%)</title><rect x="23.8" y="563.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="26.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.07%)</title><rect x="23.8" y="547.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="26.8" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (259 samples, 18.86%)</title><rect x="24.6" y="563.0" width="222.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="27.6" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>tcp_push (259 samples, 18.86%)</title><rect x="24.6" y="547.0" width="222.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="27.6" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (259 samples, 18.86%)</title><rect x="24.6" y="531.0" width="222.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.6" y="542.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>ktime_get (1 samples, 0.07%)</title><rect x="24.6" y="515.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="27.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (258 samples, 18.79%)</title><rect x="25.5" y="515.0" width="221.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="28.5" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (257 samples, 18.72%)</title><rect x="25.5" y="499.0" width="220.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="28.5" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.07%)</title><rect x="27.2" y="483.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="30.2" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (253 samples, 18.43%)</title><rect x="28.0" y="483.0" width="217.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="31.0" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (252 samples, 18.35%)</title><rect x="28.9" y="467.0" width="216.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="31.9" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (252 samples, 18.35%)</title><rect x="28.9" y="451.0" width="216.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="31.9" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (252 samples, 18.35%)</title><rect x="28.9" y="435.0" width="216.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="31.9" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (252 samples, 18.35%)</title><rect x="28.9" y="419.0" width="216.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="31.9" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.07%)</title><rect x="28.9" y="403.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="31.9" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (251 samples, 18.28%)</title><rect x="29.8" y="403.0" width="215.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="32.8" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (250 samples, 18.21%)</title><rect x="29.8" y="387.0" width="214.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.8" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.21 (250 samples, 18.21%)</title><rect x="29.8" y="371.0" width="214.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.8" y="382.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (250 samples, 18.21%)</title><rect x="29.8" y="355.0" width="214.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="32.8" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (250 samples, 18.21%)</title><rect x="29.8" y="339.0" width="214.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.8" y="350.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (250 samples, 18.21%)</title><rect x="29.8" y="323.0" width="214.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="32.8" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (250 samples, 18.21%)</title><rect x="29.8" y="307.0" width="214.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="32.8" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (250 samples, 18.21%)</title><rect x="29.8" y="291.0" width="214.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.8" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.07%)</title><rect x="29.8" y="275.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.8" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (249 samples, 18.14%)</title><rect x="30.6" y="275.0" width="214.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="33.6" y="286.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.07%)</title><rect x="30.6" y="259.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="33.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv (248 samples, 18.06%)</title><rect x="31.5" y="259.0" width="213.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="34.5" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (248 samples, 18.06%)</title><rect x="31.5" y="243.0" width="213.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="34.5" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (248 samples, 18.06%)</title><rect x="31.5" y="227.0" width="213.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.5" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (248 samples, 18.06%)</title><rect x="31.5" y="211.0" width="213.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="34.5" y="222.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (248 samples, 18.06%)</title><rect x="31.5" y="195.0" width="213.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="34.5" y="206.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>tcp_v4_rcv (248 samples, 18.06%)</title><rect x="31.5" y="179.0" width="213.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="34.5" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.07%)</title><rect x="32.3" y="163.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="35.3" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.15%)</title><rect x="33.2" y="163.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.2" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.15%)</title><rect x="33.2" y="147.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (244 samples, 17.77%)</title><rect x="34.9" y="163.0" width="209.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="37.9" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.07%)</title><rect x="34.9" y="147.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="37.9" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (243 samples, 17.70%)</title><rect x="35.8" y="147.0" width="208.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="38.8" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.15%)</title><rect x="37.5" y="131.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="40.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.07%)</title><rect x="37.5" y="115.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="40.5" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.07%)</title><rect x="37.5" y="99.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="40.5" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.07%)</title><rect x="37.5" y="83.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="40.5" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.07%)</title><rect x="37.5" y="67.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="40.5" y="78.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.07%)</title><rect x="38.4" y="115.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="41.4" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.07%)</title><rect x="39.2" y="131.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="42.2" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (238 samples, 17.33%)</title><rect x="40.1" y="131.0" width="204.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="43.1" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (237 samples, 17.26%)</title><rect x="40.1" y="115.0" width="203.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="43.1" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (237 samples, 17.26%)</title><rect x="40.1" y="99.0" width="203.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="43.1" y="110.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (237 samples, 17.26%)</title><rect x="40.1" y="83.0" width="203.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.1" y="94.0">__wake_up_common_lock</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (237 samples, 17.26%)</title><rect x="40.1" y="67.0" width="203.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.1" y="78.0">_raw_spin_unlock_irqrestore</text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.07%)</title><rect x="243.8" y="115.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="246.8" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.07%)</title><rect x="244.6" y="387.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="247.6" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.07%)</title><rect x="244.6" y="371.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="247.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.07%)</title><rect x="244.6" y="355.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="247.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.07%)</title><rect x="244.6" y="339.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="247.6" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.07%)</title><rect x="244.6" y="323.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="247.6" y="334.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.07%)</title><rect x="245.5" y="483.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="248.5" y="494.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.07%)</title><rect x="245.5" y="467.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="248.5" y="478.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="246.3" y="499.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="249.3" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.07%)</title><rect x="247.2" y="595.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="250.2" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.07%)</title><rect x="247.2" y="579.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="250.2" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.07%)</title><rect x="247.2" y="563.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="250.2" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.07%)</title><rect x="247.2" y="547.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="250.2" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.22%)</title><rect x="248.1" y="643.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="251.1" y="654.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.22%)</title><rect x="248.1" y="627.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="251.1" y="638.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.22%)</title><rect x="248.1" y="611.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="251.1" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.22%)</title><rect x="248.1" y="595.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="251.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.22%)</title><rect x="250.6" y="771.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.15%)</title><rect x="250.6" y="755.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.15%)</title><rect x="250.6" y="739.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="253.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.15%)</title><rect x="250.6" y="723.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.15%)</title><rect x="250.6" y="707.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.6" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.15%)</title><rect x="250.6" y="691.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.6" y="702.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.15%)</title><rect x="250.6" y="675.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.15%)</title><rect x="250.6" y="659.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="250.6" y="643.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="253.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.15%)</title><rect x="250.6" y="627.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="253.6" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="252.4" y="755.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="255.4" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="252.4" y="739.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="255.4" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="252.4" y="723.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="255.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (57 samples, 4.15%)</title><rect x="253.2" y="787.0" width="49.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.2" y="798.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="253.2" y="771.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="253.2" y="755.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="253.2" y="739.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="253.2" y="723.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.2" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="253.2" y="707.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.07%)</title><rect x="253.2" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.07%)</title><rect x="253.2" y="675.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (56 samples, 4.08%)</title><rect x="254.1" y="771.0" width="48.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.1" y="782.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="254.1" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.07%)</title><rect x="254.1" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="254.1" y="723.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="254.1" y="707.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="254.1" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="254.1" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.upsert (55 samples, 4.01%)</title><rect x="254.9" y="755.0" width="47.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.9" y="766.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (55 samples, 4.01%)</title><rect x="254.9" y="739.0" width="47.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.9" y="750.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (55 samples, 4.01%)</title><rect x="254.9" y="723.0" width="47.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.9" y="734.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (37 samples, 2.69%)</title><rect x="254.9" y="707.0" width="31.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="257.9" y="718.0">Ja..</text>
</g>
<g>
<title>__malloc (1 samples, 0.07%)</title><rect x="254.9" y="691.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="257.9" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (36 samples, 2.62%)</title><rect x="255.8" y="691.0" width="30.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="258.8" y="702.0">ro..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="255.8" y="675.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="258.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (35 samples, 2.55%)</title><rect x="256.7" y="675.0" width="30.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="259.7" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (35 samples, 2.55%)</title><rect x="256.7" y="659.0" width="30.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="259.7" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (35 samples, 2.55%)</title><rect x="256.7" y="643.0" width="30.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="259.7" y="654.0">ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.07%)</title><rect x="256.7" y="627.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="259.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="256.7" y="611.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="259.7" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="256.7" y="595.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="259.7" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="256.7" y="579.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="259.7" y="590.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.07%)</title><rect x="257.5" y="627.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="260.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (29 samples, 2.11%)</title><rect x="258.4" y="627.0" width="24.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="261.4" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (28 samples, 2.04%)</title><rect x="258.4" y="611.0" width="24.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="261.4" y="622.0">r..</text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.29%)</title><rect x="260.1" y="595.0" width="3.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="263.1" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.22%)</title><rect x="260.1" y="579.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="263.1" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.22%)</title><rect x="260.1" y="563.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="263.1" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.22%)</title><rect x="260.1" y="547.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="263.1" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (3 samples, 0.22%)</title><rect x="260.1" y="531.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="263.1" y="542.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.22%)</title><rect x="260.1" y="515.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="263.1" y="526.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.22%)</title><rect x="260.1" y="499.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="263.1" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="262.7" y="579.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="265.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="262.7" y="563.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="265.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="262.7" y="547.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="265.7" y="558.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.07%)</title><rect x="263.5" y="595.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="266.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (5 samples, 0.36%)</title><rect x="264.4" y="595.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="267.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.07%)</title><rect x="264.4" y="579.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="267.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Append(rocksdb::WriteBatch*, rocksdb::WriteBatch const*, bool) (1 samples, 0.07%)</title><rect x="264.4" y="563.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="267.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (4 samples, 0.29%)</title><rect x="265.3" y="579.0" width="3.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="268.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (4 samples, 0.29%)</title><rect x="265.3" y="563.0" width="3.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="268.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (1 samples, 0.07%)</title><rect x="265.3" y="547.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="268.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.22%)</title><rect x="266.1" y="547.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="269.1" y="558.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.07%)</title><rect x="266.1" y="531.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="269.1" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="266.1" y="515.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="269.1" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="266.1" y="499.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="269.1" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="266.1" y="483.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="269.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush() (1 samples, 0.07%)</title><rect x="267.0" y="531.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="270.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.07%)</title><rect x="267.8" y="531.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="270.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.07%)</title><rect x="267.8" y="515.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="270.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 0.66%)</title><rect x="268.7" y="595.0" width="7.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="271.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 0.66%)</title><rect x="268.7" y="579.0" width="7.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="271.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.66%)</title><rect x="268.7" y="563.0" width="7.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="271.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 0.66%)</title><rect x="268.7" y="547.0" width="7.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="271.7" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (1 samples, 0.07%)</title><rect x="269.5" y="531.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="272.5" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="269.5" y="515.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="272.5" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="269.5" y="499.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="272.5" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="269.5" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="272.5" y="494.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.07%)</title><rect x="270.4" y="531.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="273.4" y="542.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.07%)</title><rect x="270.4" y="515.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="273.4" y="526.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.07%)</title><rect x="270.4" y="499.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="273.4" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.07%)</title><rect x="270.4" y="483.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="273.4" y="494.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.07%)</title><rect x="270.4" y="467.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="273.4" y="478.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.07%)</title><rect x="270.4" y="451.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="273.4" y="462.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.07%)</title><rect x="270.4" y="435.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="273.4" y="446.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.07%)</title><rect x="270.4" y="419.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="273.4" y="430.0"></text>
</g>
<g>
<title>clear_page_orig (1 samples, 0.07%)</title><rect x="270.4" y="403.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="273.4" y="414.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.07%)</title><rect x="271.3" y="531.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="274.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (4 samples, 0.29%)</title><rect x="272.1" y="531.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="275.1" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.22%)</title><rect x="272.1" y="515.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="275.1" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (3 samples, 0.22%)</title><rect x="272.1" y="499.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="275.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (1 samples, 0.07%)</title><rect x="273.8" y="483.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="276.8" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="273.8" y="467.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="276.8" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="273.8" y="451.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="276.8" y="462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="273.8" y="435.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="276.8" y="446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="273.8" y="419.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="276.8" y="430.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.07%)</title><rect x="274.7" y="515.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="277.7" y="526.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.07%)</title><rect x="274.7" y="499.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="277.7" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.07%)</title><rect x="274.7" y="483.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="277.7" y="494.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.07%)</title><rect x="274.7" y="467.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="277.7" y="478.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.07%)</title><rect x="274.7" y="451.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="277.7" y="462.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.07%)</title><rect x="274.7" y="435.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="277.7" y="446.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.07%)</title><rect x="274.7" y="419.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="277.7" y="430.0"></text>
</g>
<g>
<title>clear_page_orig (1 samples, 0.07%)</title><rect x="274.7" y="403.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="277.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.07%)</title><rect x="275.6" y="531.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="278.6" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="275.6" y="515.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="278.6" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="275.6" y="499.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="278.6" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="275.6" y="483.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="278.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (3 samples, 0.22%)</title><rect x="276.4" y="595.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="279.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="276.4" y="579.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="279.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.15%)</title><rect x="277.3" y="579.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="280.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.15%)</title><rect x="277.3" y="563.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="280.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.15%)</title><rect x="277.3" y="547.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="280.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.15%)</title><rect x="277.3" y="531.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="280.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.15%)</title><rect x="277.3" y="515.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="280.3" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.15%)</title><rect x="277.3" y="499.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="280.3" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (2 samples, 0.15%)</title><rect x="277.3" y="483.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="280.3" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="278.1" y="467.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="281.1" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="278.1" y="451.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="281.1" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="278.1" y="435.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="281.1" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="279.0" y="595.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="282.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.07%)</title><rect x="279.0" y="579.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="282.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.07%)</title><rect x="279.9" y="595.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="282.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="280.7" y="595.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="283.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.07%)</title><rect x="280.7" y="579.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="283.7" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="280.7" y="563.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="283.7" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="280.7" y="547.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="283.7" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="280.7" y="531.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="283.7" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="281.6" y="595.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="284.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="281.6" y="579.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="284.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="281.6" y="563.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="284.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.07%)</title><rect x="282.4" y="611.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="285.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.15%)</title><rect x="283.3" y="627.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="286.3" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="283.3" y="611.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="286.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.07%)</title><rect x="284.2" y="611.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="287.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.07%)</title><rect x="285.0" y="627.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="288.0" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="285.9" y="627.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="288.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="285.9" y="611.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="288.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="285.9" y="595.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="288.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.95%)</title><rect x="286.7" y="707.0" width="11.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="289.7" y="718.0"></text>
</g>
<g>
<title>write (13 samples, 0.95%)</title><rect x="286.7" y="691.0" width="11.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="289.7" y="702.0"></text>
</g>
<g>
<title>call_function_single_interrupt (1 samples, 0.07%)</title><rect x="286.7" y="675.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="289.7" y="686.0"></text>
</g>
<g>
<title>smp_call_function_single_interrupt (1 samples, 0.07%)</title><rect x="286.7" y="659.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="289.7" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.07%)</title><rect x="286.7" y="643.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="289.7" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="286.7" y="627.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="289.7" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.87%)</title><rect x="287.6" y="675.0" width="10.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="290.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.87%)</title><rect x="287.6" y="659.0" width="10.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (12 samples, 0.87%)</title><rect x="287.6" y="643.0" width="10.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="290.6" y="654.0"></text>
</g>
<g>
<title>ksys_write (12 samples, 0.87%)</title><rect x="287.6" y="627.0" width="10.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="290.6" y="638.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.07%)</title><rect x="287.6" y="611.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.6" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="287.6" y="595.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="290.6" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.07%)</title><rect x="287.6" y="579.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="290.6" y="590.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.80%)</title><rect x="288.5" y="611.0" width="9.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="291.5" y="622.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.80%)</title><rect x="288.5" y="595.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="291.5" y="606.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.80%)</title><rect x="288.5" y="579.0" width="9.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="291.5" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (11 samples, 0.80%)</title><rect x="288.5" y="563.0" width="9.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="291.5" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (10 samples, 0.73%)</title><rect x="288.5" y="547.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="291.5" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (9 samples, 0.66%)</title><rect x="288.5" y="531.0" width="7.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.5" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (6 samples, 0.44%)</title><rect x="288.5" y="515.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="291.5" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.07%)</title><rect x="289.3" y="499.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="292.3" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.07%)</title><rect x="289.3" y="483.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="292.3" y="494.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.07%)</title><rect x="289.3" y="467.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="292.3" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.07%)</title><rect x="290.2" y="499.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="293.2" y="510.0"></text>
</g>
<g>
<title>memset_orig (2 samples, 0.15%)</title><rect x="291.0" y="499.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="294.0" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.07%)</title><rect x="292.8" y="499.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="295.8" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_end (3 samples, 0.22%)</title><rect x="293.6" y="515.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="296.6" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.07%)</title><rect x="293.6" y="499.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="296.6" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.07%)</title><rect x="293.6" y="483.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="296.6" y="494.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.07%)</title><rect x="293.6" y="467.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="296.6" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.07%)</title><rect x="293.6" y="451.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="296.6" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="293.6" y="435.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.6" y="446.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.15%)</title><rect x="294.5" y="499.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="297.5" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (1 samples, 0.07%)</title><rect x="295.3" y="483.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="298.3" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.07%)</title><rect x="295.3" y="467.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="298.3" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.07%)</title><rect x="295.3" y="451.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="298.3" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.07%)</title><rect x="295.3" y="435.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="298.3" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.07%)</title><rect x="295.3" y="419.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="298.3" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.07%)</title><rect x="295.3" y="403.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="298.3" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.07%)</title><rect x="295.3" y="387.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="298.3" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (1 samples, 0.07%)</title><rect x="295.3" y="371.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="298.3" y="382.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.07%)</title><rect x="296.2" y="531.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="299.2" y="542.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.07%)</title><rect x="297.1" y="547.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="300.1" y="558.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.36%)</title><rect x="297.9" y="707.0" width="4.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="300.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.36%)</title><rect x="297.9" y="691.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="300.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.36%)</title><rect x="297.9" y="675.0" width="4.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="300.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.36%)</title><rect x="297.9" y="659.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="300.9" y="670.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.36%)</title><rect x="297.9" y="643.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="300.9" y="654.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.36%)</title><rect x="297.9" y="627.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="300.9" y="638.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.36%)</title><rect x="297.9" y="611.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="300.9" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.36%)</title><rect x="297.9" y="595.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="300.9" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.36%)</title><rect x="297.9" y="579.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="300.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.15%)</title><rect x="302.2" y="835.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.15%)</title><rect x="302.2" y="819.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.15%)</title><rect x="302.2" y="803.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="305.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.15%)</title><rect x="302.2" y="787.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.15%)</title><rect x="302.2" y="771.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.2" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="303.1" y="755.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="306.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="303.1" y="739.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="306.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="303.1" y="723.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="306.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.15%)</title><rect x="303.9" y="835.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.15%)</title><rect x="303.9" y="819.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="306.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.15%)</title><rect x="303.9" y="803.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.9" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="304.8" y="787.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="307.8" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="304.8" y="771.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="307.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="304.8" y="755.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="307.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.36%)</title><rect x="305.6" y="851.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.36%)</title><rect x="305.6" y="835.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.15%)</title><rect x="305.6" y="819.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="308.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.15%)</title><rect x="305.6" y="803.0" width="1.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="308.6" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.15%)</title><rect x="305.6" y="787.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="308.6" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="305.6" y="771.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="308.6" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="305.6" y="755.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="308.6" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="305.6" y="739.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="308.6" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="305.6" y="723.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="308.6" y="734.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="306.5" y="771.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="309.5" y="782.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.22%)</title><rect x="307.4" y="819.0" width="2.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="310.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.22%)</title><rect x="307.4" y="803.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="310.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.22%)</title><rect x="307.4" y="787.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="310.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.22%)</title><rect x="307.4" y="771.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="310.4" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.22%)</title><rect x="307.4" y="755.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="310.4" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.07%)</title><rect x="307.4" y="739.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="310.4" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.07%)</title><rect x="307.4" y="723.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="310.4" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.07%)</title><rect x="307.4" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="310.4" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.15%)</title><rect x="308.2" y="739.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="311.2" y="750.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.15%)</title><rect x="308.2" y="723.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="311.2" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.15%)</title><rect x="308.2" y="707.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="311.2" y="718.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.07%)</title><rect x="309.1" y="691.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="312.1" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=5595] (340 samples, 24.76%)</title><rect x="309.9" y="915.0" width="292.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="312.9" y="926.0">[NIO Selector #1 tid=5595]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (340 samples, 24.76%)</title><rect x="309.9" y="899.0" width="292.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="312.9" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.29%)</title><rect x="309.9" y="883.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.29%)</title><rect x="309.9" y="867.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.22%)</title><rect x="309.9" y="851.0" width="2.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="312.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.22%)</title><rect x="309.9" y="835.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="312.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.22%)</title><rect x="309.9" y="819.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="312.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.22%)</title><rect x="309.9" y="803.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="312.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.22%)</title><rect x="309.9" y="787.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="312.9" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.22%)</title><rect x="309.9" y="771.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="312.9" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.07%)</title><rect x="309.9" y="755.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="312.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="309.9" y="739.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="312.9" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.07%)</title><rect x="309.9" y="723.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="312.9" y="734.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.15%)</title><rect x="310.8" y="755.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="313.8" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.07%)</title><rect x="310.8" y="739.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="313.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.07%)</title><rect x="311.7" y="739.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="314.7" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.07%)</title><rect x="311.7" y="723.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="314.7" y="734.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="311.7" y="707.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="314.7" y="718.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="311.7" y="691.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="314.7" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.07%)</title><rect x="311.7" y="675.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="314.7" y="686.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.07%)</title><rect x="312.5" y="851.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="315.5" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="312.5" y="835.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="315.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="312.5" y="819.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="315.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.07%)</title><rect x="312.5" y="803.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="315.5" y="814.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.07%)</title><rect x="312.5" y="787.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="315.5" y="798.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.07%)</title><rect x="312.5" y="771.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="315.5" y="782.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.07%)</title><rect x="312.5" y="755.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="315.5" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.07%)</title><rect x="312.5" y="739.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="315.5" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="312.5" y="723.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="315.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (336 samples, 24.47%)</title><rect x="313.4" y="883.0" width="288.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.4" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (336 samples, 24.47%)</title><rect x="313.4" y="867.0" width="288.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.4" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (335 samples, 24.40%)</title><rect x="313.4" y="851.0" width="287.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.4" y="862.0">one/nio/http/HttpSession.processHttpBuf..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="313.4" y="835.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="316.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (334 samples, 24.33%)</title><rect x="314.2" y="835.0" width="287.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.2" y="846.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (334 samples, 24.33%)</title><rect x="314.2" y="819.0" width="287.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.2" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (334 samples, 24.33%)</title><rect x="314.2" y="803.0" width="287.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.2" y="814.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (293 samples, 21.34%)</title><rect x="314.2" y="787.0" width="251.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.2" y="798.0">one/nio/http/HttpSession.sendResp..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (293 samples, 21.34%)</title><rect x="314.2" y="771.0" width="251.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.2" y="782.0">one/nio/http/HttpSession.writeRes..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.44%)</title><rect x="314.2" y="755.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.36%)</title><rect x="314.2" y="739.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.07%)</title><rect x="314.2" y="723.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.2" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="314.2" y="707.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="317.2" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="314.2" y="691.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="317.2" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="314.2" y="675.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="314.2" y="659.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="317.2" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.29%)</title><rect x="315.1" y="723.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.29%)</title><rect x="315.1" y="707.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="318.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.29%)</title><rect x="315.1" y="691.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.07%)</title><rect x="316.0" y="675.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.0" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.15%)</title><rect x="316.8" y="675.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="319.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.15%)</title><rect x="316.8" y="659.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="319.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.15%)</title><rect x="316.8" y="643.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="319.8" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="318.5" y="739.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="321.5" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="318.5" y="723.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="321.5" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="318.5" y="707.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="321.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (287 samples, 20.90%)</title><rect x="319.4" y="755.0" width="246.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.4" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (287 samples, 20.90%)</title><rect x="319.4" y="739.0" width="246.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.4" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (286 samples, 20.83%)</title><rect x="320.3" y="723.0" width="245.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.3" y="734.0">one/nio/net/Session$ArrayQueueIte..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (286 samples, 20.83%)</title><rect x="320.3" y="707.0" width="245.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="323.3" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>[unknown] (3 samples, 0.22%)</title><rect x="320.3" y="691.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="323.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.22%)</title><rect x="320.3" y="675.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="323.3" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="320.3" y="659.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="323.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="320.3" y="643.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="323.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="320.3" y="627.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="320.3" y="611.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="323.3" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.15%)</title><rect x="321.1" y="659.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="324.1" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.15%)</title><rect x="321.1" y="643.0" width="1.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="324.1" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.15%)</title><rect x="321.1" y="627.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="324.1" y="638.0"></text>
</g>
<g>
<title>__send (283 samples, 20.61%)</title><rect x="322.8" y="691.0" width="243.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="325.8" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (283 samples, 20.61%)</title><rect x="322.8" y="675.0" width="243.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="325.8" y="686.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (283 samples, 20.61%)</title><rect x="322.8" y="659.0" width="243.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="325.8" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (273 samples, 19.88%)</title><rect x="323.7" y="643.0" width="234.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="326.7" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (273 samples, 19.88%)</title><rect x="323.7" y="627.0" width="234.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="326.7" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (271 samples, 19.74%)</title><rect x="324.6" y="611.0" width="232.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="327.6" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.07%)</title><rect x="324.6" y="595.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="327.6" y="606.0"></text>
</g>
<g>
<title>inet_sendmsg (267 samples, 19.45%)</title><rect x="325.4" y="595.0" width="229.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="328.4" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.07%)</title><rect x="325.4" y="579.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="328.4" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (266 samples, 19.37%)</title><rect x="326.3" y="579.0" width="228.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="329.3" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (266 samples, 19.37%)</title><rect x="326.3" y="563.0" width="228.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="329.3" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.07%)</title><rect x="326.3" y="547.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="329.3" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.07%)</title><rect x="327.1" y="547.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="330.1" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.07%)</title><rect x="327.1" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="330.1" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.15%)</title><rect x="328.0" y="547.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="331.0" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.15%)</title><rect x="328.0" y="531.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="331.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (1 samples, 0.07%)</title><rect x="328.0" y="515.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.0" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.07%)</title><rect x="328.0" y="499.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.0" y="510.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.07%)</title><rect x="328.8" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="331.8" y="526.0"></text>
</g>
<g>
<title>tcp_push (259 samples, 18.86%)</title><rect x="329.7" y="547.0" width="222.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="332.7" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (259 samples, 18.86%)</title><rect x="329.7" y="531.0" width="222.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="332.7" y="542.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.07%)</title><rect x="329.7" y="515.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="332.7" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (258 samples, 18.79%)</title><rect x="330.6" y="515.0" width="221.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="333.6" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (256 samples, 18.65%)</title><rect x="330.6" y="499.0" width="220.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="333.6" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.07%)</title><rect x="331.4" y="483.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="334.4" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (254 samples, 18.50%)</title><rect x="332.3" y="483.0" width="218.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="335.3" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (253 samples, 18.43%)</title><rect x="332.3" y="467.0" width="217.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="335.3" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (252 samples, 18.35%)</title><rect x="332.3" y="451.0" width="216.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="335.3" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (252 samples, 18.35%)</title><rect x="332.3" y="435.0" width="216.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="335.3" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (252 samples, 18.35%)</title><rect x="332.3" y="419.0" width="216.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="335.3" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.07%)</title><rect x="332.3" y="403.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="335.3" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (251 samples, 18.28%)</title><rect x="333.1" y="403.0" width="215.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="336.1" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (250 samples, 18.21%)</title><rect x="334.0" y="387.0" width="214.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="337.0" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.21 (250 samples, 18.21%)</title><rect x="334.0" y="371.0" width="214.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="337.0" y="382.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (250 samples, 18.21%)</title><rect x="334.0" y="355.0" width="214.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="337.0" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (250 samples, 18.21%)</title><rect x="334.0" y="339.0" width="214.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="337.0" y="350.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (250 samples, 18.21%)</title><rect x="334.0" y="323.0" width="214.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="337.0" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (249 samples, 18.14%)</title><rect x="334.9" y="307.0" width="214.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="337.9" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (249 samples, 18.14%)</title><rect x="334.9" y="291.0" width="214.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="337.9" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (249 samples, 18.14%)</title><rect x="334.9" y="275.0" width="214.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="337.9" y="286.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>ip_rcv (249 samples, 18.14%)</title><rect x="334.9" y="259.0" width="214.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="337.9" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (249 samples, 18.14%)</title><rect x="334.9" y="243.0" width="214.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="337.9" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (248 samples, 18.06%)</title><rect x="335.7" y="227.0" width="213.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="338.7" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (248 samples, 18.06%)</title><rect x="335.7" y="211.0" width="213.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="338.7" y="222.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (248 samples, 18.06%)</title><rect x="335.7" y="195.0" width="213.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="338.7" y="206.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.07%)</title><rect x="335.7" y="179.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="338.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (247 samples, 17.99%)</title><rect x="336.6" y="179.0" width="212.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="339.6" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.07%)</title><rect x="336.6" y="163.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="339.6" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.07%)</title><rect x="336.6" y="147.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="339.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (246 samples, 17.92%)</title><rect x="337.4" y="163.0" width="211.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="340.4" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (246 samples, 17.92%)</title><rect x="337.4" y="147.0" width="211.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="340.4" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.22%)</title><rect x="338.3" y="131.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="341.3" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.07%)</title><rect x="338.3" y="115.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="341.3" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.15%)</title><rect x="339.2" y="115.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="342.2" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.07%)</title><rect x="339.2" y="99.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="342.2" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.07%)</title><rect x="339.2" y="83.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="342.2" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.07%)</title><rect x="339.2" y="67.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="342.2" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.07%)</title><rect x="340.0" y="99.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.0" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (241 samples, 17.55%)</title><rect x="340.9" y="131.0" width="207.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="343.9" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (241 samples, 17.55%)</title><rect x="340.9" y="115.0" width="207.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="343.9" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.07%)</title><rect x="340.9" y="99.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="343.9" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (240 samples, 17.48%)</title><rect x="341.7" y="99.0" width="206.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="344.7" y="110.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (240 samples, 17.48%)</title><rect x="341.7" y="83.0" width="206.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="344.7" y="94.0">__wake_up_common_lock</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (240 samples, 17.48%)</title><rect x="341.7" y="67.0" width="206.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="344.7" y="78.0">_raw_spin_unlock_irqrestore</text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.07%)</title><rect x="548.0" y="131.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="551.0" y="142.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.07%)</title><rect x="548.9" y="451.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="551.9" y="462.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.07%)</title><rect x="549.7" y="467.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="552.7" y="478.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.07%)</title><rect x="550.6" y="499.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="553.6" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="550.6" y="483.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="553.6" y="494.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="551.4" y="499.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="554.4" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.22%)</title><rect x="552.3" y="547.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="555.3" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.22%)</title><rect x="552.3" y="531.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.3" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.15%)</title><rect x="553.2" y="515.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="556.2" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.07%)</title><rect x="554.9" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="557.9" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.07%)</title><rect x="554.9" y="579.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="557.9" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.07%)</title><rect x="554.9" y="563.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="557.9" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.07%)</title><rect x="554.9" y="547.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="557.9" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.07%)</title><rect x="554.9" y="531.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="557.9" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.15%)</title><rect x="555.7" y="595.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="558.7" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.07%)</title><rect x="557.5" y="611.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="560.5" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.07%)</title><rect x="557.5" y="595.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="560.5" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="557.5" y="579.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="560.5" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 0.66%)</title><rect x="558.3" y="643.0" width="7.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="561.3" y="654.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.66%)</title><rect x="558.3" y="627.0" width="7.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.3" y="638.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.66%)</title><rect x="558.3" y="611.0" width="7.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="561.3" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.66%)</title><rect x="558.3" y="595.0" width="7.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="566.1" y="787.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="566.1" y="771.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="566.1" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="569.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (40 samples, 2.91%)</title><rect x="566.9" y="787.0" width="34.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.9" y="798.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (40 samples, 2.91%)</title><rect x="566.9" y="771.0" width="34.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.9" y="782.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.upsert (40 samples, 2.91%)</title><rect x="566.9" y="755.0" width="34.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.9" y="766.0">ru..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (39 samples, 2.84%)</title><rect x="566.9" y="739.0" width="33.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.9" y="750.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (39 samples, 2.84%)</title><rect x="566.9" y="723.0" width="33.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.9" y="734.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (24 samples, 1.75%)</title><rect x="566.9" y="707.0" width="20.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="569.9" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (24 samples, 1.75%)</title><rect x="566.9" y="691.0" width="20.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="569.9" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="566.9" y="675.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="569.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (23 samples, 1.68%)</title><rect x="567.8" y="675.0" width="19.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="570.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (23 samples, 1.68%)</title><rect x="567.8" y="659.0" width="19.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="570.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (23 samples, 1.68%)</title><rect x="567.8" y="643.0" width="19.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="570.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (22 samples, 1.60%)</title><rect x="567.8" y="627.0" width="18.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="570.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (22 samples, 1.60%)</title><rect x="567.8" y="611.0" width="18.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="570.8" y="622.0"></text>
</g>
<g>
<title>__GI___sched_yield (3 samples, 0.22%)</title><rect x="570.3" y="595.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="573.3" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.22%)</title><rect x="570.3" y="579.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="573.3" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.22%)</title><rect x="570.3" y="563.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="573.3" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.15%)</title><rect x="571.2" y="547.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="574.2" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (2 samples, 0.15%)</title><rect x="571.2" y="531.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="574.2" y="542.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.15%)</title><rect x="571.2" y="515.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="574.2" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="572.1" y="499.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="575.1" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="572.9" y="595.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="575.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.22%)</title><rect x="573.8" y="595.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="576.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.22%)</title><rect x="573.8" y="579.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="576.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.22%)</title><rect x="573.8" y="563.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="576.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.22%)</title><rect x="573.8" y="547.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="576.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="573.8" y="531.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="576.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.15%)</title><rect x="574.6" y="531.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="577.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.15%)</title><rect x="574.6" y="515.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="577.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="575.5" y="499.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="578.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.07%)</title><rect x="576.4" y="595.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="579.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 0.66%)</title><rect x="577.2" y="595.0" width="7.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="580.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 0.66%)</title><rect x="577.2" y="579.0" width="7.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="580.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.58%)</title><rect x="577.2" y="563.0" width="6.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="580.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.58%)</title><rect x="577.2" y="547.0" width="6.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="580.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (7 samples, 0.51%)</title><rect x="577.2" y="531.0" width="6.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="580.2" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (1 samples, 0.07%)</title><rect x="577.2" y="515.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="580.2" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="577.2" y="499.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="580.2" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="577.2" y="483.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="580.2" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="577.2" y="467.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="580.2" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="577.2" y="451.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="580.2" y="462.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.36%)</title><rect x="578.1" y="515.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="581.1" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (4 samples, 0.29%)</title><rect x="578.1" y="499.0" width="3.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="581.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (2 samples, 0.15%)</title><rect x="578.1" y="483.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="581.1" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="578.1" y="467.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="581.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="578.9" y="467.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="581.9" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (1 samples, 0.07%)</title><rect x="578.9" y="451.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="581.9" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="578.9" y="435.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="581.9" y="446.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="578.9" y="419.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="581.9" y="430.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="578.9" y="403.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="581.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="579.8" y="483.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="582.8" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="579.8" y="467.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="582.8" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="579.8" y="451.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="582.8" y="462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="579.8" y="435.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="582.8" y="446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="579.8" y="419.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="582.8" y="430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="580.7" y="483.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="583.7" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="580.7" y="467.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="583.7" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="580.7" y="451.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="583.7" y="462.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="581.5" y="499.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="584.5" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="581.5" y="483.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="584.5" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="581.5" y="467.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="584.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.07%)</title><rect x="582.4" y="515.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="585.4" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="582.4" y="499.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="585.4" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="582.4" y="483.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="585.4" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="582.4" y="467.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="585.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.07%)</title><rect x="583.2" y="531.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="586.2" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="583.2" y="515.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="586.2" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="583.2" y="499.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="586.2" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="583.2" y="483.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="586.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.07%)</title><rect x="584.1" y="563.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="587.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (1 samples, 0.07%)</title><rect x="585.0" y="595.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="588.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.07%)</title><rect x="585.0" y="579.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="588.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="585.0" y="563.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="588.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="585.0" y="547.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="588.0" y="558.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (1 samples, 0.07%)</title><rect x="585.0" y="531.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="588.0" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="585.8" y="595.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="588.8" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="585.8" y="579.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="588.8" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="585.8" y="563.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="588.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.07%)</title><rect x="586.7" y="627.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="589.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="586.7" y="611.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="589.7" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="586.7" y="595.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="589.7" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="586.7" y="579.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="589.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.87%)</title><rect x="587.5" y="707.0" width="10.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="590.5" y="718.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.07%)</title><rect x="587.5" y="691.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="590.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="587.5" y="675.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="590.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="587.5" y="659.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="590.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.07%)</title><rect x="587.5" y="643.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="590.5" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.07%)</title><rect x="587.5" y="627.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="590.5" y="638.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.07%)</title><rect x="587.5" y="611.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.5" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.07%)</title><rect x="587.5" y="595.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="590.5" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="587.5" y="579.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="590.5" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="587.5" y="563.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="590.5" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.07%)</title><rect x="587.5" y="547.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="590.5" y="558.0"></text>
</g>
<g>
<title>write (11 samples, 0.80%)</title><rect x="588.4" y="691.0" width="9.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="591.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.80%)</title><rect x="588.4" y="675.0" width="9.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="591.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.80%)</title><rect x="588.4" y="659.0" width="9.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="591.4" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.73%)</title><rect x="589.3" y="643.0" width="8.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="592.3" y="654.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.73%)</title><rect x="589.3" y="627.0" width="8.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="592.3" y="638.0"></text>
</g>
<g>
<title>vfs_write (10 samples, 0.73%)</title><rect x="589.3" y="611.0" width="8.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="592.3" y="622.0"></text>
</g>
<g>
<title>__vfs_write (9 samples, 0.66%)</title><rect x="589.3" y="595.0" width="7.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="592.3" y="606.0"></text>
</g>
<g>
<title>new_sync_write (9 samples, 0.66%)</title><rect x="589.3" y="579.0" width="7.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="592.3" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (9 samples, 0.66%)</title><rect x="589.3" y="563.0" width="7.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="592.3" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (9 samples, 0.66%)</title><rect x="589.3" y="547.0" width="7.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="592.3" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (9 samples, 0.66%)</title><rect x="589.3" y="531.0" width="7.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="592.3" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (4 samples, 0.29%)</title><rect x="589.3" y="515.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="592.3" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.22%)</title><rect x="589.3" y="499.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="592.3" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.22%)</title><rect x="589.3" y="483.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="592.3" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.15%)</title><rect x="589.3" y="467.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="592.3" y="478.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.07%)</title><rect x="591.0" y="467.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="594.0" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.07%)</title><rect x="591.8" y="499.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="594.8" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_end (4 samples, 0.29%)</title><rect x="592.7" y="515.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="595.7" y="526.0"></text>
</g>
<g>
<title>generic_write_end (4 samples, 0.29%)</title><rect x="592.7" y="499.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="595.7" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (4 samples, 0.29%)</title><rect x="592.7" y="483.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="595.7" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.29%)</title><rect x="592.7" y="467.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="595.7" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.22%)</title><rect x="592.7" y="451.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="595.7" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.22%)</title><rect x="592.7" y="435.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="595.7" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.07%)</title><rect x="593.6" y="419.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="596.6" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.07%)</title><rect x="593.6" y="403.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="596.6" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.07%)</title><rect x="593.6" y="387.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="596.6" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (1 samples, 0.07%)</title><rect x="593.6" y="371.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="596.6" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.07%)</title><rect x="593.6" y="355.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="596.6" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.07%)</title><rect x="594.4" y="419.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="597.4" y="430.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.07%)</title><rect x="594.4" y="403.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="597.4" y="414.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.07%)</title><rect x="595.3" y="451.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="598.3" y="462.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.07%)</title><rect x="596.1" y="515.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="599.1" y="526.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.07%)</title><rect x="597.0" y="595.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="600.0" y="606.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.07%)</title><rect x="597.9" y="707.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="600.9" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="597.9" y="691.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="600.9" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="597.9" y="675.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="600.9" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="597.9" y="659.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="600.9" y="670.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.15%)</title><rect x="598.7" y="707.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="601.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.15%)</title><rect x="598.7" y="691.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="601.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.15%)</title><rect x="598.7" y="675.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="601.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.15%)</title><rect x="598.7" y="659.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="601.7" y="670.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.15%)</title><rect x="598.7" y="643.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.7" y="654.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.15%)</title><rect x="598.7" y="627.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="601.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.15%)</title><rect x="598.7" y="611.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="601.7" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.15%)</title><rect x="598.7" y="595.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="601.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.15%)</title><rect x="598.7" y="579.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="601.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.getArray (1 samples, 0.07%)</title><rect x="600.4" y="739.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.07%)</title><rect x="600.4" y="723.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.07%)</title><rect x="600.4" y="707.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.07%)</title><rect x="600.4" y="691.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="600.4" y="675.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="603.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="600.4" y="659.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="603.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="600.4" y="643.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="603.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.07%)</title><rect x="601.3" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.07%)</title><rect x="601.3" y="835.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.3" y="846.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.07%)</title><rect x="601.3" y="819.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="604.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="601.3" y="803.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="601.3" y="787.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.07%)</title><rect x="601.3" y="771.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="604.3" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.07%)</title><rect x="601.3" y="755.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="604.3" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.07%)</title><rect x="601.3" y="739.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="604.3" y="750.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.07%)</title><rect x="601.3" y="723.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="604.3" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="601.3" y="707.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="604.3" y="718.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=5596] (370 samples, 26.95%)</title><rect x="602.1" y="915.0" width="318.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="605.1" y="926.0">[NIO Selector #2 tid=5596]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (370 samples, 26.95%)</title><rect x="602.1" y="899.0" width="318.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.1" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.44%)</title><rect x="602.1" y="883.0" width="5.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.44%)</title><rect x="602.1" y="867.0" width="5.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.1" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.07%)</title><rect x="602.1" y="851.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="605.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.36%)</title><rect x="603.0" y="851.0" width="4.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="606.0" y="862.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.36%)</title><rect x="603.0" y="835.0" width="4.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="606.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.36%)</title><rect x="603.0" y="819.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="606.0" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.36%)</title><rect x="603.0" y="803.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="606.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.36%)</title><rect x="603.0" y="787.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="606.0" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 0.36%)</title><rect x="603.0" y="771.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="606.0" y="782.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 0.36%)</title><rect x="603.0" y="755.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="606.0" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.36%)</title><rect x="603.0" y="739.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="606.0" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.36%)</title><rect x="603.0" y="723.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="606.0" y="734.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.36%)</title><rect x="603.0" y="707.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="606.0" y="718.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.36%)</title><rect x="603.0" y="691.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="606.0" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.36%)</title><rect x="603.0" y="675.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="606.0" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (364 samples, 26.51%)</title><rect x="607.3" y="883.0" width="312.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.3" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (363 samples, 26.44%)</title><rect x="608.2" y="867.0" width="311.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.2" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (360 samples, 26.22%)</title><rect x="608.2" y="851.0" width="309.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.2" y="862.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (357 samples, 26.00%)</title><rect x="608.2" y="835.0" width="306.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.2" y="846.0">one/nio/http/HttpSession.handleParsedRequ..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (357 samples, 26.00%)</title><rect x="608.2" y="819.0" width="306.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.2" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (357 samples, 26.00%)</title><rect x="608.2" y="803.0" width="306.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="611.2" y="814.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (329 samples, 23.96%)</title><rect x="608.2" y="787.0" width="282.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.2" y="798.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (329 samples, 23.96%)</title><rect x="608.2" y="771.0" width="282.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.2" y="782.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.29%)</title><rect x="608.2" y="755.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.07%)</title><rect x="608.2" y="739.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.22%)</title><rect x="609.0" y="739.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.07%)</title><rect x="609.0" y="723.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.15%)</title><rect x="609.9" y="723.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.15%)</title><rect x="609.9" y="707.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.07%)</title><rect x="609.9" y="691.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.07%)</title><rect x="610.7" y="691.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (325 samples, 23.67%)</title><rect x="611.6" y="755.0" width="279.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.6" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (325 samples, 23.67%)</title><rect x="611.6" y="739.0" width="279.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.6" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (325 samples, 23.67%)</title><rect x="611.6" y="723.0" width="279.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.6" y="734.0">one/nio/net/Session$ArrayQueueItem.wr..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (325 samples, 23.67%)</title><rect x="611.6" y="707.0" width="279.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="614.6" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>__send (325 samples, 23.67%)</title><rect x="611.6" y="691.0" width="279.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="614.6" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (325 samples, 23.67%)</title><rect x="611.6" y="675.0" width="279.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="614.6" y="686.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (325 samples, 23.67%)</title><rect x="611.6" y="659.0" width="279.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="614.6" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (322 samples, 23.45%)</title><rect x="611.6" y="643.0" width="276.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="614.6" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (322 samples, 23.45%)</title><rect x="611.6" y="627.0" width="276.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="614.6" y="638.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (1 samples, 0.07%)</title><rect x="611.6" y="611.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="614.6" y="622.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.07%)</title><rect x="611.6" y="595.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="614.6" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (321 samples, 23.38%)</title><rect x="612.5" y="611.0" width="275.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="615.5" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (321 samples, 23.38%)</title><rect x="612.5" y="595.0" width="275.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="615.5" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (321 samples, 23.38%)</title><rect x="612.5" y="579.0" width="275.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="615.5" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (321 samples, 23.38%)</title><rect x="612.5" y="563.0" width="275.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="615.5" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.22%)</title><rect x="613.3" y="547.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="616.3" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.22%)</title><rect x="613.3" y="531.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="616.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (1 samples, 0.07%)</title><rect x="613.3" y="515.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="616.3" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.07%)</title><rect x="613.3" y="499.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="616.3" y="510.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.07%)</title><rect x="614.2" y="515.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="617.2" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.07%)</title><rect x="615.0" y="515.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="618.0" y="526.0"></text>
</g>
<g>
<title>tcp_push (317 samples, 23.09%)</title><rect x="615.9" y="547.0" width="272.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="618.9" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (317 samples, 23.09%)</title><rect x="615.9" y="531.0" width="272.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="618.9" y="542.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (1 samples, 0.07%)</title><rect x="615.9" y="515.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="618.9" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (316 samples, 23.02%)</title><rect x="616.8" y="515.0" width="271.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="619.8" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (314 samples, 22.87%)</title><rect x="617.6" y="499.0" width="269.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="620.6" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (314 samples, 22.87%)</title><rect x="617.6" y="483.0" width="269.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="620.6" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (314 samples, 22.87%)</title><rect x="617.6" y="467.0" width="269.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="620.6" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (314 samples, 22.87%)</title><rect x="617.6" y="451.0" width="269.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="620.6" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (314 samples, 22.87%)</title><rect x="617.6" y="435.0" width="269.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="620.6" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (314 samples, 22.87%)</title><rect x="617.6" y="419.0" width="269.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.6" y="430.0">ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (314 samples, 22.87%)</title><rect x="617.6" y="403.0" width="269.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="620.6" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.07%)</title><rect x="618.5" y="387.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="621.5" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (312 samples, 22.72%)</title><rect x="619.3" y="387.0" width="268.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="622.3" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.21 (312 samples, 22.72%)</title><rect x="619.3" y="371.0" width="268.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="622.3" y="382.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (312 samples, 22.72%)</title><rect x="619.3" y="355.0" width="268.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.3" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (312 samples, 22.72%)</title><rect x="619.3" y="339.0" width="268.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="622.3" y="350.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (312 samples, 22.72%)</title><rect x="619.3" y="323.0" width="268.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="622.3" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (312 samples, 22.72%)</title><rect x="619.3" y="307.0" width="268.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="622.3" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (311 samples, 22.65%)</title><rect x="620.2" y="291.0" width="267.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.2" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (311 samples, 22.65%)</title><rect x="620.2" y="275.0" width="267.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.2" y="286.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>ip_rcv (311 samples, 22.65%)</title><rect x="620.2" y="259.0" width="267.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="623.2" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (311 samples, 22.65%)</title><rect x="620.2" y="243.0" width="267.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="623.2" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (311 samples, 22.65%)</title><rect x="620.2" y="227.0" width="267.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="623.2" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (311 samples, 22.65%)</title><rect x="620.2" y="211.0" width="267.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="623.2" y="222.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (311 samples, 22.65%)</title><rect x="620.2" y="195.0" width="267.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="623.2" y="206.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>tcp_v4_rcv (311 samples, 22.65%)</title><rect x="620.2" y="179.0" width="267.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="623.2" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.07%)</title><rect x="620.2" y="163.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="623.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (310 samples, 22.58%)</title><rect x="621.1" y="163.0" width="266.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="624.1" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.07%)</title><rect x="621.1" y="147.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="624.1" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (309 samples, 22.51%)</title><rect x="621.9" y="147.0" width="265.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="624.9" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.07%)</title><rect x="621.9" y="131.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="624.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.07%)</title><rect x="621.9" y="115.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="624.9" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.07%)</title><rect x="621.9" y="99.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="624.9" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.07%)</title><rect x="621.9" y="83.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="624.9" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.07%)</title><rect x="621.9" y="67.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="624.9" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.07%)</title><rect x="621.9" y="51.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="624.9" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.07%)</title><rect x="621.9" y="35.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="624.9" y="46.0"></text>
</g>
<g>
<title>tcp_data_queue (308 samples, 22.43%)</title><rect x="622.8" y="131.0" width="264.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="625.8" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (307 samples, 22.36%)</title><rect x="622.8" y="115.0" width="263.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="625.8" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (307 samples, 22.36%)</title><rect x="622.8" y="99.0" width="263.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="625.8" y="110.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (306 samples, 22.29%)</title><rect x="623.6" y="83.0" width="263.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="626.6" y="94.0">__wake_up_common_lock</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (306 samples, 22.29%)</title><rect x="623.6" y="67.0" width="263.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="626.6" y="78.0">_raw_spin_unlock_irqrestore</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.07%)</title><rect x="886.6" y="115.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="889.6" y="126.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.07%)</title><rect x="887.5" y="499.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="890.5" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.22%)</title><rect x="888.3" y="643.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="891.3" y="654.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.22%)</title><rect x="888.3" y="627.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="891.3" y="638.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.22%)</title><rect x="888.3" y="611.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="891.3" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.22%)</title><rect x="888.3" y="595.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="891.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="890.9" y="787.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="893.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (27 samples, 1.97%)</title><rect x="891.8" y="787.0" width="23.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.8" y="798.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (27 samples, 1.97%)</title><rect x="891.8" y="771.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.8" y="782.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.upsert (27 samples, 1.97%)</title><rect x="891.8" y="755.0" width="23.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.8" y="766.0">r..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (27 samples, 1.97%)</title><rect x="891.8" y="739.0" width="23.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.8" y="750.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (27 samples, 1.97%)</title><rect x="891.8" y="723.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.8" y="734.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (18 samples, 1.31%)</title><rect x="892.6" y="707.0" width="15.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="895.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="893.5" y="691.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="896.5" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (16 samples, 1.17%)</title><rect x="894.4" y="691.0" width="13.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="897.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 1.17%)</title><rect x="894.4" y="675.0" width="13.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="897.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 1.17%)</title><rect x="894.4" y="659.0" width="13.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="897.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 1.17%)</title><rect x="894.4" y="643.0" width="13.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="897.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (14 samples, 1.02%)</title><rect x="894.4" y="627.0" width="12.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="897.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (14 samples, 1.02%)</title><rect x="894.4" y="611.0" width="12.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="897.4" y="622.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.15%)</title><rect x="895.2" y="595.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="898.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.15%)</title><rect x="895.2" y="579.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="898.2" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.15%)</title><rect x="895.2" y="563.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="898.2" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.15%)</title><rect x="895.2" y="547.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="898.2" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (2 samples, 0.15%)</title><rect x="895.2" y="531.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="898.2" y="542.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.15%)</title><rect x="895.2" y="515.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="898.2" y="526.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.15%)</title><rect x="895.2" y="499.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="898.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.22%)</title><rect x="896.9" y="595.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="899.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.22%)</title><rect x="896.9" y="579.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="899.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.22%)</title><rect x="896.9" y="563.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="899.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.22%)</title><rect x="896.9" y="547.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="899.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.07%)</title><rect x="896.9" y="531.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="899.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.07%)</title><rect x="897.8" y="531.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="900.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.07%)</title><rect x="897.8" y="515.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="900.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="897.8" y="499.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="900.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.07%)</title><rect x="898.7" y="531.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="901.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.07%)</title><rect x="899.5" y="595.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="902.5" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.07%)</title><rect x="899.5" y="579.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="902.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.22%)</title><rect x="900.4" y="595.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="903.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.22%)</title><rect x="900.4" y="579.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="903.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.15%)</title><rect x="900.4" y="563.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="903.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.15%)</title><rect x="900.4" y="547.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="903.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.15%)</title><rect x="900.4" y="531.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="903.4" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.15%)</title><rect x="900.4" y="515.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="903.4" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (2 samples, 0.15%)</title><rect x="900.4" y="499.0" width="1.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="903.4" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (1 samples, 0.07%)</title><rect x="900.4" y="483.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="903.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="900.4" y="467.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="903.4" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="900.4" y="451.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="903.4" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="901.2" y="483.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="904.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="902.1" y="563.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="905.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (1 samples, 0.07%)</title><rect x="902.9" y="595.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="905.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.07%)</title><rect x="902.9" y="579.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="905.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="902.9" y="563.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="905.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="902.9" y="547.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="905.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.07%)</title><rect x="902.9" y="531.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="905.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.07%)</title><rect x="902.9" y="515.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="905.9" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.07%)</title><rect x="902.9" y="499.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="905.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (1 samples, 0.07%)</title><rect x="902.9" y="483.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="905.9" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (1 samples, 0.07%)</title><rect x="902.9" y="467.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="905.9" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="902.9" y="451.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="905.9" y="462.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="902.9" y="435.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="905.9" y="446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="902.9" y="419.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="905.9" y="430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="902.9" y="403.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="905.9" y="414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="902.9" y="387.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="905.9" y="398.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="903.8" y="595.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="906.8" y="606.0"></text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.07%)</title><rect x="903.8" y="579.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="906.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="903.8" y="563.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="906.8" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="903.8" y="547.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="906.8" y="558.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.07%)</title><rect x="903.8" y="531.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="906.8" y="542.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.07%)</title><rect x="903.8" y="515.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="906.8" y="526.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="903.8" y="499.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="906.8" y="510.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="903.8" y="483.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="906.8" y="494.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.07%)</title><rect x="903.8" y="467.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="906.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.07%)</title><rect x="904.7" y="595.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="907.7" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.07%)</title><rect x="904.7" y="579.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="907.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="904.7" y="563.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="907.7" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="904.7" y="547.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="907.7" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="904.7" y="531.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="907.7" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="904.7" y="515.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="907.7" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="904.7" y="499.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="907.7" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.07%)</title><rect x="904.7" y="483.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="907.7" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="905.5" y="595.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="908.5" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="905.5" y="579.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="908.5" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="905.5" y="563.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="908.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="906.4" y="627.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="909.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (1 samples, 0.07%)</title><rect x="906.4" y="611.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="909.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.07%)</title><rect x="907.2" y="627.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="910.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.44%)</title><rect x="908.1" y="707.0" width="5.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="911.1" y="718.0"></text>
</g>
<g>
<title>write (6 samples, 0.44%)</title><rect x="908.1" y="691.0" width="5.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="911.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.44%)</title><rect x="908.1" y="675.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="911.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.44%)</title><rect x="908.1" y="659.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="911.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (6 samples, 0.44%)</title><rect x="908.1" y="643.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="911.1" y="654.0"></text>
</g>
<g>
<title>ksys_write (6 samples, 0.44%)</title><rect x="908.1" y="627.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="911.1" y="638.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 0.44%)</title><rect x="908.1" y="611.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="911.1" y="622.0"></text>
</g>
<g>
<title>__vfs_write (6 samples, 0.44%)</title><rect x="908.1" y="595.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="911.1" y="606.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.44%)</title><rect x="908.1" y="579.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="911.1" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (6 samples, 0.44%)</title><rect x="908.1" y="563.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="911.1" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (5 samples, 0.36%)</title><rect x="908.1" y="547.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="911.1" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (5 samples, 0.36%)</title><rect x="908.1" y="531.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.1" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.15%)</title><rect x="908.1" y="515.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="911.1" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.07%)</title><rect x="908.1" y="499.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="911.1" y="510.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.07%)</title><rect x="908.1" y="483.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="911.1" y="494.0"></text>
</g>
<g>
<title>memset_orig (1 samples, 0.07%)</title><rect x="909.0" y="499.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="912.0" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_end (3 samples, 0.22%)</title><rect x="909.8" y="515.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="912.8" y="526.0"></text>
</g>
<g>
<title>generic_write_end (3 samples, 0.22%)</title><rect x="909.8" y="499.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="912.8" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (3 samples, 0.22%)</title><rect x="909.8" y="483.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.8" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.22%)</title><rect x="909.8" y="467.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="912.8" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.22%)</title><rect x="909.8" y="451.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="912.8" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.15%)</title><rect x="910.7" y="435.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="913.7" y="446.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.15%)</title><rect x="910.7" y="419.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="913.7" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.15%)</title><rect x="910.7" y="403.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="913.7" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.07%)</title><rect x="910.7" y="387.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="913.7" y="398.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.07%)</title><rect x="910.7" y="371.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="913.7" y="382.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.07%)</title><rect x="911.5" y="387.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="914.5" y="398.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.07%)</title><rect x="912.4" y="547.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="915.4" y="558.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.15%)</title><rect x="913.3" y="707.0" width="1.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="916.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.15%)</title><rect x="913.3" y="691.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="916.3" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.15%)</title><rect x="913.3" y="675.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.3" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.15%)</title><rect x="913.3" y="659.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="916.3" y="670.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.15%)</title><rect x="913.3" y="643.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="916.3" y="654.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.15%)</title><rect x="913.3" y="627.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="916.3" y="638.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.15%)</title><rect x="913.3" y="611.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="916.3" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.15%)</title><rect x="913.3" y="595.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="916.3" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.15%)</title><rect x="913.3" y="579.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="916.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.15%)</title><rect x="915.0" y="835.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="918.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.07%)</title><rect x="915.8" y="819.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.07%)</title><rect x="916.7" y="835.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.07%)</title><rect x="916.7" y="819.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="919.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.07%)</title><rect x="916.7" y="803.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="919.7" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="916.7" y="787.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="919.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.22%)</title><rect x="917.6" y="851.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.22%)</title><rect x="917.6" y="835.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.15%)</title><rect x="917.6" y="819.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="920.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.15%)</title><rect x="917.6" y="803.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="920.6" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.15%)</title><rect x="917.6" y="787.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="920.6" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.15%)</title><rect x="917.6" y="771.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="920.6" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.15%)</title><rect x="917.6" y="755.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="920.6" y="766.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.07%)</title><rect x="919.3" y="819.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="922.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="919.3" y="803.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="922.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="919.3" y="787.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="922.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.07%)</title><rect x="919.3" y="771.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="922.3" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.07%)</title><rect x="919.3" y="755.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="922.3" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.07%)</title><rect x="919.3" y="739.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="922.3" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.07%)</title><rect x="919.3" y="723.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="922.3" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.07%)</title><rect x="919.3" y="707.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="922.3" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.07%)</title><rect x="919.3" y="691.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="922.3" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=5597] (309 samples, 22.51%)</title><rect x="920.1" y="915.0" width="265.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="923.1" y="926.0">[NIO Selector #3 tid=5597]</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="920.1" y="899.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="923.1" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="920.1" y="883.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="923.1" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="920.1" y="867.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="923.1" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="920.1" y="851.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="923.1" y="862.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (308 samples, 22.43%)</title><rect x="921.0" y="899.0" width="264.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.0" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 1.31%)</title><rect x="921.9" y="883.0" width="15.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 1.17%)</title><rect x="922.7" y="867.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="925.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.17%)</title><rect x="922.7" y="851.0" width="13.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="925.7" y="862.0"></text>
</g>
<g>
<title>epoll_wait (16 samples, 1.17%)</title><rect x="922.7" y="835.0" width="13.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="925.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 1.17%)</title><rect x="922.7" y="819.0" width="13.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="925.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.07%)</title><rect x="922.7" y="803.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="925.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 1.09%)</title><rect x="923.6" y="803.0" width="12.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (14 samples, 1.02%)</title><rect x="924.4" y="787.0" width="12.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="927.4" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (14 samples, 1.02%)</title><rect x="924.4" y="771.0" width="12.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="927.4" y="782.0"></text>
</g>
<g>
<title>ep_poll (14 samples, 1.02%)</title><rect x="924.4" y="755.0" width="12.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="927.4" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (2 samples, 0.15%)</title><rect x="924.4" y="739.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="927.4" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.15%)</title><rect x="924.4" y="723.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="927.4" y="734.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.07%)</title><rect x="925.3" y="707.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="928.3" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.87%)</title><rect x="926.2" y="739.0" width="10.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="929.2" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.87%)</title><rect x="926.2" y="723.0" width="10.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="929.2" y="734.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.87%)</title><rect x="926.2" y="707.0" width="10.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="929.2" y="718.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.87%)</title><rect x="926.2" y="691.0" width="10.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="929.2" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.87%)</title><rect x="926.2" y="675.0" width="10.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="936.5" y="867.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="939.5" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="936.5" y="851.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="939.5" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="936.5" y="835.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="939.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (289 samples, 21.05%)</title><rect x="937.3" y="883.0" width="248.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.3" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (289 samples, 21.05%)</title><rect x="937.3" y="867.0" width="248.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.3" y="878.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (280 samples, 20.39%)</title><rect x="937.3" y="851.0" width="240.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.3" y="862.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (278 samples, 20.25%)</title><rect x="937.3" y="835.0" width="238.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="940.3" y="846.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (278 samples, 20.25%)</title><rect x="937.3" y="819.0" width="238.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.3" y="830.0">one/nio/http/HttpServer.handleRe..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (278 samples, 20.25%)</title><rect x="937.3" y="803.0" width="238.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="940.3" y="814.0">RequestHandler1_entity.handleReq..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (215 samples, 15.66%)</title><rect x="937.3" y="787.0" width="184.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.3" y="798.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (215 samples, 15.66%)</title><rect x="937.3" y="771.0" width="184.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="940.3" y="782.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.36%)</title><rect x="937.3" y="755.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="940.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.07%)</title><rect x="938.2" y="739.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.15%)</title><rect x="939.0" y="739.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="942.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.15%)</title><rect x="939.0" y="723.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.15%)</title><rect x="939.0" y="707.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.15%)</title><rect x="939.0" y="691.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="942.0" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="939.0" y="675.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="942.0" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="939.0" y="659.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="942.0" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="939.0" y="643.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="942.0" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="939.0" y="627.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="942.0" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="939.9" y="675.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="942.9" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="939.9" y="659.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="942.9" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="939.9" y="643.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="942.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="940.8" y="739.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="943.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="940.8" y="723.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="943.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="940.8" y="707.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (210 samples, 15.29%)</title><rect x="941.6" y="755.0" width="180.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="944.6" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (210 samples, 15.29%)</title><rect x="941.6" y="739.0" width="180.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.6" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (210 samples, 15.29%)</title><rect x="941.6" y="723.0" width="180.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="944.6" y="734.0">one/nio/net/Session$Arr..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (210 samples, 15.29%)</title><rect x="941.6" y="707.0" width="180.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="944.6" y="718.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>__send (210 samples, 15.29%)</title><rect x="941.6" y="691.0" width="180.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="944.6" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (210 samples, 15.29%)</title><rect x="941.6" y="675.0" width="180.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="944.6" y="686.0">entry_SYSCALL_64_after_..</text>
</g>
<g>
<title>do_syscall_64 (210 samples, 15.29%)</title><rect x="941.6" y="659.0" width="180.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="944.6" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (209 samples, 15.22%)</title><rect x="941.6" y="643.0" width="179.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="944.6" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (209 samples, 15.22%)</title><rect x="941.6" y="627.0" width="179.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.6" y="638.0">__sys_sendto</text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.07%)</title><rect x="941.6" y="611.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="944.6" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (207 samples, 15.08%)</title><rect x="942.5" y="611.0" width="177.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="945.5" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (206 samples, 15.00%)</title><rect x="942.5" y="595.0" width="177.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="945.5" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (206 samples, 15.00%)</title><rect x="942.5" y="579.0" width="177.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="945.5" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.07%)</title><rect x="942.5" y="563.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="945.5" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (205 samples, 14.93%)</title><rect x="943.3" y="563.0" width="176.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="946.3" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.07%)</title><rect x="944.2" y="547.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="947.2" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.07%)</title><rect x="944.2" y="531.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="947.2" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.29%)</title><rect x="945.1" y="547.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="948.1" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.22%)</title><rect x="945.9" y="531.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="948.9" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (1 samples, 0.07%)</title><rect x="945.9" y="515.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="948.9" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.07%)</title><rect x="945.9" y="499.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="948.9" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.07%)</title><rect x="946.8" y="515.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="949.8" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.07%)</title><rect x="947.6" y="515.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.6" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.07%)</title><rect x="948.5" y="547.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="951.5" y="558.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.07%)</title><rect x="948.5" y="531.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="951.5" y="542.0"></text>
</g>
<g>
<title>tcp_push (198 samples, 14.42%)</title><rect x="949.4" y="547.0" width="170.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="952.4" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (197 samples, 14.35%)</title><rect x="950.2" y="531.0" width="169.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="953.2" y="542.0">__tcp_push_pending_fra..</text>
</g>
<g>
<title>tcp_write_xmit (197 samples, 14.35%)</title><rect x="950.2" y="515.0" width="169.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="953.2" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (196 samples, 14.28%)</title><rect x="950.2" y="499.0" width="168.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="953.2" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (196 samples, 14.28%)</title><rect x="950.2" y="483.0" width="168.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="953.2" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (196 samples, 14.28%)</title><rect x="950.2" y="467.0" width="168.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="953.2" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (194 samples, 14.13%)</title><rect x="951.9" y="451.0" width="166.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="954.9" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (194 samples, 14.13%)</title><rect x="951.9" y="435.0" width="166.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="954.9" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (194 samples, 14.13%)</title><rect x="951.9" y="419.0" width="166.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="954.9" y="430.0">ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (194 samples, 14.13%)</title><rect x="951.9" y="403.0" width="166.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="954.9" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (189 samples, 13.77%)</title><rect x="952.8" y="387.0" width="162.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="955.8" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.21 (189 samples, 13.77%)</title><rect x="952.8" y="371.0" width="162.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="955.8" y="382.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (189 samples, 13.77%)</title><rect x="952.8" y="355.0" width="162.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="955.8" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (189 samples, 13.77%)</title><rect x="952.8" y="339.0" width="162.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="955.8" y="350.0">__softirqentry_text_s..</text>
</g>
<g>
<title>net_rx_action (189 samples, 13.77%)</title><rect x="952.8" y="323.0" width="162.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="955.8" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (189 samples, 13.77%)</title><rect x="952.8" y="307.0" width="162.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="955.8" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (188 samples, 13.69%)</title><rect x="953.7" y="291.0" width="161.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="956.7" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (187 samples, 13.62%)</title><rect x="953.7" y="275.0" width="160.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="956.7" y="286.0">__netif_receive_skb_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.07%)</title><rect x="953.7" y="259.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="956.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv (186 samples, 13.55%)</title><rect x="954.5" y="259.0" width="159.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="957.5" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (186 samples, 13.55%)</title><rect x="954.5" y="243.0" width="159.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="957.5" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (186 samples, 13.55%)</title><rect x="954.5" y="227.0" width="159.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="957.5" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (186 samples, 13.55%)</title><rect x="954.5" y="211.0" width="159.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="957.5" y="222.0">ip_local_deliver_fin..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (185 samples, 13.47%)</title><rect x="954.5" y="195.0" width="159.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="957.5" y="206.0">ip_protocol_deliver_..</text>
</g>
<g>
<title>tcp_v4_rcv (185 samples, 13.47%)</title><rect x="954.5" y="179.0" width="159.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="957.5" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.07%)</title><rect x="955.4" y="163.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="958.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (183 samples, 13.33%)</title><rect x="956.2" y="163.0" width="157.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="959.2" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (183 samples, 13.33%)</title><rect x="956.2" y="147.0" width="157.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="959.2" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.22%)</title><rect x="956.2" y="131.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="959.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.15%)</title><rect x="957.1" y="115.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="960.1" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.07%)</title><rect x="957.1" y="99.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="960.1" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.07%)</title><rect x="957.1" y="83.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="960.1" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.07%)</title><rect x="957.1" y="67.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="960.1" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.07%)</title><rect x="957.1" y="51.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="960.1" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.07%)</title><rect x="957.1" y="35.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="960.1" y="46.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.07%)</title><rect x="958.0" y="99.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="961.0" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (180 samples, 13.11%)</title><rect x="958.8" y="131.0" width="154.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="961.8" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (179 samples, 13.04%)</title><rect x="959.7" y="115.0" width="153.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="962.7" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (178 samples, 12.96%)</title><rect x="960.5" y="99.0" width="153.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="963.5" y="110.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (178 samples, 12.96%)</title><rect x="960.5" y="83.0" width="153.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="963.5" y="94.0">__wake_up_common_lock</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (178 samples, 12.96%)</title><rect x="960.5" y="67.0" width="153.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="963.5" y="78.0">_raw_spin_unlock_ir..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.07%)</title><rect x="1113.5" y="195.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1116.5" y="206.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.07%)</title><rect x="1114.4" y="275.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.4" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.29%)</title><rect x="1115.2" y="387.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1118.2" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.29%)</title><rect x="1115.2" y="371.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1118.2" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.07%)</title><rect x="1115.2" y="355.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.2" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.07%)</title><rect x="1115.2" y="339.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1118.2" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.07%)</title><rect x="1115.2" y="323.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1118.2" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.07%)</title><rect x="1115.2" y="307.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.2" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.07%)</title><rect x="1115.2" y="291.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1118.2" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.22%)</title><rect x="1116.1" y="355.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1119.1" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.07%)</title><rect x="1116.9" y="339.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1119.9" y="350.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.07%)</title><rect x="1117.8" y="339.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1120.8" y="350.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.07%)</title><rect x="1118.7" y="499.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1121.7" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.07%)</title><rect x="1119.5" y="595.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1122.5" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.07%)</title><rect x="1119.5" y="579.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1122.5" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.07%)</title><rect x="1120.4" y="611.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1123.4" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.07%)</title><rect x="1120.4" y="595.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1123.4" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="1120.4" y="579.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1123.4" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1121.2" y="643.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1124.2" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="1121.2" y="627.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1124.2" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="1121.2" y="611.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1124.2" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.07%)</title><rect x="1121.2" y="595.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1124.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.07%)</title><rect x="1122.1" y="787.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1125.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.07%)</title><rect x="1122.1" y="771.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1125.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.07%)</title><rect x="1122.1" y="755.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1125.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (62 samples, 4.52%)</title><rect x="1123.0" y="787.0" width="53.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1126.0" y="798.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (62 samples, 4.52%)</title><rect x="1123.0" y="771.0" width="53.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1126.0" y="782.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.upsert (62 samples, 4.52%)</title><rect x="1123.0" y="755.0" width="53.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.0" y="766.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (61 samples, 4.44%)</title><rect x="1123.0" y="739.0" width="52.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.0" y="750.0">org/r..</text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.07%)</title><rect x="1123.0" y="723.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.0" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (60 samples, 4.37%)</title><rect x="1123.8" y="723.0" width="51.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.8" y="734.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (40 samples, 2.91%)</title><rect x="1124.7" y="707.0" width="34.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1127.7" y="718.0">Ja..</text>
</g>
<g>
<title>_init (1 samples, 0.07%)</title><rect x="1124.7" y="691.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1127.7" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (39 samples, 2.84%)</title><rect x="1125.5" y="691.0" width="33.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1128.5" y="702.0">ro..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1126.4" y="675.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1129.4" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1126.4" y="659.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1129.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (36 samples, 2.62%)</title><rect x="1127.3" y="675.0" width="30.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1130.3" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (36 samples, 2.62%)</title><rect x="1127.3" y="659.0" width="30.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1130.3" y="670.0">ro..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (36 samples, 2.62%)</title><rect x="1127.3" y="643.0" width="30.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.3" y="654.0">ro..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.07%)</title><rect x="1127.3" y="627.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1130.3" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1127.3" y="611.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1130.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1127.3" y="595.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1130.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1127.3" y="579.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1130.3" y="590.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.07%)</title><rect x="1128.1" y="627.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1131.1" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1128.1" y="611.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1131.1" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1128.1" y="595.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1131.1" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1128.1" y="579.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1131.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (33 samples, 2.40%)</title><rect x="1129.0" y="627.0" width="28.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.0" y="638.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (32 samples, 2.33%)</title><rect x="1129.0" y="611.0" width="27.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.0" y="622.0">r..</text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.29%)</title><rect x="1130.7" y="595.0" width="3.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1133.7" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.22%)</title><rect x="1131.6" y="579.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1134.6" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.22%)</title><rect x="1131.6" y="563.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1134.6" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.07%)</title><rect x="1133.3" y="547.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1136.3" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.07%)</title><rect x="1133.3" y="531.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1136.3" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="1133.3" y="515.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1136.3" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="1133.3" y="499.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1136.3" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.07%)</title><rect x="1134.1" y="595.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1137.1" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1134.1" y="579.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1137.1" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1134.1" y="563.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1134.1" y="547.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1137.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.22%)</title><rect x="1135.0" y="595.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1138.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (2 samples, 0.15%)</title><rect x="1135.0" y="579.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.15%)</title><rect x="1135.0" y="563.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.0" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (1 samples, 0.07%)</title><rect x="1135.0" y="547.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1138.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.07%)</title><rect x="1135.9" y="547.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.9" y="558.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.07%)</title><rect x="1135.9" y="531.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1138.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (1 samples, 0.07%)</title><rect x="1136.7" y="579.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1139.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.07%)</title><rect x="1137.6" y="595.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1140.6" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.07%)</title><rect x="1137.6" y="579.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1140.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.07%)</title><rect x="1138.4" y="595.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1141.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1138.4" y="579.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1141.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1138.4" y="563.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1138.4" y="547.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1141.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (15 samples, 1.09%)</title><rect x="1139.3" y="595.0" width="12.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1142.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="1139.3" y="579.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1142.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (14 samples, 1.02%)</title><rect x="1140.2" y="579.0" width="12.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 0.87%)</title><rect x="1140.2" y="563.0" width="10.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 0.87%)</title><rect x="1140.2" y="547.0" width="10.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1143.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (12 samples, 0.87%)</title><rect x="1140.2" y="531.0" width="10.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1143.2" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (1 samples, 0.07%)</title><rect x="1140.2" y="515.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1143.2" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.07%)</title><rect x="1140.2" y="499.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1143.2" y="510.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (10 samples, 0.73%)</title><rect x="1141.0" y="515.0" width="8.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.0" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (6 samples, 0.44%)</title><rect x="1143.6" y="499.0" width="5.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1146.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6216326109514633815.so (2 samples, 0.15%)</title><rect x="1146.2" y="483.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1149.2" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.07%)</title><rect x="1146.2" y="467.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1149.2" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1146.2" y="451.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1149.2" y="462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1146.2" y="435.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1149.2" y="446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1146.2" y="419.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1149.2" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.07%)</title><rect x="1147.0" y="467.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.0" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1147.0" y="451.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1150.0" y="462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1147.0" y="435.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1150.0" y="446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1147.0" y="419.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.0" y="430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1147.9" y="483.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.9" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1147.9" y="467.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.9" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1147.9" y="451.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.9" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.07%)</title><rect x="1148.7" y="499.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.7" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.07%)</title><rect x="1149.6" y="515.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (1 samples, 0.07%)</title><rect x="1149.6" y="499.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.07%)</title><rect x="1150.5" y="563.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1153.5" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1151.3" y="563.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1154.3" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1151.3" y="547.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1154.3" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1151.3" y="531.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1154.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.07%)</title><rect x="1152.2" y="595.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.07%)</title><rect x="1153.0" y="595.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.15%)</title><rect x="1153.9" y="595.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.15%)</title><rect x="1153.9" y="579.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.9" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.07%)</title><rect x="1153.9" y="563.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1156.9" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1154.8" y="563.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1157.8" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1154.8" y="547.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1157.8" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1154.8" y="531.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1157.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() (1 samples, 0.07%)</title><rect x="1155.6" y="595.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.6" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1155.6" y="579.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1158.6" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1155.6" y="563.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1158.6" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1155.6" y="547.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1158.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.07%)</title><rect x="1156.5" y="611.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.07%)</title><rect x="1157.3" y="627.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.07%)</title><rect x="1158.2" y="675.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.17%)</title><rect x="1159.1" y="707.0" width="13.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1162.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.07%)</title><rect x="1159.1" y="691.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1162.1" y="702.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.07%)</title><rect x="1159.1" y="675.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.1" y="686.0"></text>
</g>
<g>
<title>write (15 samples, 1.09%)</title><rect x="1159.9" y="691.0" width="12.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1162.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 1.09%)</title><rect x="1159.9" y="675.0" width="12.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1162.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 1.09%)</title><rect x="1159.9" y="659.0" width="12.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1162.9" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (14 samples, 1.02%)</title><rect x="1160.8" y="643.0" width="12.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1163.8" y="654.0"></text>
</g>
<g>
<title>ksys_write (14 samples, 1.02%)</title><rect x="1160.8" y="627.0" width="12.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1163.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="1161.6" y="611.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1164.6" y="622.0"></text>
</g>
<g>
<title>vfs_write (12 samples, 0.87%)</title><rect x="1162.5" y="611.0" width="10.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1165.5" y="622.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.80%)</title><rect x="1162.5" y="595.0" width="9.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1165.5" y="606.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.80%)</title><rect x="1162.5" y="579.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1165.5" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (11 samples, 0.80%)</title><rect x="1162.5" y="563.0" width="9.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1165.5" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (10 samples, 0.73%)</title><rect x="1162.5" y="547.0" width="8.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1165.5" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.07%)</title><rect x="1162.5" y="531.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1165.5" y="542.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.07%)</title><rect x="1163.4" y="531.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1166.4" y="542.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.07%)</title><rect x="1163.4" y="515.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1166.4" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.07%)</title><rect x="1163.4" y="499.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1166.4" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.07%)</title><rect x="1163.4" y="483.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1166.4" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.07%)</title><rect x="1163.4" y="467.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1166.4" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.07%)</title><rect x="1163.4" y="451.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1166.4" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.07%)</title><rect x="1163.4" y="435.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1166.4" y="446.0"></text>
</g>
<g>
<title>generic_perform_write (8 samples, 0.58%)</title><rect x="1164.2" y="531.0" width="6.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.2" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.15%)</title><rect x="1164.2" y="515.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1167.2" y="526.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.07%)</title><rect x="1165.1" y="499.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1168.1" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_end (6 samples, 0.44%)</title><rect x="1165.9" y="515.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1168.9" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.07%)</title><rect x="1165.9" y="499.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1168.9" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.07%)</title><rect x="1165.9" y="483.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1168.9" y="494.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.07%)</title><rect x="1165.9" y="467.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1168.9" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.07%)</title><rect x="1165.9" y="451.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1168.9" y="462.0"></text>
</g>
<g>
<title>generic_write_end (5 samples, 0.36%)</title><rect x="1166.8" y="499.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1169.8" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (5 samples, 0.36%)</title><rect x="1166.8" y="483.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1169.8" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (5 samples, 0.36%)</title><rect x="1166.8" y="467.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1169.8" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (5 samples, 0.36%)</title><rect x="1166.8" y="451.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1169.8" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.07%)</title><rect x="1166.8" y="435.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1169.8" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 0.29%)</title><rect x="1167.7" y="435.0" width="3.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1170.7" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.22%)</title><rect x="1167.7" y="419.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1170.7" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.22%)</title><rect x="1167.7" y="403.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1170.7" y="414.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.07%)</title><rect x="1168.5" y="387.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1171.5" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.07%)</title><rect x="1168.5" y="371.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1171.5" y="382.0"></text>
</g>
<g>
<title>map_id_up (1 samples, 0.07%)</title><rect x="1169.4" y="387.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1172.4" y="398.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.07%)</title><rect x="1170.2" y="419.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1173.2" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.07%)</title><rect x="1170.2" y="403.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1173.2" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.07%)</title><rect x="1170.2" y="387.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1173.2" y="398.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.07%)</title><rect x="1170.2" y="371.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1173.2" y="382.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.07%)</title><rect x="1170.2" y="355.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1173.2" y="366.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.07%)</title><rect x="1171.1" y="547.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1174.1" y="558.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.07%)</title><rect x="1172.0" y="595.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1175.0" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.22%)</title><rect x="1172.8" y="707.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1175.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.22%)</title><rect x="1172.8" y="691.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1175.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.22%)</title><rect x="1172.8" y="675.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1175.8" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.22%)</title><rect x="1172.8" y="659.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1175.8" y="670.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.22%)</title><rect x="1172.8" y="643.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1175.8" y="654.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.22%)</title><rect x="1172.8" y="627.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1175.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.22%)</title><rect x="1172.8" y="611.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1175.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.22%)</title><rect x="1172.8" y="595.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1175.8" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.22%)</title><rect x="1172.8" y="579.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1175.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.getArray (1 samples, 0.07%)</title><rect x="1175.4" y="739.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.4" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.07%)</title><rect x="1175.4" y="723.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1178.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1175.4" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="1175.4" y="691.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1178.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.15%)</title><rect x="1176.2" y="835.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.2" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.15%)</title><rect x="1176.2" y="819.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1179.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.15%)</title><rect x="1176.2" y="803.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1179.2" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="1177.1" y="787.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1180.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 0.66%)</title><rect x="1178.0" y="851.0" width="7.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1181.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 0.66%)</title><rect x="1178.0" y="835.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1181.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.29%)</title><rect x="1178.0" y="819.0" width="3.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1181.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.29%)</title><rect x="1178.0" y="803.0" width="3.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1181.0" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.29%)</title><rect x="1178.0" y="787.0" width="3.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1181.0" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.22%)</title><rect x="1178.8" y="771.0" width="2.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1181.8" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1179.7" y="755.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1182.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.07%)</title><rect x="1180.5" y="755.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1183.5" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="1180.5" y="739.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1183.5" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.07%)</title><rect x="1180.5" y="723.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1183.5" y="734.0"></text>
</g>
<g>
<title>__GI___recv (5 samples, 0.36%)</title><rect x="1181.4" y="819.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1184.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.36%)</title><rect x="1181.4" y="803.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1184.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.36%)</title><rect x="1181.4" y="787.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 0.36%)</title><rect x="1181.4" y="771.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1184.4" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (5 samples, 0.36%)</title><rect x="1181.4" y="755.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1184.4" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.29%)</title><rect x="1181.4" y="739.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1184.4" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (4 samples, 0.29%)</title><rect x="1181.4" y="723.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1184.4" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.29%)</title><rect x="1181.4" y="707.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1184.4" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.15%)</title><rect x="1181.4" y="691.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1184.4" y="702.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.15%)</title><rect x="1181.4" y="675.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1184.4" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.07%)</title><rect x="1181.4" y="659.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.4" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.07%)</title><rect x="1182.3" y="659.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1185.3" y="670.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.07%)</title><rect x="1183.1" y="691.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1186.1" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.07%)</title><rect x="1184.0" y="691.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1187.0" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.07%)</title><rect x="1184.0" y="675.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1187.0" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.07%)</title><rect x="1184.0" y="659.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1187.0" y="670.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.07%)</title><rect x="1184.0" y="643.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1187.0" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.07%)</title><rect x="1184.0" y="627.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1187.0" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.07%)</title><rect x="1184.8" y="739.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1187.8" y="750.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.07%)</title><rect x="1184.8" y="723.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1187.8" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.07%)</title><rect x="1184.8" y="707.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1187.8" y="718.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.07%)</title><rect x="1184.8" y="691.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1187.8" y="702.0"></text>
</g>
<g>
<title>[tid=5555] (1 samples, 0.07%)</title><rect x="1185.7" y="915.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1188.7" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.07%)</title><rect x="1185.7" y="899.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1188.7" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1185.7" y="883.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1188.7" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1185.7" y="867.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1188.7" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1185.7" y="851.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1188.7" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1185.7" y="835.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1188.7" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1185.7" y="819.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1188.7" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1185.7" y="803.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1188.7" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1185.7" y="787.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1188.7" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1185.7" y="771.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1188.7" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1185.7" y="755.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1188.7" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1185.7" y="739.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1188.7" y="750.0"></text>
</g>
<g>
<title>[tid=5571] (1 samples, 0.07%)</title><rect x="1186.6" y="915.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1189.6" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.07%)</title><rect x="1186.6" y="899.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1189.6" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.07%)</title><rect x="1186.6" y="883.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1189.6" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.07%)</title><rect x="1186.6" y="867.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1189.6" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.07%)</title><rect x="1186.6" y="851.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1189.6" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.07%)</title><rect x="1186.6" y="835.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1189.6" y="846.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.07%)</title><rect x="1186.6" y="819.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1189.6" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.07%)</title><rect x="1186.6" y="803.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1189.6" y="814.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="1186.6" y="787.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1189.6" y="798.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="1186.6" y="771.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1189.6" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.07%)</title><rect x="1186.6" y="755.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1189.6" y="766.0"></text>
</g>
<g>
<title>[tid=5644] (1 samples, 0.07%)</title><rect x="1187.4" y="915.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1190.4" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.07%)</title><rect x="1187.4" y="899.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1190.4" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1187.4" y="883.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1190.4" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1187.4" y="867.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1190.4" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1187.4" y="851.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1190.4" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1187.4" y="835.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1190.4" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1187.4" y="819.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1190.4" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1187.4" y="803.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1190.4" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1187.4" y="787.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1190.4" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1187.4" y="771.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1190.4" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1187.4" y="755.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1187.4" y="739.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>[tid=5645] (1 samples, 0.07%)</title><rect x="1188.3" y="915.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1191.3" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.07%)</title><rect x="1188.3" y="899.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1191.3" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1188.3" y="883.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1191.3" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1188.3" y="867.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1191.3" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1188.3" y="851.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1191.3" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1188.3" y="835.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1191.3" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1188.3" y="819.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1191.3" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1188.3" y="803.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1191.3" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1188.3" y="787.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1191.3" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1188.3" y="771.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1191.3" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1188.3" y="755.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1191.3" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1188.3" y="739.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>[tid=5646] (1 samples, 0.07%)</title><rect x="1189.1" y="915.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1192.1" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.07%)</title><rect x="1189.1" y="899.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1192.1" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="883.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1192.1" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="867.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.1" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="851.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.1" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="835.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1192.1" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="819.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1192.1" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="803.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1192.1" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="787.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1192.1" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="771.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.1" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="755.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1192.1" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="739.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1192.1" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="723.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1192.1" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.07%)</title><rect x="1189.1" y="707.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1192.1" y="718.0"></text>
</g>
</g>
</svg>
