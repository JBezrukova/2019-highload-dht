<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (3,106 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=55629] (741 samples, 23.86%)</title><rect x="10.0" y="915.0" width="281.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.0" y="926.0">[NIO Selector #0 tid=55629]</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="10.0" y="899.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="10.0" y="883.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="10.0" y="867.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="10.0" y="851.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="10.0" y="835.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="10.0" y="819.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="10.0" y="803.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="10.0" y="787.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.06%)</title><rect x="10.4" y="899.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.4" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.06%)</title><rect x="10.4" y="883.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.4" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (738 samples, 23.76%)</title><rect x="11.1" y="899.0" width="280.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.1" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="11.9" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.9" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (123 samples, 3.96%)</title><rect x="12.3" y="883.0" width="46.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="15.3" y="894.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (122 samples, 3.93%)</title><rect x="12.7" y="867.0" width="46.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="15.7" y="878.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="14.2" y="851.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="17.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 3.57%)</title><rect x="14.6" y="851.0" width="42.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="17.6" y="862.0">[unk..</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="14.6" y="835.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="17.6" y="846.0"></text>
</g>
<g>
<title>epoll_wait (110 samples, 3.54%)</title><rect x="14.9" y="835.0" width="41.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="17.9" y="846.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (107 samples, 3.44%)</title><rect x="16.1" y="819.0" width="40.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.1" y="830.0">ent..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="16.1" y="803.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="19.1" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (106 samples, 3.41%)</title><rect x="16.5" y="803.0" width="40.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="19.5" y="814.0">do_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (105 samples, 3.38%)</title><rect x="16.8" y="787.0" width="39.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.8" y="798.0">__x..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="16.8" y="771.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.8" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (103 samples, 3.32%)</title><rect x="17.2" y="771.0" width="39.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="20.2" y="782.0">do_..</text>
</g>
<g>
<title>__fdget (4 samples, 0.13%)</title><rect x="17.2" y="755.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="20.2" y="766.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.13%)</title><rect x="17.2" y="739.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="20.2" y="750.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.13%)</title><rect x="17.2" y="723.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="20.2" y="734.0"></text>
</g>
<g>
<title>ep_poll (98 samples, 3.16%)</title><rect x="18.7" y="755.0" width="37.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="21.7" y="766.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (55 samples, 1.77%)</title><rect x="19.9" y="739.0" width="20.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="22.9" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.13%)</title><rect x="38.5" y="723.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="41.5" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.06%)</title><rect x="39.3" y="707.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="42.3" y="718.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.06%)</title><rect x="39.3" y="691.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="42.3" y="702.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.06%)</title><rect x="39.3" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="42.3" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="39.6" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="42.6" y="670.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.06%)</title><rect x="40.0" y="723.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="43.0" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="40.0" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="43.0" y="718.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="40.0" y="691.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="43.0" y="702.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="40.4" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.4" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (40 samples, 1.29%)</title><rect x="40.8" y="739.0" width="15.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="43.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (40 samples, 1.29%)</title><rect x="40.8" y="723.0" width="15.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.8" y="734.0"></text>
</g>
<g>
<title>schedule (40 samples, 1.29%)</title><rect x="40.8" y="707.0" width="15.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="43.8" y="718.0"></text>
</g>
<g>
<title>__schedule (40 samples, 1.29%)</title><rect x="40.8" y="691.0" width="15.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.8" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (39 samples, 1.26%)</title><rect x="41.2" y="675.0" width="14.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="44.2" y="686.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.03%)</title><rect x="56.0" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="59.0" y="766.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.03%)</title><rect x="56.3" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.3" y="782.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.16%)</title><rect x="56.7" y="851.0" width="1.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="59.7" y="862.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.06%)</title><rect x="57.9" y="835.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="60.9" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="58.6" y="851.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="61.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="58.6" y="835.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="61.6" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="58.6" y="819.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="61.6" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="58.6" y="803.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="61.6" y="814.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="58.6" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="61.6" y="798.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="58.6" y="771.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.6" y="782.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="58.6" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.6" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="58.6" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="61.6" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="58.6" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="61.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (612 samples, 19.70%)</title><rect x="59.0" y="883.0" width="232.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.0" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (612 samples, 19.70%)</title><rect x="59.0" y="867.0" width="232.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.0" y="878.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (563 samples, 18.13%)</title><rect x="59.0" y="851.0" width="213.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.0" y="862.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (557 samples, 17.93%)</title><rect x="59.8" y="835.0" width="211.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.8" y="846.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (557 samples, 17.93%)</title><rect x="59.8" y="819.0" width="211.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.8" y="830.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (553 samples, 17.80%)</title><rect x="59.8" y="803.0" width="210.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.8" y="814.0">RequestHandler1_entity.handl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (435 samples, 14.01%)</title><rect x="59.8" y="787.0" width="165.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.8" y="798.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (435 samples, 14.01%)</title><rect x="59.8" y="771.0" width="165.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.8" y="782.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/net/Session.write (435 samples, 14.01%)</title><rect x="59.8" y="755.0" width="165.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.8" y="766.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/net/Session.write (434 samples, 13.97%)</title><rect x="60.1" y="739.0" width="164.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.1" y="750.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.10%)</title><rect x="61.3" y="723.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="64.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (428 samples, 13.78%)</title><rect x="62.4" y="723.0" width="162.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.4" y="734.0">one/nio/net/Session$A..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (427 samples, 13.75%)</title><rect x="62.8" y="707.0" width="162.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.8" y="718.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.06%)</title><rect x="63.6" y="691.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="66.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="63.9" y="675.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="66.9" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="63.9" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="66.9" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="63.9" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="66.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.13%)</title><rect x="64.3" y="691.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="67.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.13%)</title><rect x="64.3" y="675.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="67.3" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="64.3" y="659.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="67.3" y="670.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="64.3" y="643.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="67.3" y="654.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="64.7" y="659.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="67.7" y="670.0"></text>
</g>
<g>
<title>__send (2 samples, 0.06%)</title><rect x="65.1" y="659.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="68.1" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="65.5" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="68.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="65.5" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="68.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="65.5" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="68.5" y="622.0"></text>
</g>
<g>
<title>__send (419 samples, 13.49%)</title><rect x="65.8" y="691.0" width="159.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="68.8" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (414 samples, 13.33%)</title><rect x="67.4" y="675.0" width="157.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="70.4" y="686.0">entry_SYSCALL_64_aft..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.03%)</title><rect x="67.4" y="659.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="70.4" y="670.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="67.7" y="659.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.7" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (412 samples, 13.26%)</title><rect x="68.1" y="659.0" width="156.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="71.1" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (392 samples, 12.62%)</title><rect x="70.4" y="643.0" width="148.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="73.4" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (391 samples, 12.59%)</title><rect x="70.4" y="627.0" width="148.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="73.4" y="638.0">__sys_sendto</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.03%)</title><rect x="71.2" y="611.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="74.2" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="71.5" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="74.5" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (384 samples, 12.36%)</title><rect x="71.9" y="611.0" width="145.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.9" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (381 samples, 12.27%)</title><rect x="71.9" y="595.0" width="144.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.9" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (378 samples, 12.17%)</title><rect x="72.7" y="579.0" width="143.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="75.7" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="72.7" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="75.7" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="73.1" y="563.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.1" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="73.4" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="76.4" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="73.8" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.8" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.03%)</title><rect x="74.2" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="77.2" y="574.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.03%)</title><rect x="74.6" y="563.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="77.6" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="75.0" y="563.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="78.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (371 samples, 11.94%)</title><rect x="75.3" y="563.0" width="141.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="78.3" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.06%)</title><rect x="75.7" y="547.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="78.7" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="76.5" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="79.5" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="76.9" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="79.9" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="76.9" y="531.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="79.9" y="542.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.03%)</title><rect x="77.2" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.2" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.26%)</title><rect x="77.6" y="547.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="80.6" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.19%)</title><rect x="77.6" y="531.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="80.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="78.0" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="81.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.06%)</title><rect x="78.4" y="515.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="81.4" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.06%)</title><rect x="78.4" y="499.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="81.4" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.06%)</title><rect x="78.4" y="483.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="81.4" y="494.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="79.1" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.1" y="526.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="79.5" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.5" y="526.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.06%)</title><rect x="79.9" y="531.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.9" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.10%)</title><rect x="80.7" y="547.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.7" y="558.0"></text>
</g>
<g>
<title>tcp_push (348 samples, 11.20%)</title><rect x="81.8" y="547.0" width="132.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="84.8" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (348 samples, 11.20%)</title><rect x="81.8" y="531.0" width="132.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="84.8" y="542.0">__tcp_push_pendi..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (1 samples, 0.03%)</title><rect x="81.8" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="84.8" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (347 samples, 11.17%)</title><rect x="82.2" y="515.0" width="131.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="85.2" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (333 samples, 10.72%)</title><rect x="82.6" y="499.0" width="126.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="85.6" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (331 samples, 10.66%)</title><rect x="83.3" y="483.0" width="125.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="86.3" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (331 samples, 10.66%)</title><rect x="83.3" y="467.0" width="125.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="86.3" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="83.3" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="86.3" y="462.0"></text>
</g>
<g>
<title>ip_local_out (327 samples, 10.53%)</title><rect x="83.7" y="451.0" width="124.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="86.7" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="83.7" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="86.7" y="446.0"></text>
</g>
<g>
<title>ip_output (326 samples, 10.50%)</title><rect x="84.1" y="435.0" width="123.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="87.1" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (326 samples, 10.50%)</title><rect x="84.1" y="419.0" width="123.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="87.1" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="84.1" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="87.1" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.06%)</title><rect x="84.5" y="403.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="87.5" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (323 samples, 10.40%)</title><rect x="85.2" y="403.0" width="122.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="88.2" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (311 samples, 10.01%)</title><rect x="86.0" y="387.0" width="118.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="89.0" y="398.0">__local_bh_ena..</text>
</g>
<g>
<title>do_softirq.part.21 (311 samples, 10.01%)</title><rect x="86.0" y="371.0" width="118.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="89.0" y="382.0">do_softirq.par..</text>
</g>
<g>
<title>do_softirq_own_stack (309 samples, 9.95%)</title><rect x="86.7" y="355.0" width="117.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="89.7" y="366.0">do_softirq_own..</text>
</g>
<g>
<title>__softirqentry_text_start (308 samples, 9.92%)</title><rect x="86.7" y="339.0" width="117.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="89.7" y="350.0">__softirqentry..</text>
</g>
<g>
<title>net_rx_action (308 samples, 9.92%)</title><rect x="86.7" y="323.0" width="117.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="89.7" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (307 samples, 9.88%)</title><rect x="87.1" y="307.0" width="116.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="90.1" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (305 samples, 9.82%)</title><rect x="87.9" y="291.0" width="115.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="90.9" y="302.0">__netif_receiv..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="87.9" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="90.9" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (304 samples, 9.79%)</title><rect x="88.3" y="275.0" width="115.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="91.3" y="286.0">__netif_receiv..</text>
</g>
<g>
<title>ip_rcv (304 samples, 9.79%)</title><rect x="88.3" y="259.0" width="115.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="91.3" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="88.6" y="243.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="91.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (302 samples, 9.72%)</title><rect x="89.0" y="243.0" width="114.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="92.0" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (300 samples, 9.66%)</title><rect x="89.4" y="227.0" width="114.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.4" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (300 samples, 9.66%)</title><rect x="89.4" y="211.0" width="114.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="92.4" y="222.0">ip_local_deliv..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (300 samples, 9.66%)</title><rect x="89.4" y="195.0" width="114.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="92.4" y="206.0">ip_protocol_de..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.10%)</title><rect x="89.8" y="179.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="92.8" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (296 samples, 9.53%)</title><rect x="90.9" y="179.0" width="112.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="93.9" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.10%)</title><rect x="92.4" y="163.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="95.4" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="93.2" y="147.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="96.2" y="158.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="93.6" y="163.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="96.6" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.06%)</title><rect x="94.0" y="163.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="97.0" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="94.0" y="147.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="97.0" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="94.3" y="147.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="97.3" y="158.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.06%)</title><rect x="94.7" y="163.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="97.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="95.5" y="163.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="98.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (283 samples, 9.11%)</title><rect x="95.9" y="163.0" width="107.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="98.9" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.03%)</title><rect x="95.9" y="147.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="98.9" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (282 samples, 9.08%)</title><rect x="96.2" y="147.0" width="107.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="99.2" y="158.0">tcp_rcv_estab..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.03%)</title><rect x="97.0" y="131.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="100.0" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="97.0" y="115.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.0" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="97.4" y="131.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="100.4" y="142.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.29%)</title><rect x="97.8" y="131.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="100.8" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.19%)</title><rect x="98.9" y="115.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="101.9" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="98.9" y="99.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="101.9" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="98.9" y="83.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="101.9" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="98.9" y="67.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="101.9" y="78.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.06%)</title><rect x="99.3" y="83.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="102.3" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="99.3" y="67.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="102.3" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="99.3" y="51.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="102.3" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="99.7" y="67.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.7" y="78.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.06%)</title><rect x="100.0" y="99.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.0" y="110.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="100.8" y="99.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="103.8" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.03%)</title><rect x="101.2" y="131.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="104.2" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (266 samples, 8.56%)</title><rect x="101.6" y="131.0" width="101.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="104.6" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.03%)</title><rect x="102.3" y="115.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="105.3" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (262 samples, 8.44%)</title><rect x="102.7" y="115.0" width="99.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.7" y="126.0">sock_def_rea..</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="103.1" y="99.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="106.1" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (260 samples, 8.37%)</title><rect x="103.5" y="99.0" width="98.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="106.5" y="110.0">__wake_up_sy..</text>
</g>
<g>
<title>__wake_up_common_lock (258 samples, 8.31%)</title><rect x="103.5" y="83.0" width="98.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="106.5" y="94.0">__wake_up_co..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (258 samples, 8.31%)</title><rect x="103.5" y="67.0" width="98.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="106.5" y="78.0">_raw_spin_un..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.06%)</title><rect x="201.5" y="83.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="204.5" y="94.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="202.2" y="115.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="205.2" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="202.6" y="131.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.6" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="203.0" y="131.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="206.0" y="142.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="203.4" y="227.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="206.4" y="238.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="203.8" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="206.8" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (10 samples, 0.32%)</title><rect x="204.1" y="387.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="207.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (10 samples, 0.32%)</title><rect x="204.1" y="371.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="207.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.13%)</title><rect x="205.7" y="355.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="208.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.13%)</title><rect x="205.7" y="339.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="208.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.06%)</title><rect x="206.0" y="323.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="209.0" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.06%)</title><rect x="206.0" y="307.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="209.0" y="318.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="206.8" y="323.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="209.8" y="334.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="207.2" y="355.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="210.2" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="207.6" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="210.6" y="366.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="207.9" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="210.9" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.06%)</title><rect x="208.3" y="451.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="211.3" y="462.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (4 samples, 0.13%)</title><rect x="209.1" y="499.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="212.1" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="210.6" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="213.6" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="210.6" y="483.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="213.6" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="211.0" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="214.0" y="510.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.03%)</title><rect x="211.4" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="214.4" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="211.7" y="499.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="214.7" y="510.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="211.7" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="214.7" y="494.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="212.1" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="215.1" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.10%)</title><rect x="212.5" y="499.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="215.5" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="213.6" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="216.6" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.19%)</title><rect x="214.0" y="547.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="217.0" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="214.4" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="217.4" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.13%)</title><rect x="214.8" y="531.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="217.8" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="215.9" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="218.9" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.03%)</title><rect x="216.3" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.3" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.10%)</title><rect x="216.7" y="595.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="219.7" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.10%)</title><rect x="216.7" y="579.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="219.7" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="216.7" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="219.7" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.06%)</title><rect x="217.1" y="563.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="220.1" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.06%)</title><rect x="217.1" y="547.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="220.1" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.06%)</title><rect x="217.1" y="531.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.1" y="542.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.03%)</title><rect x="217.4" y="515.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="220.4" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.10%)</title><rect x="217.8" y="611.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="220.8" y="622.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.10%)</title><rect x="217.8" y="595.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="220.8" y="606.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.10%)</title><rect x="217.8" y="579.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="220.8" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="218.6" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="221.6" y="574.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.03%)</title><rect x="219.0" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="222.0" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (14 samples, 0.45%)</title><rect x="219.3" y="643.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="222.3" y="654.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.45%)</title><rect x="219.3" y="627.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="222.3" y="638.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.45%)</title><rect x="219.3" y="611.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="222.3" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.45%)</title><rect x="219.3" y="595.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="222.3" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="224.6" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="227.6" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="224.6" y="659.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="227.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="224.6" y="643.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="227.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="225.0" y="787.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="225.0" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="225.0" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.0" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="225.0" y="739.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="228.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.06%)</title><rect x="225.4" y="771.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="228.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="225.8" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="225.8" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="228.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="225.8" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (115 samples, 3.70%)</title><rect x="226.2" y="787.0" width="43.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.2" y="798.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="226.2" y="771.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="226.2" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="226.2" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="229.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="226.2" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="226.5" y="771.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="226.5" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="226.5" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="226.5" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="226.5" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="226.5" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.get (112 samples, 3.61%)</title><rect x="226.9" y="771.0" width="42.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.9" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.get (112 samples, 3.61%)</title><rect x="226.9" y="755.0" width="42.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.9" y="766.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="227.3" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/745160567.invoke (1 samples, 0.03%)</title><rect x="227.3" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="230.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/905544614.invoke (1 samples, 0.03%)</title><rect x="227.3" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.3" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="227.3" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="227.3" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="227.3" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.3" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="227.7" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="227.7" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="227.7" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="227.7" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.7" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="227.7" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="227.7" y="659.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="227.7" y="643.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.7" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.06%)</title><rect x="227.7" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.7" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="227.7" y="611.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="230.7" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.03%)</title><rect x="228.1" y="611.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.1" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (106 samples, 3.41%)</title><rect x="228.4" y="739.0" width="40.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.4" y="750.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (106 samples, 3.41%)</title><rect x="228.4" y="723.0" width="40.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.4" y="734.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (99 samples, 3.19%)</title><rect x="228.8" y="707.0" width="37.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="231.8" y="718.0">Jav..</text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.03%)</title><rect x="228.8" y="691.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="231.8" y="702.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (3 samples, 0.10%)</title><rect x="229.2" y="691.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="232.2" y="702.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="230.3" y="691.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="233.3" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.03%)</title><rect x="230.7" y="691.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="233.7" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.06%)</title><rect x="231.1" y="691.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="234.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.03%)</title><rect x="231.9" y="691.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="234.9" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (88 samples, 2.83%)</title><rect x="232.2" y="691.0" width="33.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="235.2" y="702.0">ro..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.10%)</title><rect x="232.2" y="675.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="235.2" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="233.0" y="659.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="236.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (73 samples, 2.35%)</title><rect x="233.4" y="675.0" width="27.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="236.4" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.03%)</title><rect x="233.4" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="236.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (72 samples, 2.32%)</title><rect x="233.8" y="659.0" width="27.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="236.8" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (71 samples, 2.29%)</title><rect x="234.1" y="643.0" width="27.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="237.1" y="654.0">r..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="234.1" y="627.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="237.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.03%)</title><rect x="234.5" y="627.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="237.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.03%)</title><rect x="234.9" y="627.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="237.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.03%)</title><rect x="235.3" y="627.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="238.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (62 samples, 2.00%)</title><rect x="235.7" y="627.0" width="23.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="238.7" y="638.0">r..</text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.16%)</title><rect x="236.8" y="611.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="239.8" y="622.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="238.7" y="611.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="241.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.10%)</title><rect x="239.1" y="611.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="242.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.03%)</title><rect x="239.5" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="242.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="239.5" y="579.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="242.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="239.8" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="242.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="239.8" y="579.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="242.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.10%)</title><rect x="240.2" y="611.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="243.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.06%)</title><rect x="240.2" y="595.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="243.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="240.6" y="579.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="243.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="241.0" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="244.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (42 samples, 1.35%)</title><rect x="241.4" y="611.0" width="15.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="244.4" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (37 samples, 1.19%)</title><rect x="242.5" y="595.0" width="14.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="245.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (33 samples, 1.06%)</title><rect x="242.9" y="579.0" width="12.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="245.9" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="248.6" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="251.6" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="249.0" y="563.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="252.0" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="249.3" y="563.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="252.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 0.45%)</title><rect x="249.7" y="563.0" width="5.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="252.7" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.03%)</title><rect x="251.6" y="547.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="254.6" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.06%)</title><rect x="252.0" y="547.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="255.0" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (3 samples, 0.10%)</title><rect x="252.8" y="547.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="255.8" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="253.9" y="547.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="256.9" y="558.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="254.7" y="547.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="257.7" y="558.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="254.7" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="257.7" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="254.7" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="257.7" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="254.7" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="257.7" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="254.7" y="483.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="257.7" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="255.0" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="258.0" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="255.0" y="547.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="258.0" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="255.0" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="258.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.10%)</title><rect x="255.4" y="579.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="258.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.06%)</title><rect x="256.6" y="595.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="259.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="257.3" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="260.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.03%)</title><rect x="257.7" y="611.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="260.7" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="257.7" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="260.7" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="257.7" y="579.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="260.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="257.7" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="260.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.03%)</title><rect x="258.1" y="611.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="261.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.06%)</title><rect x="258.5" y="611.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="261.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (4 samples, 0.13%)</title><rect x="259.2" y="627.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="262.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.03%)</title><rect x="260.7" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="263.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (12 samples, 0.39%)</title><rect x="261.1" y="675.0" width="4.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="264.1" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (12 samples, 0.39%)</title><rect x="261.1" y="659.0" width="4.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="264.1" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.26%)</title><rect x="262.3" y="643.0" width="3.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="265.3" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.19%)</title><rect x="263.0" y="627.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="266.0" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.13%)</title><rect x="263.0" y="611.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="266.0" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.06%)</title><rect x="263.4" y="595.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="266.4" y="606.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="264.2" y="595.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="267.2" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="264.5" y="611.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="267.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="264.9" y="595.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="267.9" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="264.9" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="267.9" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="264.9" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="267.9" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="265.3" y="643.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="268.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="265.3" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="268.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="265.3" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="268.3" y="622.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.03%)</title><rect x="265.7" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="268.7" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="265.7" y="675.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="268.7" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="265.7" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="268.7" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="265.7" y="643.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="268.7" y="654.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.03%)</title><rect x="266.1" y="691.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="269.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="266.4" y="707.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="269.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="266.4" y="691.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="269.4" y="702.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="266.4" y="675.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="269.4" y="686.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.06%)</title><rect x="266.8" y="675.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="269.8" y="686.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="267.6" y="707.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="270.6" y="718.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="268.0" y="707.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="271.0" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.03%)</title><rect x="268.3" y="707.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="271.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.convertValuesSubMinValue (2 samples, 0.06%)</title><rect x="268.7" y="739.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (1 samples, 0.03%)</title><rect x="269.5" y="771.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="269.5" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="272.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="269.5" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="269.5" y="723.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="272.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="269.5" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="272.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="269.5" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="269.5" y="675.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.5" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="269.5" y="659.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="272.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (3 samples, 0.10%)</title><rect x="269.9" y="803.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="271.0" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="271.0" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="271.0" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="274.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="271.0" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="271.0" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.10%)</title><rect x="271.4" y="835.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="271.8" y="819.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="271.8" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="271.8" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="271.8" y="771.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="272.1" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.1" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="272.1" y="803.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.1" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="272.1" y="787.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="275.1" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="272.1" y="771.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="275.1" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="272.1" y="755.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="275.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="272.5" y="835.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="272.9" y="851.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="275.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (48 samples, 1.55%)</title><rect x="273.3" y="851.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="276.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (48 samples, 1.55%)</title><rect x="273.3" y="835.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="276.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.42%)</title><rect x="273.7" y="819.0" width="4.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="276.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.42%)</title><rect x="273.7" y="803.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="276.7" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (13 samples, 0.42%)</title><rect x="273.7" y="787.0" width="4.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="276.7" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.29%)</title><rect x="274.0" y="771.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="277.0" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.10%)</title><rect x="276.3" y="755.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="279.3" y="766.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.10%)</title><rect x="277.5" y="771.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="280.5" y="782.0"></text>
</g>
<g>
<title>__GI___recv (33 samples, 1.06%)</title><rect x="278.6" y="819.0" width="12.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="281.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 1.06%)</title><rect x="278.6" y="803.0" width="12.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="281.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="278.6" y="787.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="281.6" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="279.0" y="787.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="282.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 1.00%)</title><rect x="279.4" y="787.0" width="11.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="282.4" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="280.5" y="771.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="283.5" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (27 samples, 0.87%)</title><rect x="280.9" y="771.0" width="10.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="283.9" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (26 samples, 0.84%)</title><rect x="280.9" y="755.0" width="9.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="283.9" y="766.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.03%)</title><rect x="281.3" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="284.3" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="281.6" y="739.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="284.6" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (19 samples, 0.61%)</title><rect x="282.0" y="739.0" width="7.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.0" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="282.0" y="723.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.0" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (15 samples, 0.48%)</title><rect x="282.4" y="723.0" width="5.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="285.4" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.06%)</title><rect x="282.8" y="707.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="285.8" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="283.5" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="286.5" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.35%)</title><rect x="283.9" y="707.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="286.9" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="283.9" y="691.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="286.9" y="702.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.06%)</title><rect x="283.9" y="675.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="286.9" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="283.9" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="286.9" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="284.3" y="659.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="287.3" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.16%)</title><rect x="284.7" y="691.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="287.7" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.06%)</title><rect x="284.7" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="287.7" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.10%)</title><rect x="285.4" y="675.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="288.4" y="686.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (3 samples, 0.10%)</title><rect x="285.4" y="659.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="288.4" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.13%)</title><rect x="286.6" y="691.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="289.6" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.13%)</title><rect x="286.6" y="675.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="289.6" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="286.6" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="289.6" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.10%)</title><rect x="287.0" y="659.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="290.0" y="670.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="287.0" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="290.0" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.06%)</title><rect x="287.3" y="643.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="290.3" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.06%)</title><rect x="287.3" y="627.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.3" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.10%)</title><rect x="288.1" y="723.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="291.1" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.06%)</title><rect x="288.5" y="707.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="291.5" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.06%)</title><rect x="288.5" y="691.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="291.5" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.06%)</title><rect x="288.5" y="675.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="291.5" y="686.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.03%)</title><rect x="288.9" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="291.9" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.13%)</title><rect x="289.2" y="739.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="292.2" y="750.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.10%)</title><rect x="289.2" y="723.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="292.2" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="289.2" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="292.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.06%)</title><rect x="289.6" y="707.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.6" y="718.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="290.0" y="691.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="293.0" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="290.4" y="723.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="293.4" y="734.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="290.8" y="755.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="293.8" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="291.1" y="819.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="294.1" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="291.1" y="803.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="294.1" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="291.1" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="294.1" y="798.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=55630] (745 samples, 23.99%)</title><rect x="291.5" y="915.0" width="283.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="294.5" y="926.0">[NIO Selector #1 tid=55630]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="291.5" y="899.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="294.5" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="291.5" y="883.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="294.5" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (744 samples, 23.95%)</title><rect x="291.9" y="899.0" width="282.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.9" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="292.7" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (116 samples, 3.73%)</title><rect x="293.0" y="883.0" width="44.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.0" y="894.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (114 samples, 3.67%)</title><rect x="293.8" y="867.0" width="43.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.8" y="878.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="294.2" y="851.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="297.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 3.54%)</title><rect x="294.6" y="851.0" width="41.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="297.6" y="862.0">[un..</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="294.6" y="835.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="297.6" y="846.0"></text>
</g>
<g>
<title>__restore_rt (1 samples, 0.03%)</title><rect x="294.9" y="835.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="297.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="294.9" y="819.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="297.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="294.9" y="803.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="297.9" y="814.0"></text>
</g>
<g>
<title>epoll_wait (108 samples, 3.48%)</title><rect x="295.3" y="835.0" width="41.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="298.3" y="846.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (105 samples, 3.38%)</title><rect x="296.5" y="819.0" width="39.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="299.5" y="830.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (105 samples, 3.38%)</title><rect x="296.5" y="803.0" width="39.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="299.5" y="814.0">do_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (100 samples, 3.22%)</title><rect x="298.0" y="787.0" width="38.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="301.0" y="798.0">__x..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="298.0" y="771.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="301.0" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (99 samples, 3.19%)</title><rect x="298.4" y="771.0" width="37.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="301.4" y="782.0">do_..</text>
</g>
<g>
<title>ep_poll (97 samples, 3.12%)</title><rect x="298.7" y="755.0" width="36.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="301.7" y="766.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (56 samples, 1.80%)</title><rect x="299.5" y="739.0" width="21.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="302.5" y="750.0">e..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="317.3" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="320.3" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.23%)</title><rect x="317.7" y="723.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="320.7" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (6 samples, 0.19%)</title><rect x="318.1" y="707.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="321.1" y="718.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.16%)</title><rect x="318.5" y="691.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="321.5" y="702.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="318.5" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="321.5" y="686.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.06%)</title><rect x="318.9" y="675.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="321.9" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.06%)</title><rect x="319.6" y="675.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="322.6" y="686.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="320.4" y="723.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="323.4" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="320.4" y="707.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="323.4" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="320.8" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="323.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (38 samples, 1.22%)</title><rect x="321.1" y="739.0" width="14.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="324.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (38 samples, 1.22%)</title><rect x="321.1" y="723.0" width="14.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="324.1" y="734.0"></text>
</g>
<g>
<title>schedule (37 samples, 1.19%)</title><rect x="321.5" y="707.0" width="14.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="324.5" y="718.0"></text>
</g>
<g>
<title>__schedule (37 samples, 1.19%)</title><rect x="321.5" y="691.0" width="14.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="324.5" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (37 samples, 1.19%)</title><rect x="321.5" y="675.0" width="14.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="324.5" y="686.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="335.6" y="755.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="338.6" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="336.0" y="787.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="339.0" y="798.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="336.0" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="339.0" y="782.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="336.0" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="339.0" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="336.0" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="339.0" y="750.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="336.3" y="851.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="339.3" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="336.3" y="835.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="339.3" y="846.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="336.7" y="851.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="339.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (625 samples, 20.12%)</title><rect x="337.1" y="883.0" width="237.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.1" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (625 samples, 20.12%)</title><rect x="337.1" y="867.0" width="237.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="340.1" y="878.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (588 samples, 18.93%)</title><rect x="337.1" y="851.0" width="223.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.1" y="862.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (577 samples, 18.58%)</title><rect x="338.2" y="835.0" width="219.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.2" y="846.0">one/nio/http/HttpSession.hand..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (577 samples, 18.58%)</title><rect x="338.2" y="819.0" width="219.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.2" y="830.0">one/nio/http/HttpServer.handl..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (575 samples, 18.51%)</title><rect x="338.2" y="803.0" width="218.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.2" y="814.0">RequestHandler1_entity.handle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (460 samples, 14.81%)</title><rect x="338.2" y="787.0" width="174.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="341.2" y="798.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (455 samples, 14.65%)</title><rect x="339.0" y="771.0" width="172.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="342.0" y="782.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.10%)</title><rect x="339.0" y="755.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.06%)</title><rect x="339.4" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.06%)</title><rect x="339.4" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.4" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="339.8" y="707.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="342.8" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (452 samples, 14.55%)</title><rect x="340.1" y="755.0" width="171.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.1" y="766.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>one/nio/net/Session.write (450 samples, 14.49%)</title><rect x="340.9" y="739.0" width="171.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="343.9" y="750.0">one/nio/net/Session.wr..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="340.9" y="723.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="343.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (449 samples, 14.46%)</title><rect x="341.3" y="723.0" width="170.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.3" y="734.0">one/nio/net/Session$Ar..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (449 samples, 14.46%)</title><rect x="341.3" y="707.0" width="170.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.3" y="718.0">one/nio/net/NativeSock..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="341.3" y="691.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="344.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="341.7" y="691.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="344.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="341.7" y="675.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="344.7" y="686.0"></text>
</g>
<g>
<title>__send (1 samples, 0.03%)</title><rect x="341.7" y="659.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="344.7" y="670.0"></text>
</g>
<g>
<title>__send (447 samples, 14.39%)</title><rect x="342.0" y="691.0" width="169.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="345.0" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (443 samples, 14.26%)</title><rect x="343.2" y="675.0" width="168.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="346.2" y="686.0">entry_SYSCALL_64_after..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="343.2" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="346.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (442 samples, 14.23%)</title><rect x="343.6" y="659.0" width="167.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="346.6" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (425 samples, 13.68%)</title><rect x="344.3" y="643.0" width="161.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="347.3" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (425 samples, 13.68%)</title><rect x="344.3" y="627.0" width="161.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="347.3" y="638.0">__sys_sendto</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.03%)</title><rect x="344.7" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="347.7" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (422 samples, 13.59%)</title><rect x="345.1" y="611.0" width="160.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="348.1" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.06%)</title><rect x="345.8" y="595.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="348.8" y="606.0"></text>
</g>
<g>
<title>inet_sendmsg (416 samples, 13.39%)</title><rect x="346.6" y="595.0" width="158.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="349.6" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (414 samples, 13.33%)</title><rect x="347.0" y="579.0" width="157.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="350.0" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="347.0" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="350.0" y="574.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="347.4" y="563.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="350.4" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="347.7" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="350.7" y="574.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="347.7" y="547.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="350.7" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="347.7" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="350.7" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="347.7" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="350.7" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="347.7" y="499.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="350.7" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (410 samples, 13.20%)</title><rect x="348.1" y="563.0" width="155.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="351.1" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="350.0" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="353.0" y="558.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.10%)</title><rect x="350.4" y="547.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="353.4" y="558.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="350.4" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="353.4" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.06%)</title><rect x="350.8" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="353.8" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="351.5" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="354.5" y="558.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.03%)</title><rect x="351.9" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.9" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.35%)</title><rect x="352.3" y="547.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="355.3" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.23%)</title><rect x="352.7" y="531.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="355.7" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="353.1" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.1" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.06%)</title><rect x="353.4" y="515.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="356.4" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="353.4" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="356.4" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="353.8" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="356.8" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="354.2" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="357.2" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="354.6" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="357.6" y="526.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="355.0" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="358.0" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.10%)</title><rect x="355.3" y="531.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="358.3" y="542.0"></text>
</g>
<g>
<title>tcp_push (388 samples, 12.49%)</title><rect x="356.5" y="547.0" width="147.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="359.5" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (388 samples, 12.49%)</title><rect x="356.5" y="531.0" width="147.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="359.5" y="542.0">__tcp_push_pending_..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="356.9" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="359.9" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="357.2" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="360.2" y="526.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (1 samples, 0.03%)</title><rect x="357.6" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="360.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (384 samples, 12.36%)</title><rect x="358.0" y="515.0" width="145.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="361.0" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (377 samples, 12.14%)</title><rect x="359.1" y="499.0" width="143.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="362.1" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (374 samples, 12.04%)</title><rect x="359.5" y="483.0" width="142.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="362.5" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (374 samples, 12.04%)</title><rect x="359.5" y="467.0" width="142.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="362.5" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (373 samples, 12.01%)</title><rect x="359.5" y="451.0" width="141.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="362.5" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (373 samples, 12.01%)</title><rect x="359.5" y="435.0" width="141.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="362.5" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (373 samples, 12.01%)</title><rect x="359.5" y="419.0" width="141.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="362.5" y="430.0">ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (373 samples, 12.01%)</title><rect x="359.5" y="403.0" width="141.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="362.5" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (367 samples, 11.82%)</title><rect x="359.9" y="387.0" width="139.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="362.9" y="398.0">__local_bh_enable..</text>
</g>
<g>
<title>do_softirq.part.21 (366 samples, 11.78%)</title><rect x="360.3" y="371.0" width="139.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="363.3" y="382.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (365 samples, 11.75%)</title><rect x="360.7" y="355.0" width="138.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="363.7" y="366.0">do_softirq_own_st..</text>
</g>
<g>
<title>__softirqentry_text_start (365 samples, 11.75%)</title><rect x="360.7" y="339.0" width="138.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="363.7" y="350.0">__softirqentry_te..</text>
</g>
<g>
<title>net_rx_action (363 samples, 11.69%)</title><rect x="361.0" y="323.0" width="137.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="364.0" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (363 samples, 11.69%)</title><rect x="361.0" y="307.0" width="137.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="364.0" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (363 samples, 11.69%)</title><rect x="361.0" y="291.0" width="137.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="364.0" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="361.0" y="275.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="364.0" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (362 samples, 11.65%)</title><rect x="361.4" y="275.0" width="137.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="364.4" y="286.0">__netif_receive_s..</text>
</g>
<g>
<title>ip_rcv (362 samples, 11.65%)</title><rect x="361.4" y="259.0" width="137.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="364.4" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.03%)</title><rect x="361.4" y="243.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (361 samples, 11.62%)</title><rect x="361.8" y="243.0" width="137.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.8" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (361 samples, 11.62%)</title><rect x="361.8" y="227.0" width="137.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="364.8" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (361 samples, 11.62%)</title><rect x="361.8" y="211.0" width="137.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.8" y="222.0">ip_local_deliver_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (361 samples, 11.62%)</title><rect x="361.8" y="195.0" width="137.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="364.8" y="206.0">ip_protocol_deliv..</text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.03%)</title><rect x="361.8" y="179.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="364.8" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="362.2" y="179.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.03%)</title><rect x="362.6" y="179.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="365.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (358 samples, 11.53%)</title><rect x="362.9" y="179.0" width="136.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="365.9" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="363.7" y="163.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="366.7" y="174.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.06%)</title><rect x="364.1" y="163.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="367.1" y="174.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.03%)</title><rect x="364.8" y="163.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="367.8" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.06%)</title><rect x="365.2" y="163.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="368.2" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.03%)</title><rect x="365.6" y="147.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="368.6" y="158.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.03%)</title><rect x="366.0" y="163.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="369.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (349 samples, 11.24%)</title><rect x="366.4" y="163.0" width="132.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="369.4" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="366.4" y="147.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="369.4" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (348 samples, 11.20%)</title><rect x="366.7" y="147.0" width="132.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="369.7" y="158.0">tcp_rcv_establis..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.06%)</title><rect x="367.1" y="131.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="370.1" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="367.5" y="115.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="370.5" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="367.5" y="99.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="370.5" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="367.5" y="83.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="370.5" y="94.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="367.9" y="131.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="370.9" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="368.3" y="131.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="371.3" y="142.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.39%)</title><rect x="368.6" y="131.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="371.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.03%)</title><rect x="369.8" y="115.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="372.8" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.26%)</title><rect x="370.2" y="115.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="373.2" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="371.3" y="99.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="374.3" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="371.3" y="83.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="374.3" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="371.3" y="67.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="374.3" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="371.7" y="83.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="374.7" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="371.7" y="67.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="374.7" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="371.7" y="51.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="374.7" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="371.7" y="35.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="374.7" y="46.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.06%)</title><rect x="372.1" y="99.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="375.1" y="110.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="372.8" y="99.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="375.8" y="110.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="373.2" y="131.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="376.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.06%)</title><rect x="373.6" y="131.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="376.6" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (324 samples, 10.43%)</title><rect x="374.3" y="131.0" width="123.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="377.3" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.06%)</title><rect x="374.7" y="115.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="377.7" y="126.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="375.5" y="115.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="378.5" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (319 samples, 10.27%)</title><rect x="375.9" y="115.0" width="121.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="378.9" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.06%)</title><rect x="376.2" y="99.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="379.2" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (316 samples, 10.17%)</title><rect x="377.0" y="99.0" width="120.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="380.0" y="110.0">__wake_up_sync_..</text>
</g>
<g>
<title>__wake_up_common_lock (316 samples, 10.17%)</title><rect x="377.0" y="83.0" width="120.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="380.0" y="94.0">__wake_up_commo..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (316 samples, 10.17%)</title><rect x="377.0" y="67.0" width="120.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="380.0" y="78.0">_raw_spin_unloc..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="497.0" y="115.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="500.0" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.10%)</title><rect x="497.4" y="131.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="500.4" y="142.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.10%)</title><rect x="497.4" y="115.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="500.4" y="126.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="498.2" y="99.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="501.2" y="110.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="498.6" y="131.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="501.6" y="142.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="498.9" y="323.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="501.9" y="334.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="498.9" y="307.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="501.9" y="318.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.03%)</title><rect x="498.9" y="291.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="501.9" y="302.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.03%)</title><rect x="498.9" y="275.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="501.9" y="286.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="498.9" y="259.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="501.9" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="498.9" y="243.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="501.9" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.16%)</title><rect x="499.3" y="387.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="502.3" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.16%)</title><rect x="499.3" y="371.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="502.3" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.06%)</title><rect x="499.3" y="355.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="502.3" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="499.7" y="339.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="502.7" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.10%)</title><rect x="500.1" y="355.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="503.1" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="500.8" y="339.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="503.8" y="350.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.03%)</title><rect x="500.8" y="323.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="503.8" y="334.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="501.2" y="451.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="504.2" y="462.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.06%)</title><rect x="501.6" y="483.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="504.6" y="494.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.06%)</title><rect x="501.6" y="467.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="504.6" y="478.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="502.4" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="505.4" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="502.7" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="505.7" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="503.1" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="506.1" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="503.5" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="506.5" y="510.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.03%)</title><rect x="503.9" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="506.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.03%)</title><rect x="504.3" y="579.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="507.3" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.06%)</title><rect x="504.6" y="595.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="507.6" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="505.0" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="508.0" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="505.0" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="508.0" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="505.0" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="508.0" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="505.0" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="508.0" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="505.4" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="508.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="505.4" y="595.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="508.4" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (15 samples, 0.48%)</title><rect x="505.8" y="643.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="508.8" y="654.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.48%)</title><rect x="505.8" y="627.0" width="5.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="508.8" y="638.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.45%)</title><rect x="506.2" y="611.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="509.2" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.42%)</title><rect x="506.5" y="595.0" width="5.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="509.5" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="511.5" y="675.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="514.5" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="511.5" y="659.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="514.5" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="511.5" y="643.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="514.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.03%)</title><rect x="511.9" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="511.9" y="755.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="514.9" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="511.9" y="739.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.9" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="511.9" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="514.9" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="511.9" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="514.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.06%)</title><rect x="512.2" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="512.6" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="513.0" y="787.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="516.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="513.0" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (114 samples, 3.67%)</title><rect x="513.4" y="787.0" width="43.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.4" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.get (114 samples, 3.67%)</title><rect x="513.4" y="771.0" width="43.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.4" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.get (114 samples, 3.67%)</title><rect x="513.4" y="755.0" width="43.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.4" y="766.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (111 samples, 3.57%)</title><rect x="513.8" y="739.0" width="42.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.8" y="750.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (111 samples, 3.57%)</title><rect x="513.8" y="723.0" width="42.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.8" y="734.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (107 samples, 3.44%)</title><rect x="513.8" y="707.0" width="40.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="516.8" y="718.0">Jav..</text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (2 samples, 0.06%)</title><rect x="514.1" y="691.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="517.1" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="514.9" y="691.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="517.9" y="702.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.03%)</title><rect x="515.3" y="691.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="518.3" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.06%)</title><rect x="515.7" y="691.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="518.7" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (5 samples, 0.16%)</title><rect x="516.4" y="691.0" width="1.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="519.4" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.06%)</title><rect x="518.3" y="691.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="521.3" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (93 samples, 2.99%)</title><rect x="519.1" y="691.0" width="35.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="522.1" y="702.0">roc..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.16%)</title><rect x="519.1" y="675.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="522.1" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="520.6" y="659.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="523.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (73 samples, 2.35%)</title><rect x="521.0" y="675.0" width="27.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="524.0" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.06%)</title><rect x="521.0" y="659.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="524.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (70 samples, 2.25%)</title><rect x="521.7" y="659.0" width="26.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="524.7" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (69 samples, 2.22%)</title><rect x="521.7" y="643.0" width="26.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="524.7" y="654.0">r..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="521.7" y="627.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="524.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (5 samples, 0.16%)</title><rect x="522.1" y="627.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="525.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (57 samples, 1.84%)</title><rect x="524.0" y="627.0" width="21.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="527.0" y="638.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.03%)</title><rect x="525.5" y="611.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="528.5" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.16%)</title><rect x="525.9" y="611.0" width="1.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="528.9" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="527.4" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="530.4" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="527.4" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="530.4" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="527.4" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="530.4" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="527.4" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="530.4" y="558.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="527.4" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="530.4" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="527.4" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="530.4" y="526.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="527.8" y="611.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="530.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.03%)</title><rect x="528.2" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="531.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.06%)</title><rect x="528.6" y="611.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="531.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.10%)</title><rect x="529.3" y="611.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="532.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.06%)</title><rect x="529.3" y="595.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="532.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.03%)</title><rect x="530.1" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="533.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (36 samples, 1.16%)</title><rect x="530.5" y="611.0" width="13.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="533.5" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (34 samples, 1.09%)</title><rect x="530.9" y="595.0" width="12.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="533.9" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.03%)</title><rect x="530.9" y="579.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="533.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (31 samples, 1.00%)</title><rect x="531.2" y="579.0" width="11.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="534.2" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (3 samples, 0.10%)</title><rect x="536.6" y="563.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="539.6" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="537.7" y="563.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="540.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (13 samples, 0.42%)</title><rect x="538.1" y="563.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="541.1" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (4 samples, 0.13%)</title><rect x="539.6" y="547.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="542.6" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="540.7" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="543.7" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="540.7" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="543.7" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="540.7" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="543.7" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="541.1" y="547.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="544.1" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.13%)</title><rect x="541.5" y="547.0" width="1.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="544.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.03%)</title><rect x="543.0" y="579.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="546.0" y="590.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="543.4" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="546.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.03%)</title><rect x="543.8" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="546.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.03%)</title><rect x="544.2" y="611.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="547.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.06%)</title><rect x="544.5" y="611.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="547.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="545.3" y="611.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="548.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="545.3" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="548.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="545.3" y="579.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="548.3" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="545.3" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="548.3" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="545.3" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="548.3" y="558.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="545.3" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="548.3" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="545.3" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.3" y="526.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="545.3" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.3" y="510.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.03%)</title><rect x="545.3" y="483.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="548.3" y="494.0"></text>
</g>
<g>
<title>rcu_gp_kthread_wake (1 samples, 0.03%)</title><rect x="545.3" y="467.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.3" y="478.0"></text>
</g>
<g>
<title>swake_up_one (1 samples, 0.03%)</title><rect x="545.3" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.3" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="545.3" y="435.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.10%)</title><rect x="545.7" y="627.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="548.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="546.8" y="627.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="549.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.03%)</title><rect x="547.2" y="627.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="550.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.03%)</title><rect x="547.6" y="627.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="550.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="548.0" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="551.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.03%)</title><rect x="548.3" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="551.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (15 samples, 0.48%)</title><rect x="548.7" y="675.0" width="5.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="551.7" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.48%)</title><rect x="548.7" y="659.0" width="5.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="551.7" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10 samples, 0.32%)</title><rect x="550.6" y="643.0" width="3.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="553.6" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.13%)</title><rect x="552.9" y="627.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="555.9" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.10%)</title><rect x="553.3" y="611.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="556.3" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="553.7" y="595.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="556.7" y="606.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="554.0" y="595.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="557.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="554.4" y="707.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="557.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="554.4" y="691.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="557.4" y="702.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="554.4" y="675.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="557.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.06%)</title><rect x="554.8" y="707.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="557.8" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.03%)</title><rect x="555.6" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="558.6" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="555.6" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="558.6" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="555.6" y="675.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="558.6" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="555.6" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="558.6" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="555.6" y="643.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="558.6" y="654.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="555.6" y="627.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="558.6" y="638.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="555.6" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="558.6" y="622.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.03%)</title><rect x="555.6" y="595.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="558.6" y="606.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.03%)</title><rect x="555.6" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="558.6" y="590.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="555.6" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="558.6" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="555.6" y="547.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="558.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.convertValuesSubMinValue (2 samples, 0.06%)</title><rect x="555.9" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.03%)</title><rect x="556.7" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="559.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="557.1" y="803.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="557.1" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="557.1" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="560.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="557.1" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="557.1" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.23%)</title><rect x="557.5" y="835.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="559.0" y="819.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="559.0" y="803.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="562.0" y="814.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.03%)</title><rect x="559.7" y="787.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="562.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="560.1" y="835.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="560.1" y="819.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="560.1" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="560.1" y="787.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="560.1" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.1" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="560.1" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (37 samples, 1.19%)</title><rect x="560.5" y="851.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (37 samples, 1.19%)</title><rect x="560.5" y="835.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="563.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.23%)</title><rect x="561.6" y="819.0" width="2.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="564.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.23%)</title><rect x="561.6" y="803.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="564.6" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.23%)</title><rect x="561.6" y="787.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="564.6" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.19%)</title><rect x="561.6" y="771.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="564.6" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.10%)</title><rect x="562.8" y="755.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="565.8" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.06%)</title><rect x="563.1" y="739.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="566.1" y="750.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="563.9" y="771.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="566.9" y="782.0"></text>
</g>
<g>
<title>__GI___recv (27 samples, 0.87%)</title><rect x="564.3" y="819.0" width="10.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="567.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.77%)</title><rect x="565.4" y="803.0" width="9.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="568.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.77%)</title><rect x="565.4" y="787.0" width="9.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="568.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (22 samples, 0.71%)</title><rect x="566.2" y="771.0" width="8.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="569.2" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (21 samples, 0.68%)</title><rect x="566.2" y="755.0" width="8.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="569.2" y="766.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="566.6" y="739.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="569.6" y="750.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="566.6" y="723.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="569.6" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (19 samples, 0.61%)</title><rect x="566.9" y="739.0" width="7.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="569.9" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="567.3" y="723.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.3" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (13 samples, 0.42%)</title><rect x="567.7" y="723.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="570.7" y="734.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.03%)</title><rect x="567.7" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.7" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.39%)</title><rect x="568.1" y="707.0" width="4.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="571.1" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="568.8" y="691.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="571.8" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="569.2" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="572.2" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="569.2" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="572.2" y="686.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="569.2" y="659.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="572.2" y="670.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="569.6" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="572.6" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.16%)</title><rect x="570.0" y="691.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="573.0" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.13%)</title><rect x="570.0" y="675.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="573.0" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.13%)</title><rect x="570.0" y="659.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="573.0" y="670.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="570.0" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="573.0" y="654.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="570.4" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="573.4" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.06%)</title><rect x="570.4" y="627.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="573.4" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="571.1" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="574.1" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="571.1" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="574.1" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="571.5" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="574.5" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="571.9" y="691.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="574.9" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="572.3" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.3" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="572.3" y="675.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="575.3" y="686.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="572.3" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="575.3" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.13%)</title><rect x="572.6" y="723.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.6" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.13%)</title><rect x="572.6" y="707.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="575.6" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="572.6" y="691.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="575.6" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.10%)</title><rect x="573.0" y="691.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="576.0" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.10%)</title><rect x="573.0" y="675.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="576.0" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.06%)</title><rect x="573.0" y="659.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="576.0" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.06%)</title><rect x="573.0" y="643.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="576.0" y="654.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="573.8" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="576.8" y="670.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="574.2" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="577.2" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=55631] (761 samples, 24.50%)</title><rect x="574.5" y="915.0" width="289.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="577.5" y="926.0">[NIO Selector #2 tid=55631]</text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.03%)</title><rect x="574.5" y="899.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="577.5" y="910.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.13%)</title><rect x="574.9" y="899.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="577.9" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.10%)</title><rect x="575.3" y="883.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="578.3" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (756 samples, 24.34%)</title><rect x="576.4" y="899.0" width="287.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.4" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="576.4" y="883.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="579.4" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="576.4" y="867.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="579.4" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="576.4" y="851.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="579.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (88 samples, 2.83%)</title><rect x="576.8" y="883.0" width="33.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.8" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (87 samples, 2.80%)</title><rect x="577.2" y="867.0" width="33.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="580.2" y="878.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.06%)</title><rect x="577.6" y="851.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="580.6" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="578.0" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.0" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="578.0" y="819.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="581.0" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="578.0" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="581.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 2.61%)</title><rect x="578.3" y="851.0" width="30.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="581.3" y="862.0">[u..</text>
</g>
<g>
<title>epoll_wait (81 samples, 2.61%)</title><rect x="578.3" y="835.0" width="30.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="581.3" y="846.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (78 samples, 2.51%)</title><rect x="579.5" y="819.0" width="29.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="582.5" y="830.0">en..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.06%)</title><rect x="579.5" y="803.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="582.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (76 samples, 2.45%)</title><rect x="580.2" y="803.0" width="28.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.2" y="814.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (72 samples, 2.32%)</title><rect x="581.8" y="787.0" width="27.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.8" y="798.0">_..</text>
</g>
<g>
<title>do_epoll_wait (71 samples, 2.29%)</title><rect x="581.8" y="771.0" width="26.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="584.8" y="782.0">d..</text>
</g>
<g>
<title>ep_poll (70 samples, 2.25%)</title><rect x="581.8" y="755.0" width="26.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="584.8" y="766.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (39 samples, 1.26%)</title><rect x="582.1" y="739.0" width="14.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="585.1" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.32%)</title><rect x="592.8" y="723.0" width="3.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="595.8" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (6 samples, 0.19%)</title><rect x="593.9" y="707.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="596.9" y="718.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.16%)</title><rect x="594.3" y="691.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="597.3" y="702.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.10%)</title><rect x="595.1" y="675.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="598.1" y="686.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="596.2" y="707.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="599.2" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="596.6" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="599.6" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="596.6" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="599.6" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (30 samples, 0.97%)</title><rect x="597.0" y="739.0" width="11.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="600.0" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (30 samples, 0.97%)</title><rect x="597.0" y="723.0" width="11.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="600.0" y="734.0"></text>
</g>
<g>
<title>schedule (30 samples, 0.97%)</title><rect x="597.0" y="707.0" width="11.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="600.0" y="718.0"></text>
</g>
<g>
<title>__schedule (30 samples, 0.97%)</title><rect x="597.0" y="691.0" width="11.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="600.0" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (30 samples, 0.97%)</title><rect x="597.0" y="675.0" width="11.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="600.0" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="608.4" y="755.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="611.4" y="766.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="608.7" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="611.7" y="782.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="609.1" y="851.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="612.1" y="862.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.06%)</title><rect x="609.5" y="851.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="612.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (667 samples, 21.47%)</title><rect x="610.3" y="883.0" width="253.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.3" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (667 samples, 21.47%)</title><rect x="610.3" y="867.0" width="253.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.3" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (614 samples, 19.77%)</title><rect x="610.6" y="851.0" width="233.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.6" y="862.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (607 samples, 19.54%)</title><rect x="611.0" y="835.0" width="230.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.0" y="846.0">one/nio/http/HttpSession.handl..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (607 samples, 19.54%)</title><rect x="611.0" y="819.0" width="230.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.0" y="830.0">one/nio/http/HttpServer.handle..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (606 samples, 19.51%)</title><rect x="611.0" y="803.0" width="230.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="614.0" y="814.0">RequestHandler1_entity.handleR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (502 samples, 16.16%)</title><rect x="611.0" y="787.0" width="190.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.0" y="798.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (498 samples, 16.03%)</title><rect x="611.4" y="771.0" width="189.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.4" y="782.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.13%)</title><rect x="611.4" y="755.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.10%)</title><rect x="611.8" y="739.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="611.8" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="614.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="612.2" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.06%)</title><rect x="612.2" y="707.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (494 samples, 15.90%)</title><rect x="612.9" y="755.0" width="187.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.9" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (494 samples, 15.90%)</title><rect x="612.9" y="739.0" width="187.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.9" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="613.3" y="723.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="616.3" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="613.3" y="707.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="616.3" y="718.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.10%)</title><rect x="613.7" y="723.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="616.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (489 samples, 15.74%)</title><rect x="614.8" y="723.0" width="185.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.8" y="734.0">one/nio/net/Session$Arra..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (487 samples, 15.68%)</title><rect x="615.6" y="707.0" width="185.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.6" y="718.0">one/nio/net/NativeSocket..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="616.3" y="691.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="619.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="616.7" y="691.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="619.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.06%)</title><rect x="616.7" y="675.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="619.7" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="616.7" y="659.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="619.7" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="616.7" y="643.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="619.7" y="654.0"></text>
</g>
<g>
<title>__send (1 samples, 0.03%)</title><rect x="617.1" y="659.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="620.1" y="670.0"></text>
</g>
<g>
<title>__send (482 samples, 15.52%)</title><rect x="617.5" y="691.0" width="183.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="620.5" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (479 samples, 15.42%)</title><rect x="618.6" y="675.0" width="182.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="621.6" y="686.0">entry_SYSCALL_64_after_..</text>
</g>
<g>
<title>do_syscall_64 (479 samples, 15.42%)</title><rect x="618.6" y="659.0" width="182.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="621.6" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (449 samples, 14.46%)</title><rect x="620.1" y="643.0" width="170.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="623.1" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (448 samples, 14.42%)</title><rect x="620.1" y="627.0" width="170.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.1" y="638.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="620.5" y="611.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="623.5" y="622.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="620.9" y="611.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="623.9" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (444 samples, 14.29%)</title><rect x="621.3" y="611.0" width="168.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="624.3" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (438 samples, 14.10%)</title><rect x="621.7" y="595.0" width="166.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="624.7" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (438 samples, 14.10%)</title><rect x="621.7" y="579.0" width="166.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="624.7" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="621.7" y="563.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="624.7" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="622.4" y="563.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="625.4" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.06%)</title><rect x="622.8" y="563.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="625.8" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (430 samples, 13.84%)</title><rect x="623.6" y="563.0" width="163.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="626.6" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.10%)</title><rect x="623.9" y="547.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="626.9" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.10%)</title><rect x="623.9" y="531.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="626.9" y="542.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.03%)</title><rect x="625.1" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="628.1" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.26%)</title><rect x="625.5" y="547.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="628.5" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.23%)</title><rect x="625.8" y="531.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="628.8" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.06%)</title><rect x="626.6" y="515.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="629.6" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.06%)</title><rect x="626.6" y="499.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="629.6" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="627.4" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="630.4" y="526.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.06%)</title><rect x="627.7" y="515.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="630.7" y="526.0"></text>
</g>
<g>
<title>tcp_push (412 samples, 13.26%)</title><rect x="628.5" y="547.0" width="156.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="631.5" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (411 samples, 13.23%)</title><rect x="628.5" y="531.0" width="156.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="631.5" y="542.0">__tcp_push_pending_f..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="628.5" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="631.5" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.06%)</title><rect x="628.9" y="515.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="631.9" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (408 samples, 13.14%)</title><rect x="629.6" y="515.0" width="155.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="632.6" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (400 samples, 12.88%)</title><rect x="630.0" y="499.0" width="152.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="633.0" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (399 samples, 12.85%)</title><rect x="630.0" y="483.0" width="151.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="633.0" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (398 samples, 12.81%)</title><rect x="630.4" y="467.0" width="151.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="633.4" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="630.8" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="633.8" y="462.0"></text>
</g>
<g>
<title>ip_local_out (396 samples, 12.75%)</title><rect x="631.2" y="451.0" width="150.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="634.2" y="462.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="631.2" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="634.2" y="446.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="631.2" y="419.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="634.2" y="430.0"></text>
</g>
<g>
<title>ip_output (395 samples, 12.72%)</title><rect x="631.5" y="435.0" width="150.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="634.5" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (394 samples, 12.69%)</title><rect x="631.9" y="419.0" width="149.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="634.9" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.06%)</title><rect x="633.4" y="403.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="636.4" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (388 samples, 12.49%)</title><rect x="634.2" y="403.0" width="147.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="637.2" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (378 samples, 12.17%)</title><rect x="635.0" y="387.0" width="143.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="638.0" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.21 (377 samples, 12.14%)</title><rect x="635.3" y="371.0" width="143.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="638.3" y="382.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (375 samples, 12.07%)</title><rect x="636.1" y="355.0" width="142.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="639.1" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (375 samples, 12.07%)</title><rect x="636.1" y="339.0" width="142.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="639.1" y="350.0">__softirqentry_tex..</text>
</g>
<g>
<title>net_rx_action (374 samples, 12.04%)</title><rect x="636.1" y="323.0" width="142.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="639.1" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (374 samples, 12.04%)</title><rect x="636.1" y="307.0" width="142.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="639.1" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (374 samples, 12.04%)</title><rect x="636.1" y="291.0" width="142.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="639.1" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (374 samples, 12.04%)</title><rect x="636.1" y="275.0" width="142.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="639.1" y="286.0">__netif_receive_sk..</text>
</g>
<g>
<title>ip_rcv (374 samples, 12.04%)</title><rect x="636.1" y="259.0" width="142.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="639.1" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (374 samples, 12.04%)</title><rect x="636.1" y="243.0" width="142.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.1" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (374 samples, 12.04%)</title><rect x="636.1" y="227.0" width="142.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="639.1" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (373 samples, 12.01%)</title><rect x="636.1" y="211.0" width="141.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="639.1" y="222.0">ip_local_deliver_f..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (372 samples, 11.98%)</title><rect x="636.1" y="195.0" width="141.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.1" y="206.0">ip_protocol_delive..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="636.5" y="179.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="639.5" y="190.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.03%)</title><rect x="636.9" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="639.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (369 samples, 11.88%)</title><rect x="637.2" y="179.0" width="140.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.2" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="637.6" y="163.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="640.6" y="174.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.03%)</title><rect x="638.0" y="163.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="641.0" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.06%)</title><rect x="638.4" y="163.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.4" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.06%)</title><rect x="638.4" y="147.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="641.4" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="639.1" y="163.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="642.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (363 samples, 11.69%)</title><rect x="639.5" y="163.0" width="137.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="642.5" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.03%)</title><rect x="639.9" y="147.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="642.9" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="640.3" y="147.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="643.3" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (360 samples, 11.59%)</title><rect x="640.7" y="147.0" width="136.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="643.7" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="640.7" y="131.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="643.7" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="641.0" y="131.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="644.0" y="142.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.39%)</title><rect x="641.4" y="131.0" width="4.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="644.4" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="642.5" y="115.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.5" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.16%)</title><rect x="642.9" y="115.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="645.9" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.13%)</title><rect x="642.9" y="99.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="645.9" y="110.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.13%)</title><rect x="642.9" y="83.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="645.9" y="94.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.10%)</title><rect x="642.9" y="67.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="645.9" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.03%)</title><rect x="643.7" y="51.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="646.7" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="643.7" y="35.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="646.7" y="46.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="644.1" y="67.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="647.1" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.03%)</title><rect x="644.4" y="99.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="647.4" y="110.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="644.8" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.8" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="645.2" y="115.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="648.2" y="126.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="645.6" y="115.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="648.6" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="646.0" y="131.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="649.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (344 samples, 11.08%)</title><rect x="646.3" y="131.0" width="130.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="649.3" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.06%)</title><rect x="647.1" y="115.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="650.1" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (340 samples, 10.95%)</title><rect x="647.9" y="115.0" width="129.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="650.9" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="648.6" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="651.6" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (337 samples, 10.85%)</title><rect x="649.0" y="99.0" width="128.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="652.0" y="110.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (336 samples, 10.82%)</title><rect x="649.0" y="83.0" width="127.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="652.0" y="94.0">__wake_up_common..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (335 samples, 10.79%)</title><rect x="649.4" y="67.0" width="127.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.4" y="78.0">_raw_spin_unlock..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="776.7" y="83.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="779.7" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="777.0" y="131.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="780.0" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="777.0" y="115.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="780.0" y="126.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="777.4" y="195.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="780.4" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="777.8" y="211.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="780.8" y="222.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="778.2" y="323.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="781.2" y="334.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="778.2" y="307.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="781.2" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="778.2" y="291.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="781.2" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.26%)</title><rect x="778.6" y="387.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="781.6" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.26%)</title><rect x="778.6" y="371.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="781.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.16%)</title><rect x="778.6" y="355.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.6" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="778.6" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="781.6" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.13%)</title><rect x="778.9" y="339.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="781.9" y="350.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.10%)</title><rect x="778.9" y="323.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="781.9" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.06%)</title><rect x="779.3" y="307.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="782.3" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.06%)</title><rect x="779.3" y="291.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="782.3" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="780.1" y="323.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="783.1" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="780.5" y="355.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="783.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.06%)</title><rect x="780.8" y="355.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="783.8" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="781.2" y="339.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="784.2" y="350.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="781.6" y="483.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="784.6" y="494.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.03%)</title><rect x="781.6" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="784.6" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="781.6" y="451.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="784.6" y="462.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="782.0" y="499.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="785.0" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="782.4" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="785.4" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="782.4" y="483.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="785.4" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="782.7" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="785.7" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.03%)</title><rect x="783.1" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="786.1" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="783.5" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="786.5" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.06%)</title><rect x="783.9" y="499.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.9" y="510.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="784.6" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="787.6" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="784.6" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="787.6" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="784.6" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="787.6" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="784.6" y="483.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="787.6" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.13%)</title><rect x="785.0" y="547.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="788.0" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.06%)</title><rect x="785.0" y="531.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="788.0" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.06%)</title><rect x="785.8" y="531.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="788.8" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="786.5" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="789.5" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="786.9" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="789.9" y="574.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.06%)</title><rect x="787.3" y="563.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="790.3" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.13%)</title><rect x="788.1" y="595.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="791.1" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.13%)</title><rect x="788.1" y="579.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="791.1" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.13%)</title><rect x="788.1" y="563.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="791.1" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.13%)</title><rect x="788.1" y="547.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="791.1" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.13%)</title><rect x="788.1" y="531.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="791.1" y="542.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (3 samples, 0.10%)</title><rect x="788.1" y="515.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="791.1" y="526.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.03%)</title><rect x="789.2" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="792.2" y="526.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.03%)</title><rect x="789.2" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="792.2" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.03%)</title><rect x="789.6" y="595.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="792.6" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="790.0" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="793.0" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="790.0" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="793.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="790.0" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="793.0" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="790.0" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="793.0" y="574.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="790.3" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="793.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (26 samples, 0.84%)</title><rect x="790.7" y="643.0" width="9.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="793.7" y="654.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.80%)</title><rect x="791.1" y="627.0" width="9.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="794.1" y="638.0"></text>
</g>
<g>
<title>__schedule (25 samples, 0.80%)</title><rect x="791.1" y="611.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="794.1" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (25 samples, 0.80%)</title><rect x="791.1" y="595.0" width="9.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="794.1" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="800.2" y="579.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="803.2" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="800.2" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="803.2" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="800.2" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="803.2" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="800.2" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="803.2" y="542.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="800.2" y="515.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="803.2" y="526.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.03%)</title><rect x="800.2" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="803.2" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="800.2" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="803.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="800.6" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.03%)</title><rect x="801.0" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="801.0" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="804.0" y="766.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.03%)</title><rect x="801.4" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="804.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.03%)</title><rect x="801.4" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="801.7" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="801.7" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="801.7" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (103 samples, 3.32%)</title><rect x="802.1" y="787.0" width="39.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.1" y="798.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.06%)</title><rect x="802.1" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.06%)</title><rect x="802.1" y="755.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="802.1" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="802.1" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.get (1 samples, 0.03%)</title><rect x="802.5" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.get (100 samples, 3.22%)</title><rect x="802.9" y="771.0" width="38.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.9" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.get (99 samples, 3.19%)</title><rect x="803.3" y="755.0" width="37.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="806.3" y="766.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="804.4" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="807.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/745160567.invoke (1 samples, 0.03%)</title><rect x="804.4" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.4" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="804.4" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="807.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="804.8" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="804.8" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="807.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="804.8" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="804.8" y="691.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.8" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="804.8" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.8" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (91 samples, 2.93%)</title><rect x="805.5" y="739.0" width="34.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.5" y="750.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (91 samples, 2.93%)</title><rect x="805.5" y="723.0" width="34.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="808.5" y="734.0">or..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.03%)</title><rect x="805.5" y="707.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="808.5" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (85 samples, 2.74%)</title><rect x="805.9" y="707.0" width="32.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="808.9" y="718.0">Ja..</text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.03%)</title><rect x="806.3" y="691.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="809.3" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="806.3" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="809.3" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="806.3" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="809.3" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="806.3" y="643.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="809.3" y="654.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.03%)</title><rect x="806.7" y="691.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="809.7" y="702.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="806.7" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="809.7" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="806.7" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="809.7" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="806.7" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="809.7" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="806.7" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="809.7" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="806.7" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="809.7" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="806.7" y="595.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="809.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="806.7" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="809.7" y="590.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="807.1" y="691.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="810.1" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.03%)</title><rect x="807.4" y="691.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="810.4" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (78 samples, 2.51%)</title><rect x="807.8" y="691.0" width="29.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="810.8" y="702.0">ro..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.13%)</title><rect x="808.2" y="675.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="811.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (62 samples, 2.00%)</title><rect x="809.7" y="675.0" width="23.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="812.7" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.03%)</title><rect x="809.7" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="812.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.03%)</title><rect x="810.1" y="659.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="813.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (60 samples, 1.93%)</title><rect x="810.5" y="659.0" width="22.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="813.5" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (59 samples, 1.90%)</title><rect x="810.5" y="643.0" width="22.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="813.5" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.06%)</title><rect x="810.5" y="627.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="813.5" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="810.8" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="813.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="810.8" y="595.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="813.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="810.8" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="813.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.06%)</title><rect x="811.2" y="627.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="814.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (55 samples, 1.77%)</title><rect x="812.0" y="627.0" width="20.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="815.0" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.06%)</title><rect x="812.7" y="611.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="815.7" y="622.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.03%)</title><rect x="813.5" y="611.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="816.5" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="813.9" y="611.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="816.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.06%)</title><rect x="815.0" y="611.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="818.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="815.0" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="818.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="815.4" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="818.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="815.8" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="818.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="816.2" y="611.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="819.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="816.2" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="819.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="816.2" y="579.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="819.2" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="816.2" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="819.2" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="816.2" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="819.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.06%)</title><rect x="816.5" y="611.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="819.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="816.9" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="819.9" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="816.9" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="819.9" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="816.9" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="819.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (39 samples, 1.26%)</title><rect x="817.3" y="611.0" width="14.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="820.3" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (37 samples, 1.19%)</title><rect x="817.7" y="595.0" width="14.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="820.7" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.03%)</title><rect x="817.7" y="579.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="820.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (32 samples, 1.03%)</title><rect x="818.1" y="579.0" width="12.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="821.1" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.03%)</title><rect x="824.5" y="563.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="827.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="824.9" y="563.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="827.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 0.32%)</title><rect x="825.3" y="563.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="828.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (2 samples, 0.06%)</title><rect x="826.0" y="547.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="829.0" y="558.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.06%)</title><rect x="826.8" y="547.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="829.8" y="558.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.13%)</title><rect x="827.6" y="547.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="830.6" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.10%)</title><rect x="829.1" y="563.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="832.1" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.10%)</title><rect x="829.1" y="547.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="832.1" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.10%)</title><rect x="829.1" y="531.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="832.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.10%)</title><rect x="830.2" y="579.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="833.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.03%)</title><rect x="831.4" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="834.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.03%)</title><rect x="831.7" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="834.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.03%)</title><rect x="832.1" y="611.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="835.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="832.5" y="611.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="835.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="832.9" y="643.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="835.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.03%)</title><rect x="833.3" y="675.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="836.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (9 samples, 0.29%)</title><rect x="833.6" y="675.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="836.6" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.29%)</title><rect x="833.6" y="659.0" width="3.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="836.6" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.23%)</title><rect x="834.4" y="643.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="837.4" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.16%)</title><rect x="835.2" y="627.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="838.2" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.10%)</title><rect x="835.5" y="611.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="838.5" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.06%)</title><rect x="835.9" y="595.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="838.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="836.7" y="611.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="839.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.03%)</title><rect x="837.1" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="840.1" y="686.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.06%)</title><rect x="837.4" y="691.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="840.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="838.2" y="707.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="841.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="838.2" y="691.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="841.2" y="702.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.03%)</title><rect x="838.2" y="675.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="841.2" y="686.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="838.6" y="707.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="841.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.06%)</title><rect x="839.0" y="707.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="842.0" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.03%)</title><rect x="839.7" y="707.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="842.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.convertValuesSubMinValue (2 samples, 0.06%)</title><rect x="840.1" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (1 samples, 0.03%)</title><rect x="840.9" y="771.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.9" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="840.9" y="755.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="840.9" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="840.9" y="723.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="840.9" y="707.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.9" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="840.9" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="843.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="840.9" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.9" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="840.9" y="659.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="843.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="841.2" y="803.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="844.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="841.2" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="844.2" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="841.2" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="844.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="841.2" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="844.2" y="766.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.03%)</title><rect x="841.2" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.10%)</title><rect x="841.6" y="835.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="844.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="842.4" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="842.8" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="842.8" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="842.8" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="842.8" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="845.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="842.8" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="845.8" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.03%)</title><rect x="842.8" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="843.1" y="835.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="846.1" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.06%)</title><rect x="843.1" y="819.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (52 samples, 1.67%)</title><rect x="843.9" y="851.0" width="19.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="846.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (52 samples, 1.67%)</title><rect x="843.9" y="835.0" width="19.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.42%)</title><rect x="844.7" y="819.0" width="4.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="847.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.42%)</title><rect x="844.7" y="803.0" width="4.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="847.7" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="844.7" y="787.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="847.7" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.35%)</title><rect x="845.0" y="787.0" width="4.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="848.0" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10 samples, 0.32%)</title><rect x="845.0" y="771.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="848.0" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.19%)</title><rect x="846.6" y="755.0" width="2.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="849.6" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="848.5" y="739.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="851.5" y="750.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="848.8" y="771.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="851.8" y="782.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="849.2" y="787.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="852.2" y="798.0"></text>
</g>
<g>
<title>__GI___recv (37 samples, 1.19%)</title><rect x="849.6" y="819.0" width="14.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="852.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 1.16%)</title><rect x="850.0" y="803.0" width="13.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="853.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 1.16%)</title><rect x="850.0" y="787.0" width="13.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="853.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (35 samples, 1.13%)</title><rect x="850.0" y="771.0" width="13.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="853.0" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (34 samples, 1.09%)</title><rect x="850.0" y="755.0" width="12.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="853.0" y="766.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="850.0" y="739.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="853.0" y="750.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="850.4" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="853.4" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (32 samples, 1.03%)</title><rect x="850.7" y="739.0" width="12.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="853.7" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (21 samples, 0.68%)</title><rect x="850.7" y="723.0" width="8.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="853.7" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="850.7" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="853.7" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="851.1" y="707.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="854.1" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="851.5" y="707.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="854.5" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (18 samples, 0.58%)</title><rect x="851.9" y="707.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="854.9" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="853.0" y="691.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="856.0" y="702.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="853.0" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="856.0" y="686.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="853.0" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="856.0" y="670.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="853.4" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="856.4" y="686.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="853.8" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="856.8" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="854.2" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="857.2" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="854.5" y="691.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="857.5" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="854.9" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="857.9" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="854.9" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="857.9" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="854.9" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="857.9" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.23%)</title><rect x="855.3" y="691.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="858.3" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.23%)</title><rect x="855.3" y="675.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="858.3" y="686.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="855.3" y="659.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="858.3" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="856.1" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="859.1" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.13%)</title><rect x="856.4" y="659.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="859.4" y="670.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.06%)</title><rect x="856.4" y="643.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="859.4" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.06%)</title><rect x="857.2" y="643.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="860.2" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.06%)</title><rect x="857.2" y="627.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="860.2" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.06%)</title><rect x="858.0" y="691.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="861.0" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="858.3" y="675.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="861.3" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="858.3" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="861.3" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (11 samples, 0.35%)</title><rect x="858.7" y="723.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="861.7" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (8 samples, 0.26%)</title><rect x="859.9" y="707.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.9" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.06%)</title><rect x="859.9" y="691.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="862.9" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.19%)</title><rect x="860.6" y="691.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="863.6" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.19%)</title><rect x="860.6" y="675.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="863.6" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.06%)</title><rect x="861.8" y="659.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="864.8" y="670.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.03%)</title><rect x="861.8" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="864.8" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.03%)</title><rect x="862.1" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="865.1" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.03%)</title><rect x="862.5" y="659.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="865.5" y="670.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="862.9" y="755.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="865.9" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="863.3" y="771.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="866.3" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="863.3" y="755.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="866.3" y="766.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="863.3" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="866.3" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="863.3" y="723.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="866.3" y="734.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=55632] (857 samples, 27.59%)</title><rect x="863.7" y="915.0" width="325.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="866.7" y="926.0">[NIO Selector #3 tid=55632]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (857 samples, 27.59%)</title><rect x="863.7" y="899.0" width="325.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="866.7" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.03%)</title><rect x="863.7" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="866.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (120 samples, 3.86%)</title><rect x="864.0" y="883.0" width="45.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.0" y="894.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (120 samples, 3.86%)</title><rect x="864.0" y="867.0" width="45.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.0" y="878.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="865.2" y="851.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="868.2" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="865.2" y="835.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="868.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="865.2" y="819.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="868.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="865.2" y="803.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="868.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (112 samples, 3.61%)</title><rect x="865.6" y="851.0" width="42.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="868.6" y="862.0">[unk..</text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.06%)</title><rect x="865.6" y="835.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="868.6" y="846.0"></text>
</g>
<g>
<title>epoll_wait (110 samples, 3.54%)</title><rect x="866.3" y="835.0" width="41.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="869.3" y="846.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (110 samples, 3.54%)</title><rect x="866.3" y="819.0" width="41.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="869.3" y="830.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (110 samples, 3.54%)</title><rect x="866.3" y="803.0" width="41.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="869.3" y="814.0">do_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (108 samples, 3.48%)</title><rect x="866.7" y="787.0" width="41.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="869.7" y="798.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (107 samples, 3.44%)</title><rect x="866.7" y="771.0" width="40.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="869.7" y="782.0">do_..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="866.7" y="755.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="869.7" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="866.7" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="869.7" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="866.7" y="723.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="869.7" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="867.1" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="870.1" y="766.0"></text>
</g>
<g>
<title>ep_poll (105 samples, 3.38%)</title><rect x="867.5" y="755.0" width="39.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="870.5" y="766.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (71 samples, 2.29%)</title><rect x="867.8" y="739.0" width="27.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="870.8" y="750.0">e..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="892.2" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="895.2" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.03%)</title><rect x="892.5" y="723.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="895.5" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="892.5" y="707.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="895.5" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="892.5" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="895.5" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="892.5" y="675.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="895.5" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="892.5" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="895.5" y="670.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="892.5" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="895.5" y="654.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="892.5" y="627.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="895.5" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="892.5" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="895.5" y="622.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.10%)</title><rect x="892.9" y="723.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="895.9" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.03%)</title><rect x="893.3" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="896.3" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="893.7" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="896.7" y="718.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.06%)</title><rect x="894.1" y="723.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="897.1" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (2 samples, 0.06%)</title><rect x="894.1" y="707.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="897.1" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="894.8" y="739.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="897.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (32 samples, 1.03%)</title><rect x="895.2" y="739.0" width="12.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="898.2" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (31 samples, 1.00%)</title><rect x="895.6" y="723.0" width="11.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="898.6" y="734.0"></text>
</g>
<g>
<title>schedule (31 samples, 1.00%)</title><rect x="895.6" y="707.0" width="11.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="898.6" y="718.0"></text>
</g>
<g>
<title>__schedule (31 samples, 1.00%)</title><rect x="895.6" y="691.0" width="11.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="898.6" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (31 samples, 1.00%)</title><rect x="895.6" y="675.0" width="11.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="898.6" y="686.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.03%)</title><rect x="907.3" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="910.3" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.03%)</title><rect x="907.7" y="787.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="910.7" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="908.1" y="851.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="911.1" y="862.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.06%)</title><rect x="908.5" y="851.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="911.5" y="862.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="908.9" y="835.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="911.9" y="846.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="909.2" y="851.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="912.2" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="909.2" y="835.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="912.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="909.2" y="819.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="912.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="909.2" y="803.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="912.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (736 samples, 23.70%)</title><rect x="909.6" y="883.0" width="279.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.6" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (734 samples, 23.63%)</title><rect x="910.4" y="867.0" width="278.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.4" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (696 samples, 22.41%)</title><rect x="910.4" y="851.0" width="264.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.4" y="862.0">one/nio/http/HttpSession.processHtt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (685 samples, 22.05%)</title><rect x="911.1" y="835.0" width="260.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="914.1" y="846.0">one/nio/http/HttpSession.handlePars..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (685 samples, 22.05%)</title><rect x="911.1" y="819.0" width="260.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="914.1" y="830.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (680 samples, 21.89%)</title><rect x="911.5" y="803.0" width="258.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.5" y="814.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (579 samples, 18.64%)</title><rect x="911.5" y="787.0" width="220.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.5" y="798.0">one/nio/http/HttpSession.send..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (577 samples, 18.58%)</title><rect x="911.9" y="771.0" width="219.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.9" y="782.0">one/nio/http/HttpSession.writ..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.10%)</title><rect x="911.9" y="755.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.06%)</title><rect x="912.3" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="912.3" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="915.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="912.7" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="912.7" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="915.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (574 samples, 18.48%)</title><rect x="913.0" y="755.0" width="218.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="916.0" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (574 samples, 18.48%)</title><rect x="913.0" y="739.0" width="218.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.0" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="913.0" y="723.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="916.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (573 samples, 18.45%)</title><rect x="913.4" y="723.0" width="217.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="916.4" y="734.0">one/nio/net/Session$ArrayQueu..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (573 samples, 18.45%)</title><rect x="913.4" y="707.0" width="217.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="916.4" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.13%)</title><rect x="914.6" y="691.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="917.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="915.7" y="675.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="918.7" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="915.7" y="659.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="918.7" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="915.7" y="643.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="918.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="916.1" y="691.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="919.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.16%)</title><rect x="916.1" y="675.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="919.1" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.06%)</title><rect x="916.1" y="659.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="919.1" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.06%)</title><rect x="916.1" y="643.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="919.1" y="654.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.06%)</title><rect x="916.8" y="659.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="919.8" y="670.0"></text>
</g>
<g>
<title>__send (1 samples, 0.03%)</title><rect x="917.6" y="659.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="920.6" y="670.0"></text>
</g>
<g>
<title>__send (561 samples, 18.06%)</title><rect x="918.0" y="691.0" width="213.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="921.0" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (560 samples, 18.03%)</title><rect x="918.4" y="675.0" width="212.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="921.4" y="686.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (560 samples, 18.03%)</title><rect x="918.4" y="659.0" width="212.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="921.4" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (546 samples, 17.58%)</title><rect x="919.1" y="643.0" width="207.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="922.1" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (545 samples, 17.55%)</title><rect x="919.1" y="627.0" width="207.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.1" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (544 samples, 17.51%)</title><rect x="919.1" y="611.0" width="206.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="922.1" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (540 samples, 17.39%)</title><rect x="919.5" y="595.0" width="205.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="922.5" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="919.5" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="922.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (539 samples, 17.35%)</title><rect x="919.9" y="579.0" width="204.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="922.9" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.06%)</title><rect x="919.9" y="563.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="922.9" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.06%)</title><rect x="919.9" y="547.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="922.9" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="920.6" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="923.6" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="920.6" y="547.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.6" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (534 samples, 17.19%)</title><rect x="921.0" y="563.0" width="202.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="924.0" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.10%)</title><rect x="921.8" y="547.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="924.8" y="558.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="922.2" y="531.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="925.2" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="922.5" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="925.5" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.06%)</title><rect x="922.9" y="547.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="925.9" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="923.3" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="926.3" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.29%)</title><rect x="923.7" y="547.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="926.7" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.23%)</title><rect x="924.1" y="531.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="927.1" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (4 samples, 0.13%)</title><rect x="924.1" y="515.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="927.1" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.06%)</title><rect x="924.1" y="499.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="927.1" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="924.4" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="927.4" y="494.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="924.8" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="927.8" y="510.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="925.2" y="499.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="928.2" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.06%)</title><rect x="925.6" y="515.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="928.6" y="526.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="926.0" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="929.0" y="510.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="926.3" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="929.3" y="526.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="926.7" y="531.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="929.7" y="542.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="927.1" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="930.1" y="558.0"></text>
</g>
<g>
<title>tcp_push (513 samples, 16.52%)</title><rect x="927.5" y="547.0" width="194.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="930.5" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (513 samples, 16.52%)</title><rect x="927.5" y="531.0" width="194.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="930.5" y="542.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (513 samples, 16.52%)</title><rect x="927.5" y="515.0" width="194.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="930.5" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (506 samples, 16.29%)</title><rect x="928.2" y="499.0" width="192.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="931.2" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (503 samples, 16.19%)</title><rect x="929.4" y="483.0" width="191.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="932.4" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (503 samples, 16.19%)</title><rect x="929.4" y="467.0" width="191.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="932.4" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (502 samples, 16.16%)</title><rect x="929.4" y="451.0" width="190.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="932.4" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.06%)</title><rect x="929.4" y="435.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="932.4" y="446.0"></text>
</g>
<g>
<title>ip_output (500 samples, 16.10%)</title><rect x="930.1" y="435.0" width="190.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="933.1" y="446.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (498 samples, 16.03%)</title><rect x="930.9" y="419.0" width="189.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="933.9" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="930.9" y="403.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="933.9" y="414.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.06%)</title><rect x="931.3" y="403.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="934.3" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (495 samples, 15.94%)</title><rect x="932.0" y="403.0" width="188.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="935.0" y="414.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (483 samples, 15.55%)</title><rect x="932.4" y="387.0" width="183.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="935.4" y="398.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.21 (483 samples, 15.55%)</title><rect x="932.4" y="371.0" width="183.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="935.4" y="382.0">do_softirq.part.21</text>
</g>
<g>
<title>do_softirq_own_stack (483 samples, 15.55%)</title><rect x="932.4" y="355.0" width="183.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="935.4" y="366.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (483 samples, 15.55%)</title><rect x="932.4" y="339.0" width="183.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="935.4" y="350.0">__softirqentry_text_start</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="932.8" y="323.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.8" y="334.0"></text>
</g>
<g>
<title>net_rx_action (480 samples, 15.45%)</title><rect x="933.2" y="323.0" width="182.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.2" y="334.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (479 samples, 15.42%)</title><rect x="933.6" y="307.0" width="181.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="936.6" y="318.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (479 samples, 15.42%)</title><rect x="933.6" y="291.0" width="181.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="936.6" y="302.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="933.6" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="936.6" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (478 samples, 15.39%)</title><rect x="933.9" y="275.0" width="181.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="936.9" y="286.0">__netif_receive_skb_one..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.06%)</title><rect x="933.9" y="259.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="936.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv (476 samples, 15.33%)</title><rect x="934.7" y="259.0" width="180.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="937.7" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.03%)</title><rect x="934.7" y="243.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="937.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (475 samples, 15.29%)</title><rect x="935.1" y="243.0" width="180.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="938.1" y="254.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (475 samples, 15.29%)</title><rect x="935.1" y="227.0" width="180.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="938.1" y="238.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (475 samples, 15.29%)</title><rect x="935.1" y="211.0" width="180.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="938.1" y="222.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (475 samples, 15.29%)</title><rect x="935.1" y="195.0" width="180.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="938.1" y="206.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="935.1" y="179.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="938.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="935.5" y="179.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="938.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (473 samples, 15.23%)</title><rect x="935.8" y="179.0" width="179.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="938.8" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="936.2" y="163.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="939.2" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="936.6" y="163.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="939.6" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="937.0" y="163.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="940.0" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="937.0" y="147.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (469 samples, 15.10%)</title><rect x="937.4" y="163.0" width="178.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="940.4" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (469 samples, 15.10%)</title><rect x="937.4" y="147.0" width="178.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="940.4" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.06%)</title><rect x="937.4" y="131.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="940.4" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="937.4" y="115.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="940.4" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="937.7" y="115.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="940.7" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="937.7" y="99.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="940.7" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="937.7" y="83.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="940.7" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="937.7" y="67.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="940.7" y="78.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="938.1" y="131.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="941.1" y="142.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.06%)</title><rect x="938.5" y="131.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="941.5" y="142.0"></text>
</g>
<g>
<title>tcp_ack (7 samples, 0.23%)</title><rect x="939.3" y="131.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="942.3" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="939.6" y="115.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="942.6" y="126.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="940.0" y="115.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="943.0" y="126.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.03%)</title><rect x="940.4" y="115.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.4" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.06%)</title><rect x="940.8" y="115.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.8" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="941.2" y="99.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="944.2" y="110.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="941.5" y="115.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="944.5" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (452 samples, 14.55%)</title><rect x="941.9" y="131.0" width="171.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="944.9" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (448 samples, 14.42%)</title><rect x="943.1" y="115.0" width="170.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="946.1" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="943.1" y="99.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="946.1" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (447 samples, 14.39%)</title><rect x="943.4" y="99.0" width="169.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.4" y="110.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (446 samples, 14.36%)</title><rect x="943.4" y="83.0" width="169.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="946.4" y="94.0">__wake_up_common_lock</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (446 samples, 14.36%)</title><rect x="943.4" y="67.0" width="169.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="946.4" y="78.0">_raw_spin_unlock_irqre..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="1112.9" y="83.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1115.9" y="94.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="1113.3" y="115.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1116.3" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.06%)</title><rect x="1113.6" y="131.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1116.6" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="1113.6" y="115.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1116.6" y="126.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1113.6" y="99.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1116.6" y="110.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="1114.0" y="115.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1117.0" y="126.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="1114.4" y="131.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.4" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="1114.8" y="131.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1117.8" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="1115.2" y="131.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1118.2" y="142.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="1115.5" y="323.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.5" y="334.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.03%)</title><rect x="1115.5" y="307.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1118.5" y="318.0"></text>
</g>
<g>
<title>rcu_gp_kthread_wake (1 samples, 0.03%)</title><rect x="1115.5" y="291.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1118.5" y="302.0"></text>
</g>
<g>
<title>swake_up_one (1 samples, 0.03%)</title><rect x="1115.5" y="275.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1118.5" y="286.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1115.5" y="259.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1118.5" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (11 samples, 0.35%)</title><rect x="1115.9" y="387.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1118.9" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.35%)</title><rect x="1115.9" y="371.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1118.9" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.19%)</title><rect x="1116.3" y="355.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1119.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.16%)</title><rect x="1116.7" y="339.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1119.7" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="1116.7" y="323.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1119.7" y="334.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.10%)</title><rect x="1117.1" y="323.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1120.1" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="1117.1" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1120.1" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.06%)</title><rect x="1117.4" y="307.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1120.4" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.06%)</title><rect x="1117.4" y="291.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1120.4" y="302.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.03%)</title><rect x="1118.2" y="323.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1121.2" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.06%)</title><rect x="1118.6" y="355.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1121.6" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="1119.3" y="355.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1122.3" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="1119.7" y="355.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1122.7" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="1120.1" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1123.1" y="462.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="1120.5" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1123.5" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="1120.9" y="499.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1123.9" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.06%)</title><rect x="1121.2" y="499.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1124.2" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="1122.0" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1125.0" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.10%)</title><rect x="1122.4" y="547.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1125.4" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.06%)</title><rect x="1122.4" y="531.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.4" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="1123.1" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1126.1" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="1123.1" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1126.1" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="1123.5" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1126.5" y="558.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.06%)</title><rect x="1123.9" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1126.9" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.10%)</title><rect x="1124.7" y="595.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1127.7" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.10%)</title><rect x="1124.7" y="579.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1127.7" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.10%)</title><rect x="1124.7" y="563.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1127.7" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.10%)</title><rect x="1124.7" y="547.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1127.7" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.06%)</title><rect x="1124.7" y="531.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1127.7" y="542.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.06%)</title><rect x="1124.7" y="515.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1127.7" y="526.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.03%)</title><rect x="1125.0" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1128.0" y="510.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="1125.4" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1128.4" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="1125.8" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1128.8" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="1125.8" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1128.8" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1125.8" y="579.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1128.8" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="1125.8" y="563.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1128.8" y="574.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="1126.2" y="627.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1129.2" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (12 samples, 0.39%)</title><rect x="1126.6" y="643.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1129.6" y="654.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1126.6" y="627.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1129.6" y="638.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.35%)</title><rect x="1126.9" y="627.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1129.9" y="638.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.35%)</title><rect x="1126.9" y="611.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1129.9" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (10 samples, 0.32%)</title><rect x="1127.3" y="595.0" width="3.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1130.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1131.1" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1134.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1131.1" y="755.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1134.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="1131.1" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="1131.1" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1134.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="1131.1" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.1" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="1131.1" y="691.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1134.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.16%)</title><rect x="1131.5" y="787.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1134.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="1131.5" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1134.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="1131.5" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="1131.9" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1134.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="1131.9" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1134.9" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="1131.9" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.10%)</title><rect x="1132.3" y="771.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1135.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.10%)</title><rect x="1132.3" y="755.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1135.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.10%)</title><rect x="1132.3" y="739.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1135.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.10%)</title><rect x="1132.3" y="723.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1135.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.entity (96 samples, 3.09%)</title><rect x="1133.4" y="787.0" width="36.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1136.4" y="798.0">ru/..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="1133.4" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1136.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="1133.4" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.get (1 samples, 0.03%)</title><rect x="1133.4" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.get (94 samples, 3.03%)</title><rect x="1133.8" y="771.0" width="35.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1136.8" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/SimpleDAOImpl.get (93 samples, 2.99%)</title><rect x="1134.2" y="755.0" width="35.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1137.2" y="766.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="1134.2" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/745160567.invoke (1 samples, 0.03%)</title><rect x="1134.2" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="1134.2" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1137.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.03%)</title><rect x="1134.2" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1137.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (1 samples, 0.03%)</title><rect x="1134.5" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1137.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 0.03%)</title><rect x="1134.5" y="723.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1137.5" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="1134.5" y="707.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1137.5" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="1134.5" y="691.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1137.5" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="1134.5" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="1134.9" y="739.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.06%)</title><rect x="1134.9" y="723.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1137.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1134.9" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1137.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1134.9" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1134.9" y="675.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="1134.9" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1137.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.06%)</title><rect x="1134.9" y="643.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.9" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.06%)</title><rect x="1134.9" y="627.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1137.9" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1135.3" y="611.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1138.3" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1135.3" y="595.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1138.3" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1135.3" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1138.3" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1135.3" y="563.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1138.3" y="574.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (89 samples, 2.87%)</title><rect x="1135.7" y="739.0" width="33.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1138.7" y="750.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (89 samples, 2.87%)</title><rect x="1135.7" y="723.0" width="33.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.7" y="734.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (82 samples, 2.64%)</title><rect x="1135.7" y="707.0" width="31.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1138.7" y="718.0">Ja..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="1136.1" y="691.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1139.1" y="702.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="1136.4" y="691.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1139.4" y="702.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1136.8" y="691.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1139.8" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.03%)</title><rect x="1137.2" y="691.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1140.2" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.03%)</title><rect x="1137.6" y="691.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1140.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.03%)</title><rect x="1138.0" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1141.0" y="702.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (74 samples, 2.38%)</title><rect x="1138.3" y="691.0" width="28.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1141.3" y="702.0">ro..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.16%)</title><rect x="1138.7" y="675.0" width="1.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1141.7" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="1140.2" y="659.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1143.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (52 samples, 1.67%)</title><rect x="1140.6" y="675.0" width="19.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (52 samples, 1.67%)</title><rect x="1140.6" y="659.0" width="19.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (52 samples, 1.67%)</title><rect x="1140.6" y="643.0" width="19.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1143.6" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1140.6" y="627.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1143.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.03%)</title><rect x="1141.0" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (47 samples, 1.51%)</title><rect x="1141.4" y="627.0" width="17.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1144.4" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.03%)</title><rect x="1142.5" y="611.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1145.5" y="622.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="1142.9" y="611.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1145.9" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1143.3" y="611.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1146.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.03%)</title><rect x="1143.7" y="611.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="1143.7" y="595.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1146.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="1144.0" y="611.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="1144.0" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.03%)</title><rect x="1144.0" y="579.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="1144.0" y="563.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.03%)</title><rect x="1144.4" y="611.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1147.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (33 samples, 1.06%)</title><rect x="1144.8" y="611.0" width="12.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1147.8" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (32 samples, 1.03%)</title><rect x="1145.2" y="595.0" width="12.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1148.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (31 samples, 1.00%)</title><rect x="1145.2" y="579.0" width="11.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.2" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12483887078249166294.so (1 samples, 0.03%)</title><rect x="1151.2" y="563.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1154.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1151.2" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1154.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1151.2" y="531.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1154.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1151.2" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1154.2" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.10%)</title><rect x="1151.6" y="563.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1154.6" y="574.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1152.8" y="563.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1155.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.26%)</title><rect x="1153.1" y="563.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1156.1" y="574.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (4 samples, 0.13%)</title><rect x="1153.9" y="547.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1156.9" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.06%)</title><rect x="1155.4" y="547.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1158.4" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1155.8" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1158.8" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1155.8" y="515.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1158.8" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1155.8" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1158.8" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.06%)</title><rect x="1156.2" y="563.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1159.2" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.06%)</title><rect x="1156.2" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1159.2" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.06%)</title><rect x="1156.2" y="531.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1159.2" y="542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1156.6" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.6" y="526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1156.6" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.6" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1156.6" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.6" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1156.6" y="467.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1159.6" y="478.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.03%)</title><rect x="1156.6" y="451.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1159.6" y="462.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.03%)</title><rect x="1156.6" y="435.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.6" y="446.0"></text>
</g>
<g>
<title>rcu_gp_kthread_wake (1 samples, 0.03%)</title><rect x="1156.6" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1159.6" y="430.0"></text>
</g>
<g>
<title>swake_up_one (1 samples, 0.03%)</title><rect x="1156.6" y="403.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1159.6" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1156.6" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1159.6" y="398.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="1156.9" y="579.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.03%)</title><rect x="1157.3" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1160.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.06%)</title><rect x="1157.7" y="611.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.7" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.06%)</title><rect x="1158.5" y="611.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1161.5" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.06%)</title><rect x="1158.5" y="595.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1161.5" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.06%)</title><rect x="1158.5" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1161.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="1159.2" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.03%)</title><rect x="1159.6" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.03%)</title><rect x="1160.0" y="627.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.03%)</title><rect x="1160.4" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (15 samples, 0.48%)</title><rect x="1160.7" y="675.0" width="5.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.7" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.48%)</title><rect x="1160.7" y="659.0" width="5.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1163.7" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (12 samples, 0.39%)</title><rect x="1161.9" y="643.0" width="4.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1164.9" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.23%)</title><rect x="1163.8" y="627.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1166.8" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.19%)</title><rect x="1163.8" y="611.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1166.8" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.10%)</title><rect x="1164.9" y="595.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1167.9" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1165.7" y="579.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1168.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1165.7" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1168.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1165.7" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1168.7" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1166.1" y="611.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1169.1" y="622.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.03%)</title><rect x="1166.4" y="691.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="1166.8" y="707.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1169.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="1166.8" y="691.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1169.8" y="702.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="1166.8" y="675.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1169.8" y="686.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.06%)</title><rect x="1167.2" y="675.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="1167.6" y="659.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1170.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="1167.6" y="643.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1170.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="1167.6" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1170.6" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="1167.6" y="611.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1170.6" y="622.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1167.6" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1170.6" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="1167.6" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1170.6" y="590.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="1168.0" y="707.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1171.0" y="718.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.10%)</title><rect x="1168.3" y="707.0" width="1.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1171.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/bezrukova/SimpleServiceImpl.put (1 samples, 0.03%)</title><rect x="1169.5" y="771.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="1169.5" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="1169.5" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1172.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1169.5" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1172.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1169.5" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1172.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1169.5" y="691.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1172.5" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="1169.5" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1172.5" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1169.5" y="659.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1172.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.06%)</title><rect x="1169.9" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1172.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.06%)</title><rect x="1169.9" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1172.9" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.06%)</title><rect x="1169.9" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1172.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.06%)</title><rect x="1169.9" y="755.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1172.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="1170.2" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1173.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.06%)</title><rect x="1170.6" y="803.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1173.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.06%)</title><rect x="1170.6" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1173.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.06%)</title><rect x="1170.6" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1173.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.06%)</title><rect x="1170.6" y="755.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1173.6" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.06%)</title><rect x="1170.6" y="739.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1173.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.26%)</title><rect x="1171.4" y="835.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1174.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.13%)</title><rect x="1172.9" y="819.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1175.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.13%)</title><rect x="1172.9" y="803.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1175.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1174.4" y="835.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1177.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="1174.4" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="1174.4" y="803.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1177.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="1174.4" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="1174.4" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.4" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="1174.4" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1177.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (38 samples, 1.22%)</title><rect x="1174.8" y="851.0" width="14.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1177.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (38 samples, 1.22%)</title><rect x="1174.8" y="835.0" width="14.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1177.8" y="846.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.03%)</title><rect x="1175.2" y="819.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1178.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.26%)</title><rect x="1175.6" y="819.0" width="3.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1178.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.26%)</title><rect x="1175.6" y="803.0" width="3.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1178.6" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.06%)</title><rect x="1175.6" y="787.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1178.6" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.19%)</title><rect x="1176.3" y="787.0" width="2.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1179.3" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.13%)</title><rect x="1176.3" y="771.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1179.3" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3 samples, 0.10%)</title><rect x="1176.7" y="755.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1179.7" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2 samples, 0.06%)</title><rect x="1177.1" y="739.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1180.1" y="750.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.06%)</title><rect x="1177.8" y="771.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1180.8" y="782.0"></text>
</g>
<g>
<title>__GI___recv (28 samples, 0.90%)</title><rect x="1178.6" y="819.0" width="10.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1181.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.90%)</title><rect x="1178.6" y="803.0" width="10.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1181.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.90%)</title><rect x="1178.6" y="787.0" width="10.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1181.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (28 samples, 0.90%)</title><rect x="1178.6" y="771.0" width="10.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1181.6" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (27 samples, 0.87%)</title><rect x="1178.6" y="755.0" width="10.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1181.6" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="1179.0" y="739.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.0" y="750.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="1179.4" y="739.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1182.4" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (23 samples, 0.74%)</title><rect x="1179.7" y="739.0" width="8.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1182.7" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (16 samples, 0.52%)</title><rect x="1179.7" y="723.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1182.7" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="1179.7" y="707.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.7" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="1180.5" y="707.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1183.5" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.42%)</title><rect x="1180.9" y="707.0" width="4.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1183.9" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.06%)</title><rect x="1181.3" y="691.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1184.3" y="702.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.06%)</title><rect x="1181.3" y="675.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1184.3" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1181.3" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1184.3" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="1181.6" y="659.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1184.6" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.03%)</title><rect x="1182.0" y="691.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1185.0" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="1182.4" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1185.4" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="1182.8" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.8" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="1182.8" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1185.8" y="686.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="1182.8" y="659.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.8" y="670.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="1183.2" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.2" y="702.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="1183.2" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1186.2" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.13%)</title><rect x="1183.5" y="691.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.5" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.13%)</title><rect x="1183.5" y="675.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1186.5" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="1183.5" y="659.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1186.5" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.06%)</title><rect x="1183.9" y="659.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1186.9" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="1184.7" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1187.7" y="670.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="1184.7" y="643.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1187.7" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="1184.7" y="627.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1187.7" y="638.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="1185.1" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1188.1" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="1185.4" y="691.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1188.4" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="1185.4" y="675.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1188.4" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.23%)</title><rect x="1185.8" y="723.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1188.8" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.19%)</title><rect x="1186.2" y="707.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1189.2" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.19%)</title><rect x="1186.2" y="691.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1189.2" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.19%)</title><rect x="1186.2" y="675.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1189.2" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.13%)</title><rect x="1187.0" y="659.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1190.0" y="670.0"></text>
</g>
<g>
<title>aa_apply_modes_to_perms (1 samples, 0.03%)</title><rect x="1187.0" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1190.0" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.10%)</title><rect x="1187.3" y="643.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1190.3" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="1188.5" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1191.5" y="750.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="1188.5" y="723.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1191.5" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1188.5" y="707.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1191.5" y="718.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="1188.9" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1191.9" y="766.0"></text>
</g>
<g>
<title>[tid=55606] (2 samples, 0.06%)</title><rect x="1189.2" y="915.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.2" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.03%)</title><rect x="1189.2" y="899.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1192.2" y="910.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="1189.6" y="899.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1192.6" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="1189.6" y="883.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1192.6" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="1189.6" y="867.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1192.6" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="1189.6" y="851.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1192.6" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="1189.6" y="835.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.6" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="1189.6" y="819.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="1189.6" y="803.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1192.6" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1 samples, 0.03%)</title><rect x="1189.6" y="787.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1192.6" y="798.0"></text>
</g>
</g>
</svg>
